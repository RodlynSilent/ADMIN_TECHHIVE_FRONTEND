{"ast":null,"code":"var _jsxFileName = \"/Users/richardmolina/Documents/admin_frontend/src/SuperUser pages/SUHome/SUHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport Loadable from 'react-loadable';\nimport moment from 'moment';\nimport SUNavBar from \"../../components/SUNavBar\";\nimport \"./SUHome.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SUComment = Loadable({\n  loader: () => import('./SUComment'),\n  loading: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 20\n  }, this)\n});\nconst SUHome = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isOverlayVisible, setOverlayVisible] = useState(false);\n  const [newPostContent, setNewPostContent] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [currentPostId, setCurrentPostId] = useState(null);\n  const [currentPostOwner, setCurrentPostOwner] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);\n  const [loggedInSuperUser, setLoggedInSuperUser] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\n  const [isDeleteCommentDialogOpen, setIsDeleteCommentDialogOpen] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [profilePicture, setProfilePicture] = useState(null); // State to hold profile picture\n  const [superuserProfilePictures, setSuperUserProfilePictures] = useState({});\n  const defaultProfile = '/dp.png'; // Path to the default profile picture\n  const [inputHasContent, setInputHasContent] = useState(false);\n  const [showCancelButton, setShowCancelButton] = useState(false);\n  const [showCloseButton, setShowCloseButton] = useState(false);\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    const fetchLoggedInSuperUser = async () => {\n      const storedSuperUser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\"));\n      if (storedSuperUser && storedSuperUser.superusername) {\n        try {\n          const response = await axios.get(`http://localhost:8080/superuser/getBySuperUsername?superusername=${storedSuperUser.superusername}`);\n          setLoggedInSuperUser(response.data);\n          console.log(\"Fetch superuser data:\", response.data);\n        } catch (error) {\n          console.error(\"Error fetching superuser data:\", error);\n        }\n      }\n    };\n    fetchLoggedInSuperUser();\n  }, []);\n  const fetchSuperUserProfilePicture = useCallback(async superuserId => {\n    try {\n      const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        const imageUrl = URL.createObjectURL(imageBlob);\n        setSuperUserProfilePictures(prev => ({\n          ...prev,\n          [superuserId]: imageUrl\n        }));\n      } else {\n        setSuperUserProfilePictures(prev => ({\n          ...prev,\n          [superuserId]: defaultProfile\n        }));\n      }\n    } catch (error) {\n      console.error('Failed to fetch superuser profile picture:', error);\n      setSuperUserProfilePictures(prev => ({\n        ...prev,\n        [superuserId]: defaultProfile\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    const fetchPostsandPictures = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/posts\");\n        console.log(\"Fetched posts data:\", response.data);\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setPosts(sortedPosts);\n        const superuserIds = new Set(sortedPosts.map(post => post.superuserId));\n        superuserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPostsandPictures();\n  }, [fetchSuperUserProfilePicture]);\n  useEffect(() => {\n    if (currentPostId) {\n      const fetchCommentsAndPictures = async () => {\n        try {\n          const [commentsResponse, postResponse] = await Promise.all([axios.get(`http://localhost:8080/comments/${currentPostId}`), axios.get(`http://localhost:8080/posts/${currentPostId}`)]);\n          const sortedComments = commentsResponse.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(comment => ({\n            ...comment,\n            relativeTime: moment(comment.timestamp).fromNow()\n          }));\n          setComments(sortedComments);\n          setCurrentPostOwner(postResponse.data.superuserId);\n          const commentSuperUserIds = new Set(sortedComments.map(comment => comment.superuserId));\n          commentSuperUserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\n        } catch (error) {\n          console.error(\"Error fetching comments or post details:\", error);\n        }\n      };\n      fetchCommentsAndPictures();\n    }\n  }, [currentPostId, fetchSuperUserProfilePicture]);\n  const fetchLoggedInSuperUsers = useCallback(() => {\n    const superuser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\")) || null;\n    setLoggedInSuperUser(superuser);\n    return superuser;\n  }, []);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/posts\");\n        console.log(\"Fetched posts data:\", response.data); // Log fetched posts data\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setPosts(sortedPosts);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    if (!(\"webkitSpeechRecognition\" in window)) {\n      console.log(\"Speech recognition not supported in this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setComments(prevComments => prevComments.map(comment => ({\n        ...comment,\n        relativeTime: moment(comment.timestamp).fromNow()\n      })).sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)));\n    }, 60000);\n    return () => clearInterval(timer);\n  }, []);\n  const toggleOverlay = useCallback(() => {\n    setOverlayVisible(!isOverlayVisible);\n  }, [isOverlayVisible]);\n  const onClose = useCallback(() => {\n    setOverlayVisible(false);\n  }, []);\n  const onREPORTSClick = useCallback(() => {\n    navigate(\"/adentry\");\n  }, [navigate]);\n  const onPROFILEClick = useCallback(() => {\n    navigate(\"/adprofile\");\n  }, [navigate]);\n  const onLEADERBOARDSClick = useCallback(() => {\n    navigate(\"/adleaderboard\");\n  }, [navigate]);\n  const handlePostInputChange = e => {\n    const content = e.target.value;\n    setNewPostContent(content);\n    setShowCloseButton(content.length > 0 || imagePreview !== null);\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n        setShowCloseButton(true);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const fetchProfilePicture = useCallback(async superuserId => {\n    try {\n      const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        if (imageBlob.size > 0) {\n          const imageUrl = URL.createObjectURL(imageBlob);\n          setProfilePicture(imageUrl);\n        } else {\n          setProfilePicture(defaultProfile);\n        }\n      } else {\n        setProfilePicture(defaultProfile);\n      }\n    } catch (error) {\n      console.error('Failed to fetch profile picture:', error);\n      setProfilePicture(defaultProfile);\n    }\n  }, [defaultProfile]);\n  useEffect(() => {\n    const superuser = fetchLoggedInSuperUsers();\n    if (superuser) {\n      fetchProfilePicture(superuser.superuserId);\n    }\n  }, [fetchLoggedInSuperUsers, fetchProfilePicture]);\n  const handleMicClick = () => {\n    if (!(\"webkitSpeechRecognition\" in window)) return;\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.lang = \"en-US\";\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setNewPostContent(prevContent => prevContent + \" \" + transcript);\n    };\n    recognition.onerror = event => {\n      console.log(\"Speech recognition error:\", event.error);\n    };\n    recognition.start();\n  };\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    if (!newPostContent && !imagePreview) {\n      alert(\"Please enter a post or select a picture before submitting.\");\n      return;\n    }\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to post.\");\n      return;\n    }\n\n    // Prepare the post object with superuser data\n    const newPost = {\n      content: newPostContent,\n      image: imagePreview,\n      superUserId: loggedInSuperUser.superUserId,\n      // Correct key name for backend\n      fullName: loggedInSuperUser.fullName,\n      idNumber: loggedInSuperUser.superUserIdNumber,\n      isVerified: false,\n      likes: 0,\n      dislikes: 0\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8080/posts/add\", newPost, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(prevPosts => [response.data, ...prevPosts]);\n      setNewPostContent(\"\");\n      setSelectedFile(null);\n      setImagePreview(null);\n      setShowCloseButton(false);\n    } catch (error) {\n      console.error(\"Error posting data:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n      }\n    }\n  };\n  const handleLike = async postId => {\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to like posts.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/like?superuserId=${loggedInSuperUser.superuserId}`);\n      const updatedPost = response.data;\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n  const handleDislike = async postId => {\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to dislike posts.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/dislike?superuserId=${loggedInSuperUser.superuserId}`);\n      const updatedPost = response.data;\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n  const handleOpenComments = async postId => {\n    setCurrentPostId(postId);\n    try {\n      const [commentsResponse, postResponse] = await Promise.all([axios.get(`http://localhost:8080/comments/${postId}`), axios.get(`http://localhost:8080/posts/${postId}`)]);\n      const sortedComments = commentsResponse.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(comment => ({\n        ...comment,\n        relativeTime: moment(comment.timestamp).fromNow()\n      }));\n      setComments(sortedComments);\n      setCurrentPostOwner(postResponse.data.superuserId);\n    } catch (error) {\n      console.error(\"Error fetching comments or post details:\", error);\n    }\n    setIsCommentDialogOpen(true);\n  };\n  const handleCloseComments = () => {\n    setIsCommentDialogOpen(false);\n    setCurrentPostId(null);\n  };\n  const handleAddComment = async () => {\n    if (newComment.trim() === '') return;\n    const comment = {\n      content: newComment,\n      postId: currentPostId,\n      superuserId: loggedInSuperUser.superuserId,\n      fullName: loggedInSuperUser.fullName,\n      superuseridNumber: loggedInSuperUser.superuseridNumber\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/comments/add', comment);\n      const newCommentWithRelativeTime = {\n        ...response.data,\n        relativeTime: moment(response.data.timestamp).fromNow()\n      };\n      setComments(prevComments => [newCommentWithRelativeTime, ...prevComments]);\n      setNewComment('');\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n      }\n    }\n  };\n  const handleDeletePost = postId => {\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to delete posts.\");\n      return;\n    }\n    setItemToDelete(postId);\n    setIsDeletePostDialogOpen(true);\n  };\n  const handleDeleteComment = (commentId, commentSuperUserId) => {\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to delete comments.\");\n      return;\n    }\n    if (loggedInSuperUser.superuserId === commentSuperUserId || loggedInSuperUser.superuserId === currentPostOwner) {\n      setItemToDelete(commentId);\n      setIsDeleteCommentDialogOpen(true);\n    } else {\n      alert(\"You don't have permission to delete this comment.\");\n    }\n  };\n  const confirmDeletePost = async () => {\n    try {\n      await axios.delete(`http://localhost:8080/posts/${itemToDelete}`);\n      setPosts(posts.filter(post => post.postId !== itemToDelete));\n      setIsDeletePostDialogOpen(false);\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n    }\n  };\n  const confirmDeleteComment = async () => {\n    try {\n      await axios.delete(`http://localhost:8080/comments/${itemToDelete}`, {\n        params: {\n          superuserId: loggedInSuperUser.superuserId\n        }\n      });\n      setComments(comments.filter(comment => comment.commentId !== itemToDelete));\n      setIsDeleteCommentDialogOpen(false);\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n      alert(\"Failed to delete comment. You may not have permission.\");\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const momentDate = moment(timestamp);\n    return momentDate.format('dddd, MMMM D, YYYY [at] h:mm A');\n  };\n  const getRelativeTime = timestamp => {\n    return moment(timestamp).fromNow();\n  };\n  const handleClosePost = () => {\n    setNewPostContent('');\n    setImagePreview(null);\n    setShowCloseButton(false);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adhome\",\n    children: [/*#__PURE__*/_jsxDEV(SUNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"HWildcat\",\n      children: \"WILDCAT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profilePicture || defaultProfile,\n            alt: \"SuperUser Avatar\",\n            className: \"superusers-dp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handlePostSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"post-input\",\n                value: newPostContent,\n                onChange: handlePostInputChange,\n                placeholder: \"What's happening in your day, Wildcat?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 33\n              }, this), showCloseButton && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"close-button\",\n                onClick: handleClosePost,\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-subcontainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-subcontainer-icons\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"file-upload\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"gallery-icon\",\n                    alt: \"\",\n                    src: \"/gallery.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: fileInputRef,\n                  id: \"file-upload\",\n                  type: \"file\",\n                  className: \"file-input\",\n                  style: {\n                    display: \"none\"\n                  },\n                  onChange: handleFileChange,\n                  onClick: e => {\n                    e.target.value = null;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"mic-icon\",\n                  alt: \"Mic\",\n                  src: \"/mic.png\",\n                  onClick: handleMicClick,\n                  style: {\n                    cursor: \"pointer\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"post-button\",\n                variant: \"contained\",\n                sx: {\n                  borderRadius: \"10px\",\n                  width: 60,\n                  height: 30,\n                  backgroundColor: \"#8A252C\",\n                  \"&:hover\": {\n                    backgroundColor: \"#A91D3A\"\n                  }\n                },\n                children: \"POST\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 25\n          }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imagePreview,\n              alt: \"Preview\",\n              style: {\n                width: '100px',\n                height: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-list\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: superuserProfilePictures[post.superuserId] || defaultProfile,\n                alt: \"SuperUser Avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [post.fullName, \" (\", post.superuseridNumber, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 37\n              }, this), loggedInSuperUser && loggedInSuperUser.superuserId === post.superuserId && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/delete.png\",\n                alt: \"Delete\",\n                className: \"delete-icon\",\n                onClick: () => handleDeletePost(post.postId),\n                style: {\n                  cursor: 'pointer',\n                  width: '20px',\n                  height: '20px',\n                  marginLeft: 'auto'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timestamp\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"formatted-date\",\n                children: formatTimestamp(post.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"relative-time\",\n                children: getRelativeTime(post.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-contents\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 37\n              }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"post-image\",\n                alt: \"Post\",\n                src: post.image,\n                style: {\n                  maxWidth: '100%',\n                  height: 'auto'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer-icons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleLike(post.postId),\n                  className: `like-button ${post.likedBy.includes(loggedInSuperUser === null || loggedInSuperUser === void 0 ? void 0 : loggedInSuperUser.superuserId) ? 'active' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/t-up.png\",\n                    alt: \"Thumbs Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 547,\n                    columnNumber: 45\n                  }, this), \" \", post.likes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDislike(post.postId),\n                  className: `dislike-button ${post.dislikedBy.includes(loggedInSuperUser === null || loggedInSuperUser === void 0 ? void 0 : loggedInSuperUser.superuserId) ? 'active' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/t-down.png\",\n                    alt: \"Thumbs Down\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 45\n                  }, this), \" \", post.dislikes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer-comments\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment-button\",\n                  onClick: () => handleOpenComments(post.postId),\n                  children: \"Comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 557,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 29\n          }, this)\n        }, post.postId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isCommentDialogOpen,\n      onClose: handleCloseComments,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Comments\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/exit.png\",\n          alt: \"Close\",\n          className: \"exit-icon\",\n          onClick: handleCloseComments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"superuser-info-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"superuser-info\",\n                children: [comment.fullName, \" (\", comment.superuseridNumber, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 37\n              }, this), loggedInSuperUser && (loggedInSuperUser.superuserId === comment.superuserId || loggedInSuperUser.superuserId === currentPostOwner) && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/delete.png\",\n                alt: \"Delete\",\n                className: \"delete-icon\",\n                onClick: () => handleDeleteComment(comment.commentId, comment.superuserId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timestamp-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"formatted-time\",\n                children: formatTimestamp(comment.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"relative-time\",\n                children: comment.relativeTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 29\n          }, this)]\n        }, comment.commentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-comment\",\n          style: {\n            display: 'flex',\n            width: '100%',\n            padding: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Add a comment...\",\n            style: {\n              flexGrow: 1,\n              marginRight: '10px',\n              padding: '8px',\n              border: '1px solid #ccc',\n              borderRadius: '4px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddComment,\n            variant: \"contained\",\n            sx: {\n              backgroundColor: '#8A252C',\n              color: 'white',\n              '&:hover': {\n                backgroundColor: '#f9d67b',\n                color: 'black'\n              },\n              transition: 'all 0.3s ease'\n            },\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isDeletePostDialogOpen,\n      onClose: () => setIsDeletePostDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: \"Are you sure you want to delete this post?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: \"delete-dialog-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setIsDeletePostDialogOpen(false),\n          className: \"cancel-button\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: confirmDeletePost,\n          className: \"delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isDeleteCommentDialogOpen,\n      onClose: () => setIsDeleteCommentDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: \"Are you sure you want to delete this comment?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: \"delete-dialog-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setIsDeleteCommentDialogOpen(false),\n          className: \"cancel-button\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: confirmDeleteComment,\n          className: \"delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 651,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 437,\n    columnNumber: 9\n  }, this);\n};\n_s(SUHome, \"YabgERXpDuUDXxqmmhnKMdQkmzk=\", false, function () {\n  return [useNavigate];\n});\n_c = SUHome;\nexport default SUHome;\nvar _c;\n$RefreshReg$(_c, \"SUHome\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","useNavigate","Button","Dialog","DialogTitle","DialogContent","DialogActions","Loadable","moment","SUNavBar","jsxDEV","_jsxDEV","SUComment","loader","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","SUHome","_s","navigate","isOverlayVisible","setOverlayVisible","newPostContent","setNewPostContent","posts","setPosts","selectedFile","setSelectedFile","imagePreview","setImagePreview","currentPostId","setCurrentPostId","currentPostOwner","setCurrentPostOwner","comments","setComments","isCommentDialogOpen","setIsCommentDialogOpen","loggedInSuperUser","setLoggedInSuperUser","newComment","setNewComment","isDeletePostDialogOpen","setIsDeletePostDialogOpen","isDeleteCommentDialogOpen","setIsDeleteCommentDialogOpen","itemToDelete","setItemToDelete","profilePicture","setProfilePicture","superuserProfilePictures","setSuperUserProfilePictures","defaultProfile","inputHasContent","setInputHasContent","showCancelButton","setShowCancelButton","showCloseButton","setShowCloseButton","fileInputRef","fetchLoggedInSuperUser","storedSuperUser","JSON","parse","localStorage","getItem","superusername","response","get","data","console","log","error","fetchSuperUserProfilePicture","superuserId","fetch","ok","imageBlob","blob","imageUrl","URL","createObjectURL","prev","fetchPostsandPictures","sortedPosts","sort","a","b","Date","timestamp","superuserIds","Set","map","post","forEach","fetchCommentsAndPictures","commentsResponse","postResponse","Promise","all","sortedComments","comment","relativeTime","fromNow","commentSuperUserIds","fetchLoggedInSuperUsers","superuser","fetchPosts","window","timer","setInterval","prevComments","clearInterval","toggleOverlay","onClose","onREPORTSClick","onPROFILEClick","onLEADERBOARDSClick","handlePostInputChange","e","content","target","value","length","handleFileChange","event","file","files","reader","FileReader","onloadend","result","readAsDataURL","fetchProfilePicture","size","handleMicClick","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","transcript","results","prevContent","onerror","start","handlePostSubmit","preventDefault","alert","newPost","image","superUserId","fullName","idNumber","superUserIdNumber","isVerified","likes","dislikes","headers","prevPosts","status","handleLike","postId","updatedPost","handleDislike","handleOpenComments","handleCloseComments","handleAddComment","trim","superuseridNumber","newCommentWithRelativeTime","handleDeletePost","handleDeleteComment","commentId","commentSuperUserId","confirmDeletePost","delete","filter","confirmDeleteComment","params","formatTimestamp","momentDate","format","getRelativeTime","handleClosePost","current","className","src","alt","onSubmit","type","onChange","placeholder","onClick","htmlFor","ref","id","style","display","cursor","variant","sx","borderRadius","width","height","backgroundColor","marginLeft","maxWidth","likedBy","includes","dislikedBy","open","padding","flexGrow","marginRight","border","color","transition","_c","$RefreshReg$"],"sources":["/Users/richardmolina/Documents/admin_frontend/src/SuperUser pages/SUHome/SUHome.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport Loadable from 'react-loadable';\nimport moment from 'moment';\nimport SUNavBar from \"../../components/SUNavBar\";\nimport \"./SUHome.css\";\n\nconst SUComment = Loadable({\n    loader: () => import('./SUComment'),\n    loading: () => <div>Loading...</div>,\n});\n\nconst SUHome = () => {\n    const navigate = useNavigate();\n    const [isOverlayVisible, setOverlayVisible] = useState(false);\n    const [newPostContent, setNewPostContent] = useState(\"\");\n    const [posts, setPosts] = useState([]);\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [imagePreview, setImagePreview] = useState(null);\n    const [currentPostId, setCurrentPostId] = useState(null);\n    const [currentPostOwner, setCurrentPostOwner] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);\n    const [loggedInSuperUser, setLoggedInSuperUser] = useState(null);\n    const [newComment, setNewComment] = useState('');\n    const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\n    const [isDeleteCommentDialogOpen, setIsDeleteCommentDialogOpen] = useState(false);\n    const [itemToDelete, setItemToDelete] = useState(null);\n    const [profilePicture, setProfilePicture] = useState(null); // State to hold profile picture\n    const [superuserProfilePictures, setSuperUserProfilePictures] = useState({});\n    const defaultProfile = '/dp.png'; // Path to the default profile picture\n    const [inputHasContent, setInputHasContent] = useState(false);\n    const [showCancelButton, setShowCancelButton] = useState(false);\n    const [showCloseButton, setShowCloseButton] = useState(false);\n\n    const fileInputRef = useRef(null);\n\n    useEffect(() => {\n        const fetchLoggedInSuperUser = async () => {\n            const storedSuperUser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\"));\n            if (storedSuperUser && storedSuperUser.superusername) {\n                try {\n                    const response = await axios.get(`http://localhost:8080/superuser/getBySuperUsername?superusername=${storedSuperUser.superusername}`);\n                    setLoggedInSuperUser(response.data);\n                    console.log(\"Fetch superuser data:\", response.data);\n                } catch (error) {\n                    console.error(\"Error fetching superuser data:\", error);\n                }\n            }\n        };\n        fetchLoggedInSuperUser();\n    }, []);\n\n    const fetchSuperUserProfilePicture = useCallback(async (superuserId) => {\n        try {\n            const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\n            if (response.ok) {\n                const imageBlob = await response.blob();\n                const imageUrl = URL.createObjectURL(imageBlob);\n                setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: imageUrl }));\n            } else {\n                setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: defaultProfile }));\n            }\n        } catch (error) {\n            console.error('Failed to fetch superuser profile picture:', error);\n            setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: defaultProfile }));\n        }\n    }, []);\n\n    useEffect(() => {\n        const fetchPostsandPictures = async () => {\n            try {\n                const response = await axios.get(\"http://localhost:8080/posts\");\n                console.log(\"Fetched posts data:\", response.data);\n                const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n                setPosts(sortedPosts);\n\n                const superuserIds = new Set(sortedPosts.map(post => post.superuserId));\n                superuserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\n            } catch (error) {\n                console.error(\"Error fetching posts:\", error);\n            }\n        };\n        fetchPostsandPictures();\n    }, [fetchSuperUserProfilePicture]);\n\n    useEffect(() => {\n        if (currentPostId) {\n            const fetchCommentsAndPictures = async () => {\n                try {\n                    const [commentsResponse, postResponse] = await Promise.all([\n                        axios.get(`http://localhost:8080/comments/${currentPostId}`),\n                        axios.get(`http://localhost:8080/posts/${currentPostId}`)\n                    ]);\n                    const sortedComments = commentsResponse.data\n                    .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n                    .map(comment => ({\n                        ...comment,\n                        relativeTime: moment(comment.timestamp).fromNow()\n                    }));\n                setComments(sortedComments);\n                setCurrentPostOwner(postResponse.data.superuserId);\n\n                const commentSuperUserIds = new Set(sortedComments.map(comment => comment.superuserId));\n                commentSuperUserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\n            } catch (error) {\n              console.error(\"Error fetching comments or post details:\", error);\n            }\n          };\n          fetchCommentsAndPictures();\n        }\n    }, [currentPostId, fetchSuperUserProfilePicture]);\n\n    const fetchLoggedInSuperUsers = useCallback(() => {\n        const superuser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\")) || null;\n        setLoggedInSuperUser(superuser);\n        return superuser;\n    }, []);\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const response = await axios.get(\"http://localhost:8080/posts\");\n                console.log(\"Fetched posts data:\", response.data); // Log fetched posts data\n                const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n                setPosts(sortedPosts);\n            } catch (error) {\n                console.error(\"Error fetching posts:\", error);\n            }\n        };\n        fetchPosts();\n    }, []);\n\n    useEffect(() => {\n        if (!(\"webkitSpeechRecognition\" in window)) {\n            console.log(\"Speech recognition not supported in this browser.\");\n        }\n    }, []);\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setComments(prevComments => \n                prevComments\n                .map(comment => ({\n                    ...comment,\n                    relativeTime: moment(comment.timestamp).fromNow()\n                }))\n                .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n            );\n        }, 60000);\n        return () => clearInterval(timer);\n    }, []);\n\n    const toggleOverlay = useCallback(() => {\n        setOverlayVisible(!isOverlayVisible);\n    }, [isOverlayVisible]);\n\n    const onClose = useCallback(() => {\n        setOverlayVisible(false);\n    }, []);\n\n    const onREPORTSClick = useCallback(() => {\n        navigate(\"/adentry\");\n    }, [navigate]);\n\n    const onPROFILEClick = useCallback(() => {\n        navigate(\"/adprofile\");\n    }, [navigate]);\n\n    const onLEADERBOARDSClick = useCallback(() => {\n        navigate(\"/adleaderboard\");\n    }, [navigate]);\n\n    const handlePostInputChange = (e) => {\n        const content = e.target.value;\n        setNewPostContent(content);\n        setShowCloseButton(content.length > 0 || imagePreview !== null);\n    };\n\n    const handleFileChange = (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            const reader = new FileReader();\n            reader.onloadend = () => {\n                setImagePreview(reader.result);\n                setShowCloseButton(true);\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    const fetchProfilePicture = useCallback(async (superuserId) => {\n        try {\n            const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\n            if (response.ok) {\n                const imageBlob = await response.blob();\n                if (imageBlob.size > 0) {\n                    const imageUrl = URL.createObjectURL(imageBlob);\n                    setProfilePicture(imageUrl);\n                } else {\n                    setProfilePicture(defaultProfile);\n                }\n            } else {\n                setProfilePicture(defaultProfile);\n            }\n        } catch (error) {\n            console.error('Failed to fetch profile picture:', error);\n            setProfilePicture(defaultProfile);\n        }\n    }, [defaultProfile]);\n\n    useEffect(() => {\n        const superuser = fetchLoggedInSuperUsers();\n        if (superuser) {\n            fetchProfilePicture(superuser.superuserId);\n        }\n    }, [fetchLoggedInSuperUsers, fetchProfilePicture]);\n\n    const handleMicClick = () => {\n        if (!(\"webkitSpeechRecognition\" in window)) return;\n        const recognition = new window.webkitSpeechRecognition();\n        recognition.continuous = false;\n        recognition.interimResults = false;\n        recognition.lang = \"en-US\";\n        recognition.onresult = (event) => {\n            const transcript = event.results[0][0].transcript;\n            setNewPostContent((prevContent) => prevContent + \" \" + transcript);\n        };\n        recognition.onerror = (event) => {\n            console.log(\"Speech recognition error:\", event.error);\n        };\n        recognition.start();\n    };\n\n    const handlePostSubmit = async (e) => {\n      e.preventDefault();\n  \n      if (!newPostContent && !imagePreview) {\n        alert(\"Please enter a post or select a picture before submitting.\");\n        return;\n      }\n  \n      if (!loggedInSuperUser) {\n        alert(\"Please log in to post.\");\n        return;\n      }\n  \n      // Prepare the post object with superuser data\n      const newPost = {\n        content: newPostContent,\n        image: imagePreview,\n        superUserId: loggedInSuperUser.superUserId, // Correct key name for backend\n        fullName: loggedInSuperUser.fullName,\n        idNumber: loggedInSuperUser.superUserIdNumber,\n        isVerified: false,\n        likes: 0,\n        dislikes: 0,\n      };\n  \n      try {\n        const response = await axios.post(\"http://localhost:8080/posts/add\", newPost, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n  \n        setPosts(prevPosts => [response.data, ...prevPosts]);\n        setNewPostContent(\"\");\n        setSelectedFile(null);\n        setImagePreview(null);\n        setShowCloseButton(false);\n      } catch (error) {\n        console.error(\"Error posting data:\", error);\n        if (error.response) {\n          console.error(\"Response data:\", error.response.data);\n          console.error(\"Response status:\", error.response.status);\n        }\n      }\n    };\n  \n  \n\n    const handleLike = async (postId) => {\n        if (!loggedInSuperUser) {\n            alert(\"Please log in to like posts.\");\n            return;\n        }\n        try {\n            const response = await axios.post(`http://localhost:8080/posts/${postId}/like?superuserId=${loggedInSuperUser.superuserId}`);\n            const updatedPost = response.data;\n            setPosts(posts.map(post =>\n                post.postId === postId ? updatedPost : post\n            ));\n        } catch (error) {\n            console.error(\"Error liking post:\", error);\n        }\n    };\n\n    const handleDislike = async (postId) => {\n        if (!loggedInSuperUser) {\n            alert(\"Please log in to dislike posts.\");\n            return;\n        }\n        try {\n            const response = await axios.post(`http://localhost:8080/posts/${postId}/dislike?superuserId=${loggedInSuperUser.superuserId}`);\n            const updatedPost = response.data;\n            setPosts(posts.map(post =>\n                post.postId === postId ? updatedPost : post\n            ));\n        } catch (error) {\n            console.error(\"Error disliking post:\", error);\n        }\n    };\n\n    const handleOpenComments = async (postId) => {\n        setCurrentPostId(postId);\n        try {\n            const [commentsResponse, postResponse] = await Promise.all([\n                axios.get(`http://localhost:8080/comments/${postId}`),\n                axios.get(`http://localhost:8080/posts/${postId}`)\n            ]);\n            const sortedComments = commentsResponse.data\n                .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n                .map(comment => ({\n                    ...comment,\n                    relativeTime: moment(comment.timestamp).fromNow()\n                }));\n            setComments(sortedComments);\n            setCurrentPostOwner(postResponse.data.superuserId);\n        } catch (error) {\n            console.error(\"Error fetching comments or post details:\", error);\n        }\n        setIsCommentDialogOpen(true);\n    };\n\n    const handleCloseComments = () => {\n        setIsCommentDialogOpen(false);\n        setCurrentPostId(null);\n    };\n\n    const handleAddComment = async () => {\n        if (newComment.trim() === '') return;\n\n        const comment = {\n            content: newComment,\n            postId: currentPostId,\n            superuserId: loggedInSuperUser.superuserId,\n            fullName: loggedInSuperUser.fullName,\n            superuseridNumber: loggedInSuperUser.superuseridNumber,\n        };\n\n        try {\n            const response = await axios.post('http://localhost:8080/comments/add', comment);\n            const newCommentWithRelativeTime = {\n                ...response.data,\n                relativeTime: moment(response.data.timestamp).fromNow()\n            };\n            setComments(prevComments => [newCommentWithRelativeTime, ...prevComments]);\n            setNewComment('');\n        } catch (error) {\n            console.error(\"Error adding comment:\", error);\n            if (error.response) {\n                console.error(\"Response data:\", error.response.data);\n                console.error(\"Response status:\", error.response.status);\n            }\n        }\n    };\n\n    const handleDeletePost = (postId) => {\n        if (!loggedInSuperUser) {\n            alert(\"Please log in to delete posts.\");\n            return;\n        }\n        setItemToDelete(postId);\n        setIsDeletePostDialogOpen(true);\n    };\n\n    const handleDeleteComment = (commentId, commentSuperUserId) => {\n        if (!loggedInSuperUser) {\n            alert(\"Please log in to delete comments.\");\n            return;\n        }\n        if (loggedInSuperUser.superuserId === commentSuperUserId || loggedInSuperUser.superuserId === currentPostOwner) {\n            setItemToDelete(commentId);\n            setIsDeleteCommentDialogOpen(true);\n        } else {\n            alert(\"You don't have permission to delete this comment.\");\n        }\n    };\n\n    const confirmDeletePost = async () => {\n        try {\n            await axios.delete(`http://localhost:8080/posts/${itemToDelete}`);\n            setPosts(posts.filter(post => post.postId !== itemToDelete));\n            setIsDeletePostDialogOpen(false);\n        } catch (error) {\n            console.error(\"Error deleting post:\", error);\n        }\n    };\n\n    const confirmDeleteComment = async () => {\n        try {\n            await axios.delete(`http://localhost:8080/comments/${itemToDelete}`, {\n                params: {\n                    superuserId: loggedInSuperUser.superuserId\n                }\n            });\n            setComments(comments.filter(comment => comment.commentId !== itemToDelete));\n            setIsDeleteCommentDialogOpen(false);\n        } catch (error) {\n            console.error(\"Error deleting comment:\", error);\n            alert(\"Failed to delete comment. You may not have permission.\");\n        }\n    };\n\n    const formatTimestamp = (timestamp) => {\n        const momentDate = moment(timestamp);\n        return momentDate.format('dddd, MMMM D, YYYY [at] h:mm A');\n    };\n\n    const getRelativeTime = (timestamp) => {\n        return moment(timestamp).fromNow();\n    };\n\n    const handleClosePost = () => {\n        setNewPostContent('');\n        setImagePreview(null);\n        setShowCloseButton(false);\n        if (fileInputRef.current) {\n            fileInputRef.current.value = '';\n        }\n    };\n\n    return (\n        <div className=\"adhome\">\n            <SUNavBar />  \n            <b className=\"HWildcat\">WILDCAT</b> {/* Add Wildcat element here */}\n\n            <div className=\"content-wrapper\">\n                <div className=\"post-container\">\n                    <div className=\"logo-container\">\n                        <img src={profilePicture || defaultProfile} alt=\"SuperUser Avatar\" className=\"superusers-dp\" />\n                    </div>\n                    <div className=\"post-form\">\n                        <form onSubmit={handlePostSubmit}>\n                            <div className=\"input-container\">\n                                <input\n                                    type=\"text\"\n                                    className=\"post-input\"\n                                    value={newPostContent}\n                                    onChange={handlePostInputChange}\n                                    placeholder=\"What's happening in your day, Wildcat?\"\n                                />\n                                {showCloseButton && (\n                                    <button type=\"button\" className=\"close-button\" onClick={handleClosePost}>\n                                        ×\n                                    </button>\n                                )}\n                            </div>\n                            <div className=\"post-subcontainer\">\n                                <div className=\"post-subcontainer-icons\">\n                                    <label htmlFor=\"file-upload\">\n                                        <img className=\"gallery-icon\" alt=\"\" src=\"/gallery.png\" />\n                                    </label>\n                                    <input\n                                        ref={fileInputRef}\n                                        id=\"file-upload\"\n                                        type=\"file\"\n                                        className=\"file-input\"\n                                        style={{ display: \"none\" }}\n                                        onChange={handleFileChange}\n                                        onClick={(e) => { e.target.value = null }}\n                                    />\n                                    <img\n                                        className=\"mic-icon\"\n                                        alt=\"Mic\"\n                                        src=\"/mic.png\"\n                                        onClick={handleMicClick}\n                                        style={{ cursor: \"pointer\" }}\n                                    />\n                                </div>\n                                <Button\n                                    type=\"submit\"\n                                    className=\"post-button\"\n                                    variant=\"contained\"\n                                    sx={{\n                                        borderRadius: \"10px\",\n                                        width: 60,\n                                        height: 30,\n                                        backgroundColor: \"#8A252C\",\n                                        \"&:hover\": { backgroundColor: \"#A91D3A\" }\n                                    }}\n                                >\n                                    POST\n                                </Button>\n                            </div>\n                        </form>\n                        {imagePreview && (\n                            <div className=\"image-preview\">\n                                <img src={imagePreview} alt=\"Preview\" style={{ width: '100px', height: '100px' }} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <div className=\"post-list\">\n                    {posts.map((post) => (\n                        <div key={post.postId} className=\"post-card\">\n                            <div className=\"card-container\">\n                                <div className=\"name-container\">\n                                    <img src={superuserProfilePictures[post.superuserId] || defaultProfile} alt=\"SuperUser Avatar\" />\n                                    <h5>{post.fullName} ({post.superuseridNumber})</h5>\n                                    {loggedInSuperUser && loggedInSuperUser.superuserId === post.superuserId && (\n                                        <img\n                                            src=\"/delete.png\"\n                                            alt=\"Delete\"\n                                            className=\"delete-icon\"\n                                            onClick={() => handleDeletePost(post.postId)}\n                                            style={{ cursor: 'pointer', width: '20px', height: '20px', marginLeft: 'auto' }}\n                                        />\n                                    )}\n                                </div>\n                                <div className=\"timestamp\">\n                                    <span className=\"formatted-date\">{formatTimestamp(post.timestamp)}</span>\n                                    <br />\n                                    <span className=\"relative-time\">{getRelativeTime(post.timestamp)}</span>\n                                </div>\n                                <div className=\"card-contents\">\n                                    <p>{post.content}</p>\n                                    {post.image && (\n                                        <img\n                                            className=\"post-image\"\n                                            alt=\"Post\"\n                                            src={post.image}\n                                            style={{ maxWidth: '100%', height: 'auto' }}\n                                        />\n                                    )}\n                                </div>\n                                <div className=\"footer-line\" />\n                                <div className=\"footer-actions\">\n                                    <div className=\"footer-icons\">\n                                        <button \n                                            onClick={() => handleLike(post.postId)} \n                                            className={`like-button ${post.likedBy.includes(loggedInSuperUser?.superuserId) ? 'active' : ''}`}\n                                        >\n                                            <img src=\"/t-up.png\" alt=\"Thumbs Up\" /> {post.likes}\n                                        </button>\n                                        <button \n                                            onClick={() => handleDislike(post.postId)} \n                                            className={`dislike-button ${post.dislikedBy.includes(loggedInSuperUser?.superuserId) ? 'active' : ''}`}\n                                        >\n                                            <img src=\"/t-down.png\" alt=\"Thumbs Down\" /> {post.dislikes}\n                                        </button>\n                                    </div>\n                                    <div className=\"footer-comments\">\n                                        <button className=\"comment-button\" onClick={() => handleOpenComments(post.postId)}>Comment</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n\n            <Dialog open={isCommentDialogOpen} onClose={handleCloseComments}>\n                <DialogTitle>\n                    Comments\n                    <img\n                        src=\"/exit.png\"\n                        alt=\"Close\"\n                        className=\"exit-icon\"\n                        onClick={handleCloseComments}\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    {comments.map((comment) => (\n                        <div key={comment.commentId} className=\"comment\">\n                            <div className=\"comment-header\">\n                                <div className=\"superuser-info-container\">\n                                    <span className=\"superuser-info\">\n                                        {comment.fullName} ({comment.superuseridNumber})\n                                    </span>\n                                    {(loggedInSuperUser && (loggedInSuperUser.superuserId === comment.superuserId || loggedInSuperUser.superuserId === currentPostOwner)) && (\n                                        <img\n                                            src=\"/delete.png\"\n                                            alt=\"Delete\"\n                                            className=\"delete-icon\"\n                                            onClick={() => handleDeleteComment(comment.commentId, comment.superuserId)}\n                                        />\n                                    )}\n                                </div>\n                                <div className=\"timestamp-container\">\n                                    <span className=\"formatted-time\">\n                                        {formatTimestamp(comment.timestamp)}\n                                    </span>\n                                    <span className=\"relative-time\">\n                                        {comment.relativeTime}\n                                    </span>\n                                </div>\n                            </div>\n                            <p>{comment.content}</p>\n                        </div>\n                    ))}\n                </DialogContent>\n                <DialogActions>\n                    <div className=\"add-comment\" style={{ display: 'flex', width: '100%', padding: '10px' }}>\n                        <input\n                            type=\"text\"\n                            value={newComment}\n                            onChange={(e) => setNewComment(e.target.value)}\n                            placeholder=\"Add a comment...\"\n                            style={{ \n                                flexGrow: 1, \n                                marginRight: '10px', \n                                padding: '8px', \n                                border: '1px solid #ccc', \n                                borderRadius: '4px' \n                            }}\n                        />\n                        <Button \n                            onClick={handleAddComment}\n                            variant=\"contained\"\n                            sx={{ \n                                backgroundColor: '#8A252C', \n                                color: 'white',\n                                '&:hover': {\n                                    backgroundColor: '#f9d67b',\n                                    color: 'black'\n                                },\n                                transition: 'all 0.3s ease'\n                            }}\n                        >\n                            Comment\n                        </Button>\n                    </div>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog open={isDeletePostDialogOpen} onClose={() => setIsDeletePostDialogOpen(false)}>\n                <DialogTitle>Confirm Delete</DialogTitle>\n                <DialogContent>\n                    Are you sure you want to delete this post?\n                </DialogContent>\n                <DialogActions className=\"delete-dialog-actions\">\n                    <Button onClick={() => setIsDeletePostDialogOpen(false)} className=\"cancel-button\">Cancel</Button>\n                    <Button onClick={confirmDeletePost} className=\"delete-button\">Delete</Button>\n                </DialogActions>\n            </Dialog>\n\n            <Dialog open={isDeleteCommentDialogOpen} onClose={() => setIsDeleteCommentDialogOpen(false)}>\n                <DialogTitle>Confirm Delete</DialogTitle>\n                <DialogContent>\n                    Are you sure you want to delete this comment?\n                </DialogContent>\n                <DialogActions className=\"delete-dialog-actions\">\n                    <Button onClick={() => setIsDeleteCommentDialogOpen(false)} className=\"cancel-button\">Cancel</Button>\n                    <Button onClick={confirmDeleteComment} className=\"delete-button\">Delete</Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n};\n\nexport default SUHome;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}