{"ast":null,"code":"var _jsxFileName = \"/Users/richardmolina/Documents/GitHub/THETECHHIVE_FRONTEND/October 11 new admin frontend/admin_frontend/src/SuperUser pages/SUHome/SUHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport Loadable from 'react-loadable';\nimport moment from 'moment';\nimport SUNavBar from \"../../components/SUNavBar\";\nimport \"./SUHome.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SUComment = Loadable({\n  loader: () => import('./SUComment'),\n  loading: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 20\n  }, this)\n});\nconst SUHome = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isOverlayVisible, setOverlayVisible] = useState(false);\n  const [newPostContent, setNewPostContent] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [currentPostId, setCurrentPostId] = useState(null);\n  const [currentPostOwner, setCurrentPostOwner] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);\n  const [loggedInSuperUser, setLoggedInSuperUser] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\n  const [isDeleteCommentDialogOpen, setIsDeleteCommentDialogOpen] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [profilePicture, setProfilePicture] = useState(null); // State to hold profile picture\n  const [superuserProfilePictures, setSuperUserProfilePictures] = useState({});\n  const defaultProfile = '/dp.png'; // Path to the default profile picture\n  const [inputHasContent, setInputHasContent] = useState(false);\n  const [showCancelButton, setShowCancelButton] = useState(false);\n  const [showCloseButton, setShowCloseButton] = useState(false);\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    const fetchLoggedInSuperUser = async () => {\n      const storedSuperUser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\"));\n      if (storedSuperUser && storedSuperUser.superusername) {\n        try {\n          const response = await axios.get(`http://localhost:8080/superuser/getBySuperUsername?superusername=${storedSuperUser.superusername}`);\n          setLoggedInSuperUser(response.data);\n          console.log(\"Fetch superuser data:\", response.data);\n        } catch (error) {\n          console.error(\"Error fetching superuser data:\", error);\n        }\n      }\n    };\n    fetchLoggedInSuperUser();\n  }, []);\n  const fetchSuperUserProfilePicture = useCallback(async superuserId => {\n    try {\n      const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        const imageUrl = URL.createObjectURL(imageBlob);\n        setSuperUserProfilePictures(prev => ({\n          ...prev,\n          [superuserId]: imageUrl\n        }));\n      } else {\n        setSuperUserProfilePictures(prev => ({\n          ...prev,\n          [superuserId]: defaultProfile\n        }));\n      }\n    } catch (error) {\n      console.error('Failed to fetch superuser profile picture:', error);\n      setSuperUserProfilePictures(prev => ({\n        ...prev,\n        [superuserId]: defaultProfile\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    const fetchPostsandPictures = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/posts\");\n        console.log(\"Fetched posts data:\", response.data);\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setPosts(sortedPosts);\n        const superuserIds = new Set(sortedPosts.map(post => post.superuserId));\n        superuserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPostsandPictures();\n  }, [fetchSuperUserProfilePicture]);\n  useEffect(() => {\n    if (currentPostId) {\n      const fetchCommentsAndPictures = async () => {\n        try {\n          const [commentsResponse, postResponse] = await Promise.all([axios.get(`http://localhost:8080/comments/${currentPostId}`), axios.get(`http://localhost:8080/posts/${currentPostId}`)]);\n          const sortedComments = commentsResponse.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(comment => ({\n            ...comment,\n            relativeTime: moment(comment.timestamp).fromNow()\n          }));\n          setComments(sortedComments);\n          setCurrentPostOwner(postResponse.data.superuserId);\n          const commentSuperUserIds = new Set(sortedComments.map(comment => comment.superuserId));\n          commentSuperUserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\n        } catch (error) {\n          console.error(\"Error fetching comments or post details:\", error);\n        }\n      };\n      fetchCommentsAndPictures();\n    }\n  }, [currentPostId, fetchSuperUserProfilePicture]);\n  const fetchLoggedInSuperUsers = useCallback(() => {\n    const superuser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\")) || null;\n    setLoggedInSuperUser(superuser);\n    return superuser;\n  }, []);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/posts\");\n        console.log(\"Fetched posts data:\", response.data); // Log fetched posts data\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setPosts(sortedPosts);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  useEffect(() => {\n    if (!(\"webkitSpeechRecognition\" in window)) {\n      console.log(\"Speech recognition not supported in this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setComments(prevComments => prevComments.map(comment => ({\n        ...comment,\n        relativeTime: moment(comment.timestamp).fromNow()\n      })).sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)));\n    }, 60000);\n    return () => clearInterval(timer);\n  }, []);\n  const toggleOverlay = useCallback(() => {\n    setOverlayVisible(!isOverlayVisible);\n  }, [isOverlayVisible]);\n  const onClose = useCallback(() => {\n    setOverlayVisible(false);\n  }, []);\n  const onREPORTSClick = useCallback(() => {\n    navigate(\"/adentry\");\n  }, [navigate]);\n  const onPROFILEClick = useCallback(() => {\n    navigate(\"/adprofile\");\n  }, [navigate]);\n  const onLEADERBOARDSClick = useCallback(() => {\n    navigate(\"/adleaderboard\");\n  }, [navigate]);\n  const handlePostInputChange = e => {\n    const content = e.target.value;\n    setNewPostContent(content);\n    setShowCloseButton(content.length > 0 || imagePreview !== null);\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n        setShowCloseButton(true);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Function to fetch profile picture\n  const fetchProfilePicture = useCallback(async superuserId => {\n    try {\n      const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        if (imageBlob.size > 0) {\n          const imageUrl = URL.createObjectURL(imageBlob);\n          setProfilePicture(imageUrl);\n        } else {\n          setProfilePicture(defaultProfile);\n        }\n      } else {\n        setProfilePicture(defaultProfile);\n      }\n    } catch (error) {\n      console.error('Failed to fetch profile picture:', error);\n      setProfilePicture(defaultProfile);\n    }\n  }, [defaultProfile]);\n  useEffect(() => {\n    const superuser = fetchLoggedInSuperUsers();\n    if (superuser) {\n      fetchProfilePicture(superuser.superuserId);\n    }\n  }, [fetchLoggedInSuperUsers, fetchProfilePicture]);\n  const handleMicClick = () => {\n    if (!(\"webkitSpeechRecognition\" in window)) return;\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.lang = \"en-US\";\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setNewPostContent(prevContent => prevContent + \" \" + transcript);\n    };\n    recognition.onerror = event => {\n      console.log(\"Speech recognition error:\", event.error);\n    };\n    recognition.start();\n  };\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    if (!newPostContent && !imagePreview) {\n      alert(\"Please enter a post or select a picture before submitting.\");\n      return;\n    }\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to post.\");\n      return;\n    }\n    const newPost = {\n      content: newPostContent,\n      image: imagePreview,\n      superuserId: loggedInSuperUser.superuserId,\n      fullName: loggedInSuperUser.fullName,\n      idNumber: loggedInSuperUser.superuseridNumber,\n      isVerified: false,\n      likes: 0,\n      dislikes: 0\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8080/posts/add\", newPost, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(prevPosts => [response.data, ...prevPosts]);\n      setNewPostContent(\"\");\n      setSelectedFile(null);\n      setImagePreview(null);\n      setShowCloseButton(false);\n    } catch (error) {\n      console.error(\"Error posting data:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n      }\n    }\n  };\n  const handleLike = async postId => {\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to like posts.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/like?superuserId=${loggedInSuperUser.superuserId}`);\n      const updatedPost = response.data;\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n  const handleDislike = async postId => {\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to dislike posts.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/dislike?superuserId=${loggedInSuperUser.superuserId}`);\n      const updatedPost = response.data;\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n  const handleOpenComments = async postId => {\n    setCurrentPostId(postId);\n    try {\n      const [commentsResponse, postResponse] = await Promise.all([axios.get(`http://localhost:8080/comments/${postId}`), axios.get(`http://localhost:8080/posts/${postId}`)]);\n      const sortedComments = commentsResponse.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(comment => ({\n        ...comment,\n        relativeTime: moment(comment.timestamp).fromNow()\n      }));\n      setComments(sortedComments);\n      setCurrentPostOwner(postResponse.data.superuserId);\n    } catch (error) {\n      console.error(\"Error fetching comments or post details:\", error);\n    }\n    setIsCommentDialogOpen(true);\n  };\n  const handleCloseComments = () => {\n    setIsCommentDialogOpen(false);\n    setCurrentPostId(null);\n  };\n  const handleAddComment = async () => {\n    if (newComment.trim() === '') return;\n    const comment = {\n      content: newComment,\n      postId: currentPostId,\n      superuserId: loggedInSuperUser.superuserId,\n      fullName: loggedInSuperUser.fullName,\n      superuseridNumber: loggedInSuperUser.superuseridNumber\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/comments/add', comment);\n      const newCommentWithRelativeTime = {\n        ...response.data,\n        relativeTime: moment(response.data.timestamp).fromNow()\n      };\n      setComments(prevComments => [newCommentWithRelativeTime, ...prevComments]);\n      setNewComment('');\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n      }\n    }\n  };\n  const handleDeletePost = postId => {\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to delete posts.\");\n      return;\n    }\n    setItemToDelete(postId);\n    setIsDeletePostDialogOpen(true);\n  };\n  const handleDeleteComment = (commentId, commentSuperUserId) => {\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to delete comments.\");\n      return;\n    }\n    if (loggedInSuperUser.superuserId === commentSuperUserId || loggedInSuperUser.superuserId === currentPostOwner) {\n      setItemToDelete(commentId);\n      setIsDeleteCommentDialogOpen(true);\n    } else {\n      alert(\"You don't have permission to delete this comment.\");\n    }\n  };\n  const confirmDeletePost = async () => {\n    try {\n      await axios.delete(`http://localhost:8080/posts/${itemToDelete}`);\n      setPosts(posts.filter(post => post.postId !== itemToDelete));\n      setIsDeletePostDialogOpen(false);\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n    }\n  };\n  const confirmDeleteComment = async () => {\n    try {\n      await axios.delete(`http://localhost:8080/comments/${itemToDelete}`, {\n        params: {\n          superuserId: loggedInSuperUser.superuserId\n        }\n      });\n      setComments(comments.filter(comment => comment.commentId !== itemToDelete));\n      setIsDeleteCommentDialogOpen(false);\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n      alert(\"Failed to delete comment. You may not have permission.\");\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const momentDate = moment(timestamp);\n    return momentDate.format('dddd, MMMM D, YYYY [at] h:mm A');\n  };\n  const getRelativeTime = timestamp => {\n    return moment(timestamp).fromNow();\n  };\n  const handleClosePost = () => {\n    setNewPostContent('');\n    setImagePreview(null);\n    setShowCloseButton(false);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adhome\",\n    children: [/*#__PURE__*/_jsxDEV(SUNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"HWildcat\",\n      children: \"WILDCAT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profilePicture || defaultProfile,\n            alt: \"SuperUser Avatar\",\n            className: \"superusers-dp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handlePostSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"post-input\",\n                value: newPostContent,\n                onChange: handlePostInputChange,\n                placeholder: \"What's happening in your day, Wildcat?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this), showCloseButton && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"close-button\",\n                onClick: handleClosePost,\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-subcontainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-subcontainer-icons\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"file-upload\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"gallery-icon\",\n                    alt: \"\",\n                    src: \"/gallery.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: fileInputRef,\n                  id: \"file-upload\",\n                  type: \"file\",\n                  className: \"file-input\",\n                  style: {\n                    display: \"none\"\n                  },\n                  onChange: handleFileChange,\n                  onClick: e => {\n                    e.target.value = null;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"mic-icon\",\n                  alt: \"Mic\",\n                  src: \"/mic.png\",\n                  onClick: handleMicClick,\n                  style: {\n                    cursor: \"pointer\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"post-button\",\n                variant: \"contained\",\n                sx: {\n                  borderRadius: \"10px\",\n                  width: 60,\n                  height: 30,\n                  backgroundColor: \"#8A252C\",\n                  \"&:hover\": {\n                    backgroundColor: \"#A91D3A\"\n                  }\n                },\n                children: \"POST\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 13\n          }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imagePreview,\n              alt: \"Preview\",\n              style: {\n                width: '100px',\n                height: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-list\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: superuserProfilePictures[post.superuserId] || defaultProfile,\n                alt: \"SuperUser Avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [post.fullName, \" (\", post.superuseridNumber, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this), loggedInSuperUser && loggedInSuperUser.superuserId === post.superuserId && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/delete.png\",\n                alt: \"Delete\",\n                className: \"delete-icon\",\n                onClick: () => handleDeletePost(post.postId),\n                style: {\n                  cursor: 'pointer',\n                  width: '20px',\n                  height: '20px',\n                  marginLeft: 'auto'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timestamp\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"formatted-date\",\n                children: formatTimestamp(post.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 524,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"relative-time\",\n                children: getRelativeTime(post.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-contents\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"post-image\",\n                alt: \"Post\",\n                src: post.image,\n                style: {\n                  maxWidth: '100%',\n                  height: 'auto'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer-icons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleLike(post.postId),\n                  className: `like-button ${post.likedBy.includes(loggedInSuperUser === null || loggedInSuperUser === void 0 ? void 0 : loggedInSuperUser.superuserId) ? 'active' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/t-up.png\",\n                    alt: \"Thumbs Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 23\n                  }, this), \" \", post.likes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDislike(post.postId),\n                  className: `dislike-button ${post.dislikedBy.includes(loggedInSuperUser === null || loggedInSuperUser === void 0 ? void 0 : loggedInSuperUser.superuserId) ? 'active' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/t-down.png\",\n                    alt: \"Thumbs Down\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 23\n                  }, this), \" \", post.dislikes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer-comments\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment-button\",\n                  onClick: () => handleOpenComments(post.postId),\n                  children: \"Comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 555,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 554,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this)\n        }, post.postId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isCommentDialogOpen,\n      onClose: handleCloseComments,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"Comments\", /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/exit.png\",\n          alt: \"Close\",\n          className: \"exit-icon\",\n          onClick: handleCloseComments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"superuser-info-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"superuser-info\",\n                children: [comment.fullName, \" (\", comment.superuseridNumber, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this), loggedInSuperUser && (loggedInSuperUser.superuserId === comment.superuserId || loggedInSuperUser.superuserId === currentPostOwner) && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/delete.png\",\n                alt: \"Delete\",\n                className: \"delete-icon\",\n                onClick: () => handleDeleteComment(comment.commentId, comment.superuserId)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timestamp-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"formatted-time\",\n                children: formatTimestamp(comment.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"relative-time\",\n                children: comment.relativeTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 15\n          }, this)]\n        }, comment.commentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-comment\",\n          style: {\n            display: 'flex',\n            width: '100%',\n            padding: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            placeholder: \"Add a comment...\",\n            style: {\n              flexGrow: 1,\n              marginRight: '10px',\n              padding: '8px',\n              border: '1px solid #ccc',\n              borderRadius: '4px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleAddComment,\n            variant: \"contained\",\n            sx: {\n              backgroundColor: '#8A252C',\n              color: 'white',\n              '&:hover': {\n                backgroundColor: '#f9d67b',\n                color: 'black'\n              },\n              transition: 'all 0.3s ease'\n            },\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isDeletePostDialogOpen,\n      onClose: () => setIsDeletePostDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: \"Are you sure you want to delete this post?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: \"delete-dialog-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setIsDeletePostDialogOpen(false),\n          className: \"cancel-button\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: confirmDeletePost,\n          className: \"delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isDeleteCommentDialogOpen,\n      onClose: () => setIsDeleteCommentDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: \"Are you sure you want to delete this comment?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: \"delete-dialog-actions\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setIsDeleteCommentDialogOpen(false),\n          className: \"cancel-button\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: confirmDeleteComment,\n          className: \"delete-button\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 5\n  }, this);\n};\n_s(SUHome, \"YabgERXpDuUDXxqmmhnKMdQkmzk=\", false, function () {\n  return [useNavigate];\n});\n_c = SUHome;\nexport default SUHome;\nvar _c;\n$RefreshReg$(_c, \"SUHome\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","useNavigate","Button","Dialog","DialogTitle","DialogContent","DialogActions","Loadable","moment","SUNavBar","jsxDEV","_jsxDEV","SUComment","loader","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","SUHome","_s","navigate","isOverlayVisible","setOverlayVisible","newPostContent","setNewPostContent","posts","setPosts","selectedFile","setSelectedFile","imagePreview","setImagePreview","currentPostId","setCurrentPostId","currentPostOwner","setCurrentPostOwner","comments","setComments","isCommentDialogOpen","setIsCommentDialogOpen","loggedInSuperUser","setLoggedInSuperUser","newComment","setNewComment","isDeletePostDialogOpen","setIsDeletePostDialogOpen","isDeleteCommentDialogOpen","setIsDeleteCommentDialogOpen","itemToDelete","setItemToDelete","profilePicture","setProfilePicture","superuserProfilePictures","setSuperUserProfilePictures","defaultProfile","inputHasContent","setInputHasContent","showCancelButton","setShowCancelButton","showCloseButton","setShowCloseButton","fileInputRef","fetchLoggedInSuperUser","storedSuperUser","JSON","parse","localStorage","getItem","superusername","response","get","data","console","log","error","fetchSuperUserProfilePicture","superuserId","fetch","ok","imageBlob","blob","imageUrl","URL","createObjectURL","prev","fetchPostsandPictures","sortedPosts","sort","a","b","Date","timestamp","superuserIds","Set","map","post","forEach","fetchCommentsAndPictures","commentsResponse","postResponse","Promise","all","sortedComments","comment","relativeTime","fromNow","commentSuperUserIds","fetchLoggedInSuperUsers","superuser","fetchPosts","window","timer","setInterval","prevComments","clearInterval","toggleOverlay","onClose","onREPORTSClick","onPROFILEClick","onLEADERBOARDSClick","handlePostInputChange","e","content","target","value","length","handleFileChange","event","file","files","reader","FileReader","onloadend","result","readAsDataURL","fetchProfilePicture","size","handleMicClick","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","transcript","results","prevContent","onerror","start","handlePostSubmit","preventDefault","alert","newPost","image","fullName","idNumber","superuseridNumber","isVerified","likes","dislikes","headers","prevPosts","status","handleLike","postId","updatedPost","handleDislike","handleOpenComments","handleCloseComments","handleAddComment","trim","newCommentWithRelativeTime","handleDeletePost","handleDeleteComment","commentId","commentSuperUserId","confirmDeletePost","delete","filter","confirmDeleteComment","params","formatTimestamp","momentDate","format","getRelativeTime","handleClosePost","current","className","src","alt","onSubmit","type","onChange","placeholder","onClick","htmlFor","ref","id","style","display","cursor","variant","sx","borderRadius","width","height","backgroundColor","marginLeft","maxWidth","likedBy","includes","dislikedBy","open","padding","flexGrow","marginRight","border","color","transition","_c","$RefreshReg$"],"sources":["/Users/richardmolina/Documents/GitHub/THETECHHIVE_FRONTEND/October 11 new admin frontend/admin_frontend/src/SuperUser pages/SUHome/SUHome.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport Loadable from 'react-loadable';\nimport moment from 'moment';\nimport SUNavBar from \"../../components/SUNavBar\";\nimport \"./SUHome.css\";\n\nconst SUComment = Loadable({\n    loader: () => import('./SUComment'),\n    loading: () => <div>Loading...</div>,\n});\n\nconst SUHome = () => {\n    const navigate = useNavigate();\n  const [isOverlayVisible, setOverlayVisible] = useState(false);\n  const [newPostContent, setNewPostContent] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [currentPostId, setCurrentPostId] = useState(null);\n  const [currentPostOwner, setCurrentPostOwner] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);\n  const [loggedInSuperUser, setLoggedInSuperUser] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\n  const [isDeleteCommentDialogOpen, setIsDeleteCommentDialogOpen] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [profilePicture, setProfilePicture] = useState(null); // State to hold profile picture\n  const [superuserProfilePictures, setSuperUserProfilePictures] = useState({});\n  const defaultProfile = '/dp.png'; // Path to the default profile picture\n  const [inputHasContent, setInputHasContent] = useState(false);\n  const [showCancelButton, setShowCancelButton] = useState(false);\n  const [showCloseButton, setShowCloseButton] = useState(false);\n\n  const fileInputRef = useRef(null);\n\n  useEffect(() => {\n    const fetchLoggedInSuperUser = async () => {\n        const storedSuperUser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\"));\n        if (storedSuperUser && storedSuperUser.superusername) {\n            try {\n                const response = await axios.get(`http://localhost:8080/superuser/getBySuperUsername?superusername=${storedSuperUser.superusername}`);\n                setLoggedInSuperUser(response.data);\n                console.log(\"Fetch superuser data:\", response.data);\n            } catch (error) {\n                console.error(\"Error fetching superuser data:\", error);\n            }\n        }\n    };\n    fetchLoggedInSuperUser();\n  }, []);\n\n  const fetchSuperUserProfilePicture = useCallback(async (superuserId) => {\n    try {\n        const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\n        if (response.ok) {\n            const imageBlob = await response.blob();\n            const imageUrl = URL.createObjectURL(imageBlob);\n            setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: imageUrl }));\n        } else {\n            setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: defaultProfile }));\n        }\n    } catch (error) {\n        console.error('Failed to fetch superuser profile picture:', error);\n        setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: defaultProfile }));\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchPostsandPictures = async () => {\n        try {\n            const response = await axios.get(\"http://localhost:8080/posts\");\n            console.log(\"Fetched posts data:\", response.data);\n            const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n            setPosts(sortedPosts);\n\n            const superuserIds = new Set(sortedPosts.map(post => post.superuserId));\n            superuserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\n        } catch (error) {\n            console.error(\"Error fetching posts:\", error);\n        }\n    };\n    fetchPostsandPictures();\n  }, [fetchSuperUserProfilePicture]);\n\n  useEffect(() => {\n    if (currentPostId) {\n        const fetchCommentsAndPictures = async () => {\n            try {\n                const [commentsResponse, postResponse] = await Promise.all([\n                    axios.get(`http://localhost:8080/comments/${currentPostId}`),\n                    axios.get(`http://localhost:8080/posts/${currentPostId}`)\n                ]);\n                const sortedComments = commentsResponse.data\n                .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n                .map(comment => ({\n                    ...comment,\n                    relativeTime: moment(comment.timestamp).fromNow()\n                }));\n            setComments(sortedComments);\n            setCurrentPostOwner(postResponse.data.superuserId);\n\n            const commentSuperUserIds = new Set(sortedComments.map(comment => comment.superuserId));\n          commentSuperUserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\n        } catch (error) {\n          console.error(\"Error fetching comments or post details:\", error);\n        }\n      };\n      fetchCommentsAndPictures();\n    }\n  }, [currentPostId, fetchSuperUserProfilePicture]);\n\n  const fetchLoggedInSuperUsers = useCallback(() => {\n    const superuser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\")) || null;\n    setLoggedInSuperUser(superuser);\n    return superuser;\n  }, []);\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/posts\");\n        console.log(\"Fetched posts data:\", response.data); // Log fetched posts data\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setPosts(sortedPosts);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPosts();\n  }, []);\n\n  useEffect(() => {\n    if (!(\"webkitSpeechRecognition\" in window)) {\n      console.log(\"Speech recognition not supported in this browser.\");\n    }\n  }, []);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setComments(prevComments => \n        prevComments\n          .map(comment => ({\n            ...comment,\n            relativeTime: moment(comment.timestamp).fromNow()\n          }))\n          .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n      );\n    }, 60000);\n    return () => clearInterval(timer);\n  }, []);\n\n  const toggleOverlay = useCallback(() => {\n    setOverlayVisible(!isOverlayVisible);\n  }, [isOverlayVisible]);\n\n  const onClose = useCallback(() => {\n    setOverlayVisible(false);\n  }, []);\n\n  const onREPORTSClick = useCallback(() => {\n    navigate(\"/adentry\");\n  }, [navigate]);\n\n  const onPROFILEClick = useCallback(() => {\n    navigate(\"/adprofile\");\n  }, [navigate]);\n\n  const onLEADERBOARDSClick = useCallback(() => {\n    navigate(\"/adleaderboard\");\n  }, [navigate]);\n\n  const handlePostInputChange = (e) => {\n    const content = e.target.value;\n    setNewPostContent(content);\n    setShowCloseButton(content.length > 0 || imagePreview !== null);\n  };\n\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n        setShowCloseButton(true);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Function to fetch profile picture\n  const fetchProfilePicture = useCallback(async (superuserId) => {\n    try {\n      const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        if (imageBlob.size > 0) {\n          const imageUrl = URL.createObjectURL(imageBlob);\n          setProfilePicture(imageUrl);\n        } else {\n          setProfilePicture(defaultProfile);\n        }\n      } else {\n        setProfilePicture(defaultProfile);\n      }\n    } catch (error) {\n      console.error('Failed to fetch profile picture:', error);\n      setProfilePicture(defaultProfile);\n    }\n  }, [defaultProfile]);\n\n  useEffect(() => {\n    const superuser = fetchLoggedInSuperUsers();\n    if (superuser) {\n      fetchProfilePicture(superuser.superuserId);\n    }\n  }, [fetchLoggedInSuperUsers, fetchProfilePicture]);\n\n  const handleMicClick = () => {\n    if (!(\"webkitSpeechRecognition\" in window)) return;\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.lang = \"en-US\";\n    recognition.onresult = (event) => {\n      const transcript = event.results[0][0].transcript;\n      setNewPostContent((prevContent) => prevContent + \" \" + transcript);\n    };\n    recognition.onerror = (event) => {\n      console.log(\"Speech recognition error:\", event.error);\n    };\n    recognition.start();\n  };\n\n  const handlePostSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!newPostContent && !imagePreview) {\n      alert(\"Please enter a post or select a picture before submitting.\");\n      return;\n    }\n\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to post.\");\n      return;\n    }\n\n    const newPost = {\n      content: newPostContent,\n      image: imagePreview,\n      superuserId: loggedInSuperUser.superuserId,\n      fullName: loggedInSuperUser.fullName,\n      idNumber: loggedInSuperUser.superuseridNumber,\n      isVerified: false,\n      likes: 0,\n      dislikes: 0,\n    };\n\n    try {\n      const response = await axios.post(\"http://localhost:8080/posts/add\", newPost, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      setPosts(prevPosts => [response.data, ...prevPosts]);\n      setNewPostContent(\"\");\n      setSelectedFile(null);\n      setImagePreview(null);\n      setShowCloseButton(false);\n    } catch (error) {\n      console.error(\"Error posting data:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n      }\n    }\n  };\n\n  const handleLike = async (postId) => {\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to like posts.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/like?superuserId=${loggedInSuperUser.superuserId}`);\n      const updatedPost = response.data;\n      setPosts(posts.map(post =>\n        post.postId === postId ? updatedPost : post\n      ));\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n\n  const handleDislike = async (postId) => {\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to dislike posts.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/dislike?superuserId=${loggedInSuperUser.superuserId}`);\n      const updatedPost = response.data;\n      setPosts(posts.map(post =>\n        post.postId === postId ? updatedPost : post\n      ));\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n\n  const handleOpenComments = async (postId) => {\n    setCurrentPostId(postId);\n    try {\n      const [commentsResponse, postResponse] = await Promise.all([\n        axios.get(`http://localhost:8080/comments/${postId}`),\n        axios.get(`http://localhost:8080/posts/${postId}`)\n      ]);\n      const sortedComments = commentsResponse.data\n        .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\n        .map(comment => ({\n          ...comment,\n          relativeTime: moment(comment.timestamp).fromNow()\n        }));\n      setComments(sortedComments);\n      setCurrentPostOwner(postResponse.data.superuserId);\n    } catch (error) {\n      console.error(\"Error fetching comments or post details:\", error);\n    }\n    setIsCommentDialogOpen(true);\n  };\n\n  const handleCloseComments = () => {\n    setIsCommentDialogOpen(false);\n    setCurrentPostId(null);\n  };\n\n  const handleAddComment = async () => {\n    if (newComment.trim() === '') return;\n\n    const comment = {\n      content: newComment,\n      postId: currentPostId,\n      superuserId: loggedInSuperUser.superuserId,\n      fullName: loggedInSuperUser.fullName,\n      superuseridNumber: loggedInSuperUser.superuseridNumber,\n    };\n\n    try {\n      const response = await axios.post('http://localhost:8080/comments/add', comment);\n      const newCommentWithRelativeTime = {\n        ...response.data,\n        relativeTime: moment(response.data.timestamp).fromNow()\n      };\n      setComments(prevComments => [newCommentWithRelativeTime, ...prevComments]);\n      setNewComment('');\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n      }\n    }\n  };\n\n  const handleDeletePost = (postId) => {\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to delete posts.\");\n      return;\n    }\n    setItemToDelete(postId);\n    setIsDeletePostDialogOpen(true);\n  };\n\n  const handleDeleteComment = (commentId, commentSuperUserId) => {\n    if (!loggedInSuperUser) {\n      alert(\"Please log in to delete comments.\");\n      return;\n    }\n    if (loggedInSuperUser.superuserId === commentSuperUserId || loggedInSuperUser.superuserId === currentPostOwner) {\n      setItemToDelete(commentId);\n      setIsDeleteCommentDialogOpen(true);\n    } else {\n      alert(\"You don't have permission to delete this comment.\");\n    }\n  };\n\n  const confirmDeletePost = async () => {\n    try {\n      await axios.delete(`http://localhost:8080/posts/${itemToDelete}`);\n      setPosts(posts.filter(post => post.postId !== itemToDelete));\n      setIsDeletePostDialogOpen(false);\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n    }\n  };\n\n  const confirmDeleteComment = async () => {\n    try {\n      await axios.delete(`http://localhost:8080/comments/${itemToDelete}`, {\n        params: {\n          superuserId: loggedInSuperUser.superuserId\n        }\n      });\n      setComments(comments.filter(comment => comment.commentId !== itemToDelete));\n      setIsDeleteCommentDialogOpen(false);\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n      alert(\"Failed to delete comment. You may not have permission.\");\n    }\n  };\n\n  const formatTimestamp = (timestamp) => {\n    const momentDate = moment(timestamp);\n    return momentDate.format('dddd, MMMM D, YYYY [at] h:mm A');\n  };\n\n  const getRelativeTime = (timestamp) => {\n    return moment(timestamp).fromNow();\n  };\n\n  const handleClosePost = () => {\n    setNewPostContent('');\n    setImagePreview(null);\n    setShowCloseButton(false);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  return (\n    <div className=\"adhome\">\n      <SUNavBar />  \n      <b className=\"HWildcat\">WILDCAT</b> {/* Add Wildcat element here */}\n\n      <div className=\"content-wrapper\">\n        <div className=\"post-container\">\n          <div className=\"logo-container\">\n            <img src={profilePicture || defaultProfile} alt=\"SuperUser Avatar\" className=\"superusers-dp\" />\n          </div>\n          <div className=\"post-form\">\n            <form onSubmit={handlePostSubmit}>\n              <div className=\"input-container\">\n                <input\n                  type=\"text\"\n                  className=\"post-input\"\n                  value={newPostContent}\n                  onChange={handlePostInputChange}\n                  placeholder=\"What's happening in your day, Wildcat?\"\n                />\n                {showCloseButton && (\n                  <button type=\"button\" className=\"close-button\" onClick={handleClosePost}>\n                    ×\n                  </button>\n                )}\n              </div>\n              <div className=\"post-subcontainer\">\n                <div className=\"post-subcontainer-icons\">\n                  <label htmlFor=\"file-upload\">\n                    <img className=\"gallery-icon\" alt=\"\" src=\"/gallery.png\" />\n                  </label>\n                  <input\n                    ref={fileInputRef}\n                    id=\"file-upload\"\n                    type=\"file\"\n                    className=\"file-input\"\n                    style={{ display: \"none\" }}\n                    onChange={handleFileChange}\n                    onClick={(e) => { e.target.value = null }}\n                  />\n                  <img\n                    className=\"mic-icon\"\n                    alt=\"Mic\"\n                    src=\"/mic.png\"\n                    onClick={handleMicClick}\n                    style={{ cursor: \"pointer\" }}\n                  />\n                </div>\n                <Button\n                  type=\"submit\"\n                  className=\"post-button\"\n                  variant=\"contained\"\n                  sx={{\n                    borderRadius: \"10px\",\n                    width: 60,\n                    height: 30,\n                    backgroundColor: \"#8A252C\",\n                    \"&:hover\": { backgroundColor: \"#A91D3A\" }\n                  }}\n                >\n                  POST\n                </Button>\n              </div>\n            </form>\n            {imagePreview && (\n              <div className=\"image-preview\">\n                <img src={imagePreview} alt=\"Preview\" style={{ width: '100px', height: '100px' }} />\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"post-list\">\n          {posts.map((post) => (\n            <div key={post.postId} className=\"post-card\">\n              <div className=\"card-container\">\n                <div className=\"name-container\">\n                  <img src={superuserProfilePictures[post.superuserId] || defaultProfile} alt=\"SuperUser Avatar\" />\n                  <h5>{post.fullName} ({post.superuseridNumber})</h5>\n                  {loggedInSuperUser && loggedInSuperUser.superuserId === post.superuserId && (\n                    <img\n                      src=\"/delete.png\"\n                      alt=\"Delete\"\n                      className=\"delete-icon\"\n                      onClick={() => handleDeletePost(post.postId)}\n                      style={{ cursor: 'pointer', width: '20px', height: '20px', marginLeft: 'auto' }}\n                    />\n                  )}\n                </div>\n                <div className=\"timestamp\">\n                  <span className=\"formatted-date\">{formatTimestamp(post.timestamp)}</span>\n                  <br />\n                  <span className=\"relative-time\">{getRelativeTime(post.timestamp)}</span>\n                </div>\n                <div className=\"card-contents\">\n                  <p>{post.content}</p>\n                  {post.image && (\n                    <img\n                      className=\"post-image\"\n                      alt=\"Post\"\n                      src={post.image}\n                      style={{ maxWidth: '100%', height: 'auto' }}\n                    />\n                  )}\n                </div>\n                <div className=\"footer-line\" />\n                <div className=\"footer-actions\">\n                  <div className=\"footer-icons\">\n                    <button \n                      onClick={() => handleLike(post.postId)} \n                      className={`like-button ${post.likedBy.includes(loggedInSuperUser?.superuserId) ? 'active' : ''}`}\n                    >\n                      <img src=\"/t-up.png\" alt=\"Thumbs Up\" /> {post.likes}\n                    </button>\n                    <button \n                      onClick={() => handleDislike(post.postId)} \n                      className={`dislike-button ${post.dislikedBy.includes(loggedInSuperUser?.superuserId) ? 'active' : ''}`}\n                    >\n                      <img src=\"/t-down.png\" alt=\"Thumbs Down\" /> {post.dislikes}\n                    </button>\n                  </div>\n                  <div className=\"footer-comments\">\n                    <button className=\"comment-button\" onClick={() => handleOpenComments(post.postId)}>Comment</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <Dialog open={isCommentDialogOpen} onClose={handleCloseComments}>\n        <DialogTitle>\n          Comments\n          <img\n            src=\"/exit.png\"\n            alt=\"Close\"\n            className=\"exit-icon\"\n            onClick={handleCloseComments}\n          />\n        </DialogTitle>\n        <DialogContent>\n          {comments.map((comment) => (\n            <div key={comment.commentId} className=\"comment\">\n              <div className=\"comment-header\">\n                <div className=\"superuser-info-container\">\n                  <span className=\"superuser-info\">\n                    {comment.fullName} ({comment.superuseridNumber})\n                  </span>\n                  {(loggedInSuperUser && (loggedInSuperUser.superuserId === comment.superuserId || loggedInSuperUser.superuserId === currentPostOwner)) && (\n                    <img\n                      src=\"/delete.png\"\n                      alt=\"Delete\"\n                      className=\"delete-icon\"\n                      onClick={() => handleDeleteComment(comment.commentId, comment.superuserId)}\n                    />\n                  )}\n                </div>\n                <div className=\"timestamp-container\">\n                  <span className=\"formatted-time\">\n                    {formatTimestamp(comment.timestamp)}\n                  </span>\n                  <span className=\"relative-time\">\n                    {comment.relativeTime}\n                  </span>\n                </div>\n              </div>\n              <p>{comment.content}</p>\n            </div>\n          ))}\n        </DialogContent>\n        <DialogActions>\n          <div className=\"add-comment\" style={{ display: 'flex', width: '100%', padding: '10px' }}>\n            <input\n              type=\"text\"\n              value={newComment}\n              onChange={(e) => setNewComment(e.target.value)}\n              placeholder=\"Add a comment...\"\n              style={{ \n                flexGrow: 1, \n                marginRight: '10px', \n                padding: '8px', \n                border: '1px solid #ccc', \n                borderRadius: '4px' \n              }}\n            />\n            <Button \n              onClick={handleAddComment}\n              variant=\"contained\"\n              sx={{ \n                backgroundColor: '#8A252C', \n                color: 'white',\n                '&:hover': {\n                  backgroundColor: '#f9d67b',\n                  color: 'black'\n                },\n                transition: 'all 0.3s ease'\n              }}\n            >\n              Comment\n            </Button>\n          </div>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={isDeletePostDialogOpen} onClose={() => setIsDeletePostDialogOpen(false)}>\n        <DialogTitle>Confirm Delete</DialogTitle>\n        <DialogContent>\n          Are you sure you want to delete this post?\n        </DialogContent>\n        <DialogActions className=\"delete-dialog-actions\">\n          <Button onClick={() => setIsDeletePostDialogOpen(false)} className=\"cancel-button\">Cancel</Button>\n          <Button onClick={confirmDeletePost} className=\"delete-button\">Delete</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog open={isDeleteCommentDialogOpen} onClose={() => setIsDeleteCommentDialogOpen(false)}>\n        <DialogTitle>Confirm Delete</DialogTitle>\n        <DialogContent>\n          Are you sure you want to delete this comment?\n        </DialogContent>\n        <DialogActions className=\"delete-dialog-actions\">\n          <Button onClick={() => setIsDeleteCommentDialogOpen(false)} className=\"cancel-button\">Cancel</Button>\n          <Button onClick={confirmDeleteComment} className=\"delete-button\">Delete</Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default SUHome;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,MAAM,EAAEC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,aAAa,QAAQ,eAAe;AACzF,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,SAAS,GAAGL,QAAQ,CAAC;EACvBM,MAAM,EAAEA,CAAA,KAAM,MAAM,CAAC,aAAa,CAAC;EACnCC,OAAO,EAAEA,CAAA,kBAAMH,OAAA;IAAAI,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK;AACvC,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGrB,WAAW,CAAC,CAAC;EAChC,MAAM,CAACsB,gBAAgB,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiC,YAAY,EAAEC,eAAe,CAAC,GAAGlC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACmC,YAAY,EAAEC,eAAe,CAAC,GAAGpC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACqC,aAAa,EAAEC,gBAAgB,CAAC,GAAGtC,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACuC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2C,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAAC6C,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAAC+C,UAAU,EAAEC,aAAa,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiD,sBAAsB,EAAEC,yBAAyB,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACmD,yBAAyB,EAAEC,4BAA4B,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EACjF,MAAM,CAACqD,YAAY,EAAEC,eAAe,CAAC,GAAGtD,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACuD,cAAc,EAAEC,iBAAiB,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACyD,wBAAwB,EAAEC,2BAA2B,CAAC,GAAG1D,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5E,MAAM2D,cAAc,GAAG,SAAS,CAAC,CAAC;EAClC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC8D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG/D,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACgE,eAAe,EAAEC,kBAAkB,CAAC,GAAGjE,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMkE,YAAY,GAAG/D,MAAM,CAAC,IAAI,CAAC;EAEjCF,SAAS,CAAC,MAAM;IACd,MAAMkE,sBAAsB,GAAG,MAAAA,CAAA,KAAY;MACvC,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAAC;MAC7E,IAAIJ,eAAe,IAAIA,eAAe,CAACK,aAAa,EAAE;QAClD,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMtE,KAAK,CAACuE,GAAG,CAAC,oEAAoEP,eAAe,CAACK,aAAa,EAAE,CAAC;UACrI3B,oBAAoB,CAAC4B,QAAQ,CAACE,IAAI,CAAC;UACnCC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEJ,QAAQ,CAACE,IAAI,CAAC;QACvD,CAAC,CAAC,OAAOG,KAAK,EAAE;UACZF,OAAO,CAACE,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QAC1D;MACJ;IACJ,CAAC;IACDZ,sBAAsB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,4BAA4B,GAAG9E,WAAW,CAAC,MAAO+E,WAAW,IAAK;IACtE,IAAI;MACA,MAAMP,QAAQ,GAAG,MAAMQ,KAAK,CAAC,6DAA6DD,WAAW,EAAE,CAAC;MACxG,IAAIP,QAAQ,CAACS,EAAE,EAAE;QACb,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACvC,MAAMC,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACJ,SAAS,CAAC;QAC/C1B,2BAA2B,CAAC+B,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACR,WAAW,GAAGK;QAAS,CAAC,CAAC,CAAC;MAC/E,CAAC,MAAM;QACH5B,2BAA2B,CAAC+B,IAAI,KAAK;UAAE,GAAGA,IAAI;UAAE,CAACR,WAAW,GAAGtB;QAAe,CAAC,CAAC,CAAC;MACrF;IACJ,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MAClErB,2BAA2B,CAAC+B,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACR,WAAW,GAAGtB;MAAe,CAAC,CAAC,CAAC;IACrF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN1D,SAAS,CAAC,MAAM;IACd,MAAMyF,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACA,MAAMhB,QAAQ,GAAG,MAAMtE,KAAK,CAACuE,GAAG,CAAC,6BAA6B,CAAC;QAC/DE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,QAAQ,CAACE,IAAI,CAAC;QACjD,MAAMe,WAAW,GAAGjB,QAAQ,CAACE,IAAI,CAACgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAAC;QAC/FhE,QAAQ,CAAC2D,WAAW,CAAC;QAErB,MAAMM,YAAY,GAAG,IAAIC,GAAG,CAACP,WAAW,CAACQ,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACnB,WAAW,CAAC,CAAC;QACvEgB,YAAY,CAACI,OAAO,CAACpB,WAAW,IAAID,4BAA4B,CAACC,WAAW,CAAC,CAAC;MAClF,CAAC,CAAC,OAAOF,KAAK,EAAE;QACZF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IACDW,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACV,4BAA4B,CAAC,CAAC;EAElC/E,SAAS,CAAC,MAAM;IACd,IAAIoC,aAAa,EAAE;MACf,MAAMiE,wBAAwB,GAAG,MAAAA,CAAA,KAAY;QACzC,IAAI;UACA,MAAM,CAACC,gBAAgB,EAAEC,YAAY,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACvDtG,KAAK,CAACuE,GAAG,CAAC,kCAAkCtC,aAAa,EAAE,CAAC,EAC5DjC,KAAK,CAACuE,GAAG,CAAC,+BAA+BtC,aAAa,EAAE,CAAC,CAC5D,CAAC;UACF,MAAMsE,cAAc,GAAGJ,gBAAgB,CAAC3B,IAAI,CAC3CgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAAC,CAC7DG,GAAG,CAACS,OAAO,KAAK;YACb,GAAGA,OAAO;YACVC,YAAY,EAAEjG,MAAM,CAACgG,OAAO,CAACZ,SAAS,CAAC,CAACc,OAAO,CAAC;UACpD,CAAC,CAAC,CAAC;UACPpE,WAAW,CAACiE,cAAc,CAAC;UAC3BnE,mBAAmB,CAACgE,YAAY,CAAC5B,IAAI,CAACK,WAAW,CAAC;UAElD,MAAM8B,mBAAmB,GAAG,IAAIb,GAAG,CAACS,cAAc,CAACR,GAAG,CAACS,OAAO,IAAIA,OAAO,CAAC3B,WAAW,CAAC,CAAC;UACzF8B,mBAAmB,CAACV,OAAO,CAACpB,WAAW,IAAID,4BAA4B,CAACC,WAAW,CAAC,CAAC;QACvF,CAAC,CAAC,OAAOF,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;QAClE;MACF,CAAC;MACDuB,wBAAwB,CAAC,CAAC;IAC5B;EACF,CAAC,EAAE,CAACjE,aAAa,EAAE2C,4BAA4B,CAAC,CAAC;EAEjD,MAAMgC,uBAAuB,GAAG9G,WAAW,CAAC,MAAM;IAChD,MAAM+G,SAAS,GAAG5C,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAAC,IAAI,IAAI;IAC/E1B,oBAAoB,CAACmE,SAAS,CAAC;IAC/B,OAAOA,SAAS;EAClB,CAAC,EAAE,EAAE,CAAC;EAENhH,SAAS,CAAC,MAAM;IACd,MAAMiH,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMxC,QAAQ,GAAG,MAAMtE,KAAK,CAACuE,GAAG,CAAC,6BAA6B,CAAC;QAC/DE,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEJ,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QACnD,MAAMe,WAAW,GAAGjB,QAAQ,CAACE,IAAI,CAACgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAAC;QAC/FhE,QAAQ,CAAC2D,WAAW,CAAC;MACvB,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDmC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAENjH,SAAS,CAAC,MAAM;IACd,IAAI,EAAE,yBAAyB,IAAIkH,MAAM,CAAC,EAAE;MAC1CtC,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;IAClE;EACF,CAAC,EAAE,EAAE,CAAC;EAEN7E,SAAS,CAAC,MAAM;IACd,MAAMmH,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9B3E,WAAW,CAAC4E,YAAY,IACtBA,YAAY,CACTnB,GAAG,CAACS,OAAO,KAAK;QACf,GAAGA,OAAO;QACVC,YAAY,EAAEjG,MAAM,CAACgG,OAAO,CAACZ,SAAS,CAAC,CAACc,OAAO,CAAC;MAClD,CAAC,CAAC,CAAC,CACFlB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CACjE,CAAC;IACH,CAAC,EAAE,KAAK,CAAC;IACT,OAAO,MAAMuB,aAAa,CAACH,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,aAAa,GAAGtH,WAAW,CAAC,MAAM;IACtC0B,iBAAiB,CAAC,CAACD,gBAAgB,CAAC;EACtC,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;EAEtB,MAAM8F,OAAO,GAAGvH,WAAW,CAAC,MAAM;IAChC0B,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM8F,cAAc,GAAGxH,WAAW,CAAC,MAAM;IACvCwB,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMiG,cAAc,GAAGzH,WAAW,CAAC,MAAM;IACvCwB,QAAQ,CAAC,YAAY,CAAC;EACxB,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMkG,mBAAmB,GAAG1H,WAAW,CAAC,MAAM;IAC5CwB,QAAQ,CAAC,gBAAgB,CAAC;EAC5B,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMmG,qBAAqB,GAAIC,CAAC,IAAK;IACnC,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC9BnG,iBAAiB,CAACiG,OAAO,CAAC;IAC1B9D,kBAAkB,CAAC8D,OAAO,CAACG,MAAM,GAAG,CAAC,IAAI/F,YAAY,KAAK,IAAI,CAAC;EACjE,CAAC;EAED,MAAMgG,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACJ,MAAM,CAACM,KAAK,CAAC,CAAC,CAAC;IAClC,IAAID,IAAI,EAAE;MACR,MAAME,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;QACvBrG,eAAe,CAACmG,MAAM,CAACG,MAAM,CAAC;QAC9BzE,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC;MACDsE,MAAM,CAACI,aAAa,CAACN,IAAI,CAAC;IAC5B;EACF,CAAC;;EAED;EACA,MAAMO,mBAAmB,GAAG1I,WAAW,CAAC,MAAO+E,WAAW,IAAK;IAC7D,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMQ,KAAK,CAAC,6DAA6DD,WAAW,EAAE,CAAC;MACxG,IAAIP,QAAQ,CAACS,EAAE,EAAE;QACf,MAAMC,SAAS,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACvC,IAAID,SAAS,CAACyD,IAAI,GAAG,CAAC,EAAE;UACtB,MAAMvD,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACJ,SAAS,CAAC;UAC/C5B,iBAAiB,CAAC8B,QAAQ,CAAC;QAC7B,CAAC,MAAM;UACL9B,iBAAiB,CAACG,cAAc,CAAC;QACnC;MACF,CAAC,MAAM;QACLH,iBAAiB,CAACG,cAAc,CAAC;MACnC;IACF,CAAC,CAAC,OAAOoB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDvB,iBAAiB,CAACG,cAAc,CAAC;IACnC;EACF,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpB1D,SAAS,CAAC,MAAM;IACd,MAAMgH,SAAS,GAAGD,uBAAuB,CAAC,CAAC;IAC3C,IAAIC,SAAS,EAAE;MACb2B,mBAAmB,CAAC3B,SAAS,CAAChC,WAAW,CAAC;IAC5C;EACF,CAAC,EAAE,CAAC+B,uBAAuB,EAAE4B,mBAAmB,CAAC,CAAC;EAElD,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,EAAE,yBAAyB,IAAI3B,MAAM,CAAC,EAAE;IAC5C,MAAM4B,WAAW,GAAG,IAAI5B,MAAM,CAAC6B,uBAAuB,CAAC,CAAC;IACxDD,WAAW,CAACE,UAAU,GAAG,KAAK;IAC9BF,WAAW,CAACG,cAAc,GAAG,KAAK;IAClCH,WAAW,CAACI,IAAI,GAAG,OAAO;IAC1BJ,WAAW,CAACK,QAAQ,GAAIhB,KAAK,IAAK;MAChC,MAAMiB,UAAU,GAAGjB,KAAK,CAACkB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,UAAU;MACjDvH,iBAAiB,CAAEyH,WAAW,IAAKA,WAAW,GAAG,GAAG,GAAGF,UAAU,CAAC;IACpE,CAAC;IACDN,WAAW,CAACS,OAAO,GAAIpB,KAAK,IAAK;MAC/BvD,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEsD,KAAK,CAACrD,KAAK,CAAC;IACvD,CAAC;IACDgE,WAAW,CAACU,KAAK,CAAC,CAAC;EACrB,CAAC;EAED,MAAMC,gBAAgB,GAAG,MAAO5B,CAAC,IAAK;IACpCA,CAAC,CAAC6B,cAAc,CAAC,CAAC;IAElB,IAAI,CAAC9H,cAAc,IAAI,CAACM,YAAY,EAAE;MACpCyH,KAAK,CAAC,4DAA4D,CAAC;MACnE;IACF;IAEA,IAAI,CAAC/G,iBAAiB,EAAE;MACtB+G,KAAK,CAAC,wBAAwB,CAAC;MAC/B;IACF;IAEA,MAAMC,OAAO,GAAG;MACd9B,OAAO,EAAElG,cAAc;MACvBiI,KAAK,EAAE3H,YAAY;MACnB8C,WAAW,EAAEpC,iBAAiB,CAACoC,WAAW;MAC1C8E,QAAQ,EAAElH,iBAAiB,CAACkH,QAAQ;MACpCC,QAAQ,EAAEnH,iBAAiB,CAACoH,iBAAiB;MAC7CC,UAAU,EAAE,KAAK;MACjBC,KAAK,EAAE,CAAC;MACRC,QAAQ,EAAE;IACZ,CAAC;IAED,IAAI;MACF,MAAM1F,QAAQ,GAAG,MAAMtE,KAAK,CAACgG,IAAI,CAAC,iCAAiC,EAAEyD,OAAO,EAAE;QAC5EQ,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFrI,QAAQ,CAACsI,SAAS,IAAI,CAAC5F,QAAQ,CAACE,IAAI,EAAE,GAAG0F,SAAS,CAAC,CAAC;MACpDxI,iBAAiB,CAAC,EAAE,CAAC;MACrBI,eAAe,CAAC,IAAI,CAAC;MACrBE,eAAe,CAAC,IAAI,CAAC;MACrB6B,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,IAAIA,KAAK,CAACL,QAAQ,EAAE;QAClBG,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACL,QAAQ,CAACE,IAAI,CAAC;QACpDC,OAAO,CAACE,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACL,QAAQ,CAAC6F,MAAM,CAAC;MAC1D;IACF;EACF,CAAC;EAED,MAAMC,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI,CAAC5H,iBAAiB,EAAE;MACtB+G,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACF;IACA,IAAI;MACF,MAAMlF,QAAQ,GAAG,MAAMtE,KAAK,CAACgG,IAAI,CAAC,+BAA+BqE,MAAM,qBAAqB5H,iBAAiB,CAACoC,WAAW,EAAE,CAAC;MAC5H,MAAMyF,WAAW,GAAGhG,QAAQ,CAACE,IAAI;MACjC5C,QAAQ,CAACD,KAAK,CAACoE,GAAG,CAACC,IAAI,IACrBA,IAAI,CAACqE,MAAM,KAAKA,MAAM,GAAGC,WAAW,GAAGtE,IACzC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,MAAM4F,aAAa,GAAG,MAAOF,MAAM,IAAK;IACtC,IAAI,CAAC5H,iBAAiB,EAAE;MACtB+G,KAAK,CAAC,iCAAiC,CAAC;MACxC;IACF;IACA,IAAI;MACF,MAAMlF,QAAQ,GAAG,MAAMtE,KAAK,CAACgG,IAAI,CAAC,+BAA+BqE,MAAM,wBAAwB5H,iBAAiB,CAACoC,WAAW,EAAE,CAAC;MAC/H,MAAMyF,WAAW,GAAGhG,QAAQ,CAACE,IAAI;MACjC5C,QAAQ,CAACD,KAAK,CAACoE,GAAG,CAACC,IAAI,IACrBA,IAAI,CAACqE,MAAM,KAAKA,MAAM,GAAGC,WAAW,GAAGtE,IACzC,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAM6F,kBAAkB,GAAG,MAAOH,MAAM,IAAK;IAC3CnI,gBAAgB,CAACmI,MAAM,CAAC;IACxB,IAAI;MACF,MAAM,CAAClE,gBAAgB,EAAEC,YAAY,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACzDtG,KAAK,CAACuE,GAAG,CAAC,kCAAkC8F,MAAM,EAAE,CAAC,EACrDrK,KAAK,CAACuE,GAAG,CAAC,+BAA+B8F,MAAM,EAAE,CAAC,CACnD,CAAC;MACF,MAAM9D,cAAc,GAAGJ,gBAAgB,CAAC3B,IAAI,CACzCgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACD,CAAC,CAACE,SAAS,CAAC,GAAG,IAAID,IAAI,CAACF,CAAC,CAACG,SAAS,CAAC,CAAC,CAC7DG,GAAG,CAACS,OAAO,KAAK;QACf,GAAGA,OAAO;QACVC,YAAY,EAAEjG,MAAM,CAACgG,OAAO,CAACZ,SAAS,CAAC,CAACc,OAAO,CAAC;MAClD,CAAC,CAAC,CAAC;MACLpE,WAAW,CAACiE,cAAc,CAAC;MAC3BnE,mBAAmB,CAACgE,YAAY,CAAC5B,IAAI,CAACK,WAAW,CAAC;IACpD,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE;IACAnC,sBAAsB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMiI,mBAAmB,GAAGA,CAAA,KAAM;IAChCjI,sBAAsB,CAAC,KAAK,CAAC;IAC7BN,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMwI,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI/H,UAAU,CAACgI,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAE9B,MAAMnE,OAAO,GAAG;MACdmB,OAAO,EAAEhF,UAAU;MACnB0H,MAAM,EAAEpI,aAAa;MACrB4C,WAAW,EAAEpC,iBAAiB,CAACoC,WAAW;MAC1C8E,QAAQ,EAAElH,iBAAiB,CAACkH,QAAQ;MACpCE,iBAAiB,EAAEpH,iBAAiB,CAACoH;IACvC,CAAC;IAED,IAAI;MACF,MAAMvF,QAAQ,GAAG,MAAMtE,KAAK,CAACgG,IAAI,CAAC,oCAAoC,EAAEQ,OAAO,CAAC;MAChF,MAAMoE,0BAA0B,GAAG;QACjC,GAAGtG,QAAQ,CAACE,IAAI;QAChBiC,YAAY,EAAEjG,MAAM,CAAC8D,QAAQ,CAACE,IAAI,CAACoB,SAAS,CAAC,CAACc,OAAO,CAAC;MACxD,CAAC;MACDpE,WAAW,CAAC4E,YAAY,IAAI,CAAC0D,0BAA0B,EAAE,GAAG1D,YAAY,CAAC,CAAC;MAC1EtE,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAO+B,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,IAAIA,KAAK,CAACL,QAAQ,EAAE;QAClBG,OAAO,CAACE,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACL,QAAQ,CAACE,IAAI,CAAC;QACpDC,OAAO,CAACE,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAACL,QAAQ,CAAC6F,MAAM,CAAC;MAC1D;IACF;EACF,CAAC;EAED,MAAMU,gBAAgB,GAAIR,MAAM,IAAK;IACnC,IAAI,CAAC5H,iBAAiB,EAAE;MACtB+G,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACF;IACAtG,eAAe,CAACmH,MAAM,CAAC;IACvBvH,yBAAyB,CAAC,IAAI,CAAC;EACjC,CAAC;EAED,MAAMgI,mBAAmB,GAAGA,CAACC,SAAS,EAAEC,kBAAkB,KAAK;IAC7D,IAAI,CAACvI,iBAAiB,EAAE;MACtB+G,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;IACA,IAAI/G,iBAAiB,CAACoC,WAAW,KAAKmG,kBAAkB,IAAIvI,iBAAiB,CAACoC,WAAW,KAAK1C,gBAAgB,EAAE;MAC9Ge,eAAe,CAAC6H,SAAS,CAAC;MAC1B/H,4BAA4B,CAAC,IAAI,CAAC;IACpC,CAAC,MAAM;MACLwG,KAAK,CAAC,mDAAmD,CAAC;IAC5D;EACF,CAAC;EAED,MAAMyB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMjL,KAAK,CAACkL,MAAM,CAAC,+BAA+BjI,YAAY,EAAE,CAAC;MACjErB,QAAQ,CAACD,KAAK,CAACwJ,MAAM,CAACnF,IAAI,IAAIA,IAAI,CAACqE,MAAM,KAAKpH,YAAY,CAAC,CAAC;MAC5DH,yBAAyB,CAAC,KAAK,CAAC;IAClC,CAAC,CAAC,OAAO6B,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMyG,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACF,MAAMpL,KAAK,CAACkL,MAAM,CAAC,kCAAkCjI,YAAY,EAAE,EAAE;QACnEoI,MAAM,EAAE;UACNxG,WAAW,EAAEpC,iBAAiB,CAACoC;QACjC;MACF,CAAC,CAAC;MACFvC,WAAW,CAACD,QAAQ,CAAC8I,MAAM,CAAC3E,OAAO,IAAIA,OAAO,CAACuE,SAAS,KAAK9H,YAAY,CAAC,CAAC;MAC3ED,4BAA4B,CAAC,KAAK,CAAC;IACrC,CAAC,CAAC,OAAO2B,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C6E,KAAK,CAAC,wDAAwD,CAAC;IACjE;EACF,CAAC;EAED,MAAM8B,eAAe,GAAI1F,SAAS,IAAK;IACrC,MAAM2F,UAAU,GAAG/K,MAAM,CAACoF,SAAS,CAAC;IACpC,OAAO2F,UAAU,CAACC,MAAM,CAAC,gCAAgC,CAAC;EAC5D,CAAC;EAED,MAAMC,eAAe,GAAI7F,SAAS,IAAK;IACrC,OAAOpF,MAAM,CAACoF,SAAS,CAAC,CAACc,OAAO,CAAC,CAAC;EACpC,CAAC;EAED,MAAMgF,eAAe,GAAGA,CAAA,KAAM;IAC5BhK,iBAAiB,CAAC,EAAE,CAAC;IACrBM,eAAe,CAAC,IAAI,CAAC;IACrB6B,kBAAkB,CAAC,KAAK,CAAC;IACzB,IAAIC,YAAY,CAAC6H,OAAO,EAAE;MACxB7H,YAAY,CAAC6H,OAAO,CAAC9D,KAAK,GAAG,EAAE;IACjC;EACF,CAAC;EAED,oBACElH,OAAA;IAAKiL,SAAS,EAAC,QAAQ;IAAA7K,QAAA,gBACrBJ,OAAA,CAACF,QAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZR,OAAA;MAAGiL,SAAS,EAAC,UAAU;MAAA7K,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,KAAC,eAEpCR,OAAA;MAAKiL,SAAS,EAAC,iBAAiB;MAAA7K,QAAA,gBAC9BJ,OAAA;QAAKiL,SAAS,EAAC,gBAAgB;QAAA7K,QAAA,gBAC7BJ,OAAA;UAAKiL,SAAS,EAAC,gBAAgB;UAAA7K,QAAA,eAC7BJ,OAAA;YAAKkL,GAAG,EAAE1I,cAAc,IAAII,cAAe;YAACuI,GAAG,EAAC,kBAAkB;YAACF,SAAS,EAAC;UAAe;YAAA5K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5F,CAAC,eACNR,OAAA;UAAKiL,SAAS,EAAC,WAAW;UAAA7K,QAAA,gBACxBJ,OAAA;YAAMoL,QAAQ,EAAEzC,gBAAiB;YAAAvI,QAAA,gBAC/BJ,OAAA;cAAKiL,SAAS,EAAC,iBAAiB;cAAA7K,QAAA,gBAC9BJ,OAAA;gBACEqL,IAAI,EAAC,MAAM;gBACXJ,SAAS,EAAC,YAAY;gBACtB/D,KAAK,EAAEpG,cAAe;gBACtBwK,QAAQ,EAAExE,qBAAsB;gBAChCyE,WAAW,EAAC;cAAwC;gBAAAlL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACrD,CAAC,EACDyC,eAAe,iBACdjD,OAAA;gBAAQqL,IAAI,EAAC,QAAQ;gBAACJ,SAAS,EAAC,cAAc;gBAACO,OAAO,EAAET,eAAgB;gBAAA3K,QAAA,EAAC;cAEzE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CACT;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACNR,OAAA;cAAKiL,SAAS,EAAC,mBAAmB;cAAA7K,QAAA,gBAChCJ,OAAA;gBAAKiL,SAAS,EAAC,yBAAyB;gBAAA7K,QAAA,gBACtCJ,OAAA;kBAAOyL,OAAO,EAAC,aAAa;kBAAArL,QAAA,eAC1BJ,OAAA;oBAAKiL,SAAS,EAAC,cAAc;oBAACE,GAAG,EAAC,EAAE;oBAACD,GAAG,EAAC;kBAAc;oBAAA7K,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrD,CAAC,eACRR,OAAA;kBACE0L,GAAG,EAAEvI,YAAa;kBAClBwI,EAAE,EAAC,aAAa;kBAChBN,IAAI,EAAC,MAAM;kBACXJ,SAAS,EAAC,YAAY;kBACtBW,KAAK,EAAE;oBAAEC,OAAO,EAAE;kBAAO,CAAE;kBAC3BP,QAAQ,EAAElE,gBAAiB;kBAC3BoE,OAAO,EAAGzE,CAAC,IAAK;oBAAEA,CAAC,CAACE,MAAM,CAACC,KAAK,GAAG,IAAI;kBAAC;gBAAE;kBAAA7G,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC3C,CAAC,eACFR,OAAA;kBACEiL,SAAS,EAAC,UAAU;kBACpBE,GAAG,EAAC,KAAK;kBACTD,GAAG,EAAC,UAAU;kBACdM,OAAO,EAAEzD,cAAe;kBACxB6D,KAAK,EAAE;oBAAEE,MAAM,EAAE;kBAAU;gBAAE;kBAAAzL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC,eACNR,OAAA,CAACT,MAAM;gBACL8L,IAAI,EAAC,QAAQ;gBACbJ,SAAS,EAAC,aAAa;gBACvBc,OAAO,EAAC,WAAW;gBACnBC,EAAE,EAAE;kBACFC,YAAY,EAAE,MAAM;kBACpBC,KAAK,EAAE,EAAE;kBACTC,MAAM,EAAE,EAAE;kBACVC,eAAe,EAAE,SAAS;kBAC1B,SAAS,EAAE;oBAAEA,eAAe,EAAE;kBAAU;gBAC1C,CAAE;gBAAAhM,QAAA,EACH;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,EACNY,YAAY,iBACXpB,OAAA;YAAKiL,SAAS,EAAC,eAAe;YAAA7K,QAAA,eAC5BJ,OAAA;cAAKkL,GAAG,EAAE9J,YAAa;cAAC+J,GAAG,EAAC,SAAS;cAACS,KAAK,EAAE;gBAAEM,KAAK,EAAE,OAAO;gBAAEC,MAAM,EAAE;cAAQ;YAAE;cAAA9L,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjF,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACNR,OAAA;QAAKiL,SAAS,EAAC,WAAW;QAAA7K,QAAA,EACvBY,KAAK,CAACoE,GAAG,CAAEC,IAAI,iBACdrF,OAAA;UAAuBiL,SAAS,EAAC,WAAW;UAAA7K,QAAA,eAC1CJ,OAAA;YAAKiL,SAAS,EAAC,gBAAgB;YAAA7K,QAAA,gBAC7BJ,OAAA;cAAKiL,SAAS,EAAC,gBAAgB;cAAA7K,QAAA,gBAC7BJ,OAAA;gBAAKkL,GAAG,EAAExI,wBAAwB,CAAC2C,IAAI,CAACnB,WAAW,CAAC,IAAItB,cAAe;gBAACuI,GAAG,EAAC;cAAkB;gBAAA9K,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACjGR,OAAA;gBAAAI,QAAA,GAAKiF,IAAI,CAAC2D,QAAQ,EAAC,IAAE,EAAC3D,IAAI,CAAC6D,iBAAiB,EAAC,GAAC;cAAA;gBAAA7I,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAClDsB,iBAAiB,IAAIA,iBAAiB,CAACoC,WAAW,KAAKmB,IAAI,CAACnB,WAAW,iBACtElE,OAAA;gBACEkL,GAAG,EAAC,aAAa;gBACjBC,GAAG,EAAC,QAAQ;gBACZF,SAAS,EAAC,aAAa;gBACvBO,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAAC7E,IAAI,CAACqE,MAAM,CAAE;gBAC7CkC,KAAK,EAAE;kBAAEE,MAAM,EAAE,SAAS;kBAAEI,KAAK,EAAE,MAAM;kBAAEC,MAAM,EAAE,MAAM;kBAAEE,UAAU,EAAE;gBAAO;cAAE;gBAAAhM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjF,CACF;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACNR,OAAA;cAAKiL,SAAS,EAAC,WAAW;cAAA7K,QAAA,gBACxBJ,OAAA;gBAAMiL,SAAS,EAAC,gBAAgB;gBAAA7K,QAAA,EAAEuK,eAAe,CAACtF,IAAI,CAACJ,SAAS;cAAC;gBAAA5E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACzER,OAAA;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACNR,OAAA;gBAAMiL,SAAS,EAAC,eAAe;gBAAA7K,QAAA,EAAE0K,eAAe,CAACzF,IAAI,CAACJ,SAAS;cAAC;gBAAA5E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrE,CAAC,eACNR,OAAA;cAAKiL,SAAS,EAAC,eAAe;cAAA7K,QAAA,gBAC5BJ,OAAA;gBAAAI,QAAA,EAAIiF,IAAI,CAAC2B;cAAO;gBAAA3G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACpB6E,IAAI,CAAC0D,KAAK,iBACT/I,OAAA;gBACEiL,SAAS,EAAC,YAAY;gBACtBE,GAAG,EAAC,MAAM;gBACVD,GAAG,EAAE7F,IAAI,CAAC0D,KAAM;gBAChB6C,KAAK,EAAE;kBAAEU,QAAQ,EAAE,MAAM;kBAAEH,MAAM,EAAE;gBAAO;cAAE;gBAAA9L,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC7C,CACF;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACNR,OAAA;cAAKiL,SAAS,EAAC;YAAa;cAAA5K,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eAC/BR,OAAA;cAAKiL,SAAS,EAAC,gBAAgB;cAAA7K,QAAA,gBAC7BJ,OAAA;gBAAKiL,SAAS,EAAC,cAAc;gBAAA7K,QAAA,gBAC3BJ,OAAA;kBACEwL,OAAO,EAAEA,CAAA,KAAM/B,UAAU,CAACpE,IAAI,CAACqE,MAAM,CAAE;kBACvCuB,SAAS,EAAE,eAAe5F,IAAI,CAACkH,OAAO,CAACC,QAAQ,CAAC1K,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEoC,WAAW,CAAC,GAAG,QAAQ,GAAG,EAAE,EAAG;kBAAA9D,QAAA,gBAElGJ,OAAA;oBAAKkL,GAAG,EAAC,WAAW;oBAACC,GAAG,EAAC;kBAAW;oBAAA9K,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,KAAC,EAAC6E,IAAI,CAAC+D,KAAK;gBAAA;kBAAA/I,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC7C,CAAC,eACTR,OAAA;kBACEwL,OAAO,EAAEA,CAAA,KAAM5B,aAAa,CAACvE,IAAI,CAACqE,MAAM,CAAE;kBAC1CuB,SAAS,EAAE,kBAAkB5F,IAAI,CAACoH,UAAU,CAACD,QAAQ,CAAC1K,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEoC,WAAW,CAAC,GAAG,QAAQ,GAAG,EAAE,EAAG;kBAAA9D,QAAA,gBAExGJ,OAAA;oBAAKkL,GAAG,EAAC,aAAa;oBAACC,GAAG,EAAC;kBAAa;oBAAA9K,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,KAAC,EAAC6E,IAAI,CAACgE,QAAQ;gBAAA;kBAAAhJ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACpD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC,eACNR,OAAA;gBAAKiL,SAAS,EAAC,iBAAiB;gBAAA7K,QAAA,eAC9BJ,OAAA;kBAAQiL,SAAS,EAAC,gBAAgB;kBAACO,OAAO,EAAEA,CAAA,KAAM3B,kBAAkB,CAACxE,IAAI,CAACqE,MAAM,CAAE;kBAAAtJ,QAAA,EAAC;gBAAO;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAnDE6E,IAAI,CAACqE,MAAM;UAAArJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoDhB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENR,OAAA,CAACR,MAAM;MAACkN,IAAI,EAAE9K,mBAAoB;MAAC8E,OAAO,EAAEoD,mBAAoB;MAAA1J,QAAA,gBAC9DJ,OAAA,CAACP,WAAW;QAAAW,QAAA,GAAC,UAEX,eAAAJ,OAAA;UACEkL,GAAG,EAAC,WAAW;UACfC,GAAG,EAAC,OAAO;UACXF,SAAS,EAAC,WAAW;UACrBO,OAAO,EAAE1B;QAAoB;UAAAzJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eACdR,OAAA,CAACN,aAAa;QAAAU,QAAA,EACXsB,QAAQ,CAAC0D,GAAG,CAAES,OAAO,iBACpB7F,OAAA;UAA6BiL,SAAS,EAAC,SAAS;UAAA7K,QAAA,gBAC9CJ,OAAA;YAAKiL,SAAS,EAAC,gBAAgB;YAAA7K,QAAA,gBAC7BJ,OAAA;cAAKiL,SAAS,EAAC,0BAA0B;cAAA7K,QAAA,gBACvCJ,OAAA;gBAAMiL,SAAS,EAAC,gBAAgB;gBAAA7K,QAAA,GAC7ByF,OAAO,CAACmD,QAAQ,EAAC,IAAE,EAACnD,OAAO,CAACqD,iBAAiB,EAAC,GACjD;cAAA;gBAAA7I,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,EACLsB,iBAAiB,KAAKA,iBAAiB,CAACoC,WAAW,KAAK2B,OAAO,CAAC3B,WAAW,IAAIpC,iBAAiB,CAACoC,WAAW,KAAK1C,gBAAgB,CAAC,iBAClIxB,OAAA;gBACEkL,GAAG,EAAC,aAAa;gBACjBC,GAAG,EAAC,QAAQ;gBACZF,SAAS,EAAC,aAAa;gBACvBO,OAAO,EAAEA,CAAA,KAAMrB,mBAAmB,CAACtE,OAAO,CAACuE,SAAS,EAAEvE,OAAO,CAAC3B,WAAW;cAAE;gBAAA7D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5E,CACF;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC,eACNR,OAAA;cAAKiL,SAAS,EAAC,qBAAqB;cAAA7K,QAAA,gBAClCJ,OAAA;gBAAMiL,SAAS,EAAC,gBAAgB;gBAAA7K,QAAA,EAC7BuK,eAAe,CAAC9E,OAAO,CAACZ,SAAS;cAAC;gBAAA5E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/B,CAAC,eACPR,OAAA;gBAAMiL,SAAS,EAAC,eAAe;gBAAA7K,QAAA,EAC5ByF,OAAO,CAACC;cAAY;gBAAAzF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACJ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACNR,OAAA;YAAAI,QAAA,EAAIyF,OAAO,CAACmB;UAAO;YAAA3G,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAxBhBqF,OAAO,CAACuE,SAAS;UAAA/J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAyBtB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW,CAAC,eAChBR,OAAA,CAACL,aAAa;QAAAS,QAAA,eACZJ,OAAA;UAAKiL,SAAS,EAAC,aAAa;UAACW,KAAK,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEK,KAAK,EAAE,MAAM;YAAES,OAAO,EAAE;UAAO,CAAE;UAAAvM,QAAA,gBACtFJ,OAAA;YACEqL,IAAI,EAAC,MAAM;YACXnE,KAAK,EAAElF,UAAW;YAClBsJ,QAAQ,EAAGvE,CAAC,IAAK9E,aAAa,CAAC8E,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;YAC/CqE,WAAW,EAAC,kBAAkB;YAC9BK,KAAK,EAAE;cACLgB,QAAQ,EAAE,CAAC;cACXC,WAAW,EAAE,MAAM;cACnBF,OAAO,EAAE,KAAK;cACdG,MAAM,EAAE,gBAAgB;cACxBb,YAAY,EAAE;YAChB;UAAE;YAAA5L,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eACFR,OAAA,CAACT,MAAM;YACLiM,OAAO,EAAEzB,gBAAiB;YAC1BgC,OAAO,EAAC,WAAW;YACnBC,EAAE,EAAE;cACFI,eAAe,EAAE,SAAS;cAC1BW,KAAK,EAAE,OAAO;cACd,SAAS,EAAE;gBACTX,eAAe,EAAE,SAAS;gBAC1BW,KAAK,EAAE;cACT,CAAC;cACDC,UAAU,EAAE;YACd,CAAE;YAAA5M,QAAA,EACH;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAETR,OAAA,CAACR,MAAM;MAACkN,IAAI,EAAExK,sBAAuB;MAACwE,OAAO,EAAEA,CAAA,KAAMvE,yBAAyB,CAAC,KAAK,CAAE;MAAA/B,QAAA,gBACpFJ,OAAA,CAACP,WAAW;QAAAW,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACzCR,OAAA,CAACN,aAAa;QAAAU,QAAA,EAAC;MAEf;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,eAChBR,OAAA,CAACL,aAAa;QAACsL,SAAS,EAAC,uBAAuB;QAAA7K,QAAA,gBAC9CJ,OAAA,CAACT,MAAM;UAACiM,OAAO,EAAEA,CAAA,KAAMrJ,yBAAyB,CAAC,KAAK,CAAE;UAAC8I,SAAS,EAAC,eAAe;UAAA7K,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClGR,OAAA,CAACT,MAAM;UAACiM,OAAO,EAAElB,iBAAkB;UAACW,SAAS,EAAC,eAAe;UAAA7K,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAETR,OAAA,CAACR,MAAM;MAACkN,IAAI,EAAEtK,yBAA0B;MAACsE,OAAO,EAAEA,CAAA,KAAMrE,4BAA4B,CAAC,KAAK,CAAE;MAAAjC,QAAA,gBAC1FJ,OAAA,CAACP,WAAW;QAAAW,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACzCR,OAAA,CAACN,aAAa;QAAAU,QAAA,EAAC;MAEf;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,eAChBR,OAAA,CAACL,aAAa;QAACsL,SAAS,EAAC,uBAAuB;QAAA7K,QAAA,gBAC9CJ,OAAA,CAACT,MAAM;UAACiM,OAAO,EAAEA,CAAA,KAAMnJ,4BAA4B,CAAC,KAAK,CAAE;UAAC4I,SAAS,EAAC,eAAe;UAAA7K,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrGR,OAAA,CAACT,MAAM;UAACiM,OAAO,EAAEf,oBAAqB;UAACQ,SAAS,EAAC,eAAe;UAAA7K,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACE,EAAA,CAtoBID,MAAM;EAAA,QACSnB,WAAW;AAAA;AAAA2N,EAAA,GAD1BxM,MAAM;AAwoBZ,eAAeA,MAAM;AAAC,IAAAwM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}