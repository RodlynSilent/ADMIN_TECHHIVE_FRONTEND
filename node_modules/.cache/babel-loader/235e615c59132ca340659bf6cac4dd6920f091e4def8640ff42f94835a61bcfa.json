{"ast":null,"code":"var _jsxFileName = \"/Users/richardmolina/Documents/admin_frontend/src/admin pages/ADHome/AdHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport Loadable from 'react-loadable';\nimport moment from 'moment';\nimport AdNavBar from \"../../components/AdNavBar\";\nimport \"./AdHome.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdComment = Loadable({\n  loader: () => import('./AdComment'),\n  loading: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 18\n  }, this)\n});\nconst AdHome = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isOverlayVisible, setOverlayVisible] = useState(false);\n  const [newPostContent, setNewPostContent] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [currentPostId, setCurrentPostId] = useState(null);\n  const [currentPostOwner, setCurrentPostOwner] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);\n  const [loggedInAdmin, setLoggedInAdmin] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\n  const [isDeleteCommentDialogOpen, setIsDeleteCommentDialogOpen] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [profilePicture, setProfilePicture] = useState(null); // State to hold profile picture\n  const [adminProfilePictures, setAdminProfilePictures] = useState({});\n  const defaultProfile = '/dp.png'; // Path to the default profile picture\n  const [showCloseButton, setShowCloseButton] = useState(false);\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    const fetchLoggedInAdmin = async () => {\n      const storedAdmin = JSON.parse(localStorage.getItem(\"loggedInAdmin\"));\n      if (storedAdmin && storedAdmin.adminname) {\n        try {\n          const response = await axios.get(`http://localhost:8080/admin/getByAdminname?adminname=${storedAdmin.adminname}`);\n          setLoggedInAdmin(response.data);\n          console.log(\"Fetched admin data:\", response.data); // Log fetched admin data\n        } catch (error) {\n          console.error(\"Error fetching admin data:\", error);\n        }\n      }\n    };\n    fetchLoggedInAdmin();\n  }, []);\n  const fetchAdminProfilePicture = useCallback(async adminId => {\n    try {\n      const response = await fetch(`http://localhost:8080/admin/profile/getProfilePicture/${adminId}`);\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        const imageUrl = URL.createObjectURL(imageBlob);\n        setAdminProfilePictures(prev => ({\n          ...prev,\n          [adminId]: imageUrl\n        }));\n      } else {\n        setAdminProfilePictures(prev => ({\n          ...prev,\n          [adminId]: defaultProfile\n        }));\n      }\n    } catch (error) {\n      console.error('Failed to fetch admin profile picture:', error);\n      setAdminProfilePictures(prev => ({\n        ...prev,\n        [adminId]: defaultProfile\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    const fetchPostsAndPictures = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/posts\");\n        console.log(\"Fetched posts data:\", response.data); // Log fetched posts data\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setPosts(sortedPosts);\n\n        // Fetch profile pictures for each post owner\n        const adminIds = new Set(sortedPosts.map(post => post.adminId));\n        adminIds.forEach(adminId => fetchAdminProfilePicture(adminId));\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPostsAndPictures();\n  }, [fetchAdminProfilePicture]);\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    if (!newPostContent && !imagePreview) {\n      alert(\"Please enter a post or select a picture before submitting.\");\n      return;\n    }\n    if (!loggedInAdmin) {\n      alert(\"Please log in to post.\");\n      return;\n    }\n    const newPost = {\n      content: newPostContent,\n      image: imagePreview,\n      adminId: loggedInAdmin.adminId,\n      fullName: loggedInAdmin.fullName,\n      idNumber: loggedInAdmin.idNumber,\n      isVerified: false,\n      likes: 0,\n      dislikes: 0\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8080/posts/add\", newPost, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(prevPosts => [response.data, ...prevPosts]);\n      setNewPostContent(\"\");\n      setSelectedFile(null);\n      setImagePreview(null);\n      setShowCloseButton(false);\n    } catch (error) {\n      console.error(\"Error posting data:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n      }\n    }\n  };\n  const handleLike = async postId => {\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/like`, null, {\n        params: {\n          userId: loggedInAdmin.adminId,\n          // Admin ID\n          isAdmin: true // Since this is the admin side\n        }\n      });\n      const updatedPost = response.data;\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n  const handleDislike = async postId => {\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/dislike`, null, {\n        params: {\n          userId: loggedInAdmin.adminId,\n          // Admin ID\n          isAdmin: true // Since this is the admin side\n        }\n      });\n      const updatedPost = response.data;\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n  const handleOpenComments = async postId => {\n    setCurrentPostId(postId);\n    try {\n      const [commentsResponse, postResponse] = await Promise.all([axios.get(`http://localhost:8080/comments/${postId}`), axios.get(`http://localhost:8080/posts/${postId}`)]);\n      const sortedComments = commentsResponse.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(comment => ({\n        ...comment,\n        relativeTime: moment(comment.timestamp).fromNow()\n      }));\n      setComments(sortedComments);\n      setCurrentPostOwner(postResponse.data.adminId);\n    } catch (error) {\n      console.error(\"Error fetching comments or post details:\", error);\n    }\n    setIsCommentDialogOpen(true);\n  };\n  const handleCloseComments = () => {\n    setIsCommentDialogOpen(false);\n    setCurrentPostId(null);\n  };\n  const handleAddComment = async () => {\n    if (newComment.trim() === '') return;\n    const comment = {\n      content: newComment,\n      postId: currentPostId,\n      adminId: loggedInAdmin.adminId,\n      fullName: loggedInAdmin.fullName,\n      idNumber: loggedInAdmin.idNumber\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/comments/add', comment);\n      const newCommentWithRelativeTime = {\n        ...response.data,\n        relativeTime: moment(response.data.timestamp).fromNow()\n      };\n      setComments(prevComments => [newCommentWithRelativeTime, ...prevComments]);\n      setNewComment('');\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n      }\n    }\n  };\n  const handleDeletePost = postId => {\n    if (!loggedInAdmin) {\n      alert(\"Please log in to delete posts.\");\n      return;\n    }\n    setItemToDelete(postId);\n    setIsDeletePostDialogOpen(true);\n  };\n  const confirmDeletePost = async () => {\n    try {\n      await axios.delete(`http://localhost:8080/posts/${itemToDelete}`);\n      setPosts(posts.filter(post => post.postId !== itemToDelete));\n      setIsDeletePostDialogOpen(false);\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n    }\n  };\n  const handleDeleteComment = (commentId, commentAdminId) => {\n    if (!loggedInAdmin) {\n      alert(\"Please log in to delete comments.\");\n      return;\n    }\n    if (loggedInAdmin.adminId === commentAdminId || loggedInAdmin.adminId === currentPostOwner) {\n      setItemToDelete(commentId);\n      setIsDeleteCommentDialogOpen(true);\n    } else {\n      alert(\"You don't have permission to delete this comment.\");\n    }\n  };\n  const confirmDeleteComment = async () => {\n    try {\n      await axios.delete(`http://localhost:8080/comments/${itemToDelete}`, {\n        params: {\n          adminId: loggedInAdmin.adminId\n        }\n      });\n      setComments(comments.filter(comment => comment.commentId !== itemToDelete));\n      setIsDeleteCommentDialogOpen(false);\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n      alert(\"Failed to delete comment. You may not have permission.\");\n    }\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n        setShowCloseButton(true);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleClosePost = () => {\n    setNewPostContent('');\n    setImagePreview(null);\n    setShowCloseButton(false);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adhome\",\n    children: [/*#__PURE__*/_jsxDEV(AdNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"HWildcat\",\n      children: \"WILDCAT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"logo-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: profilePicture || defaultProfile,\n            alt: \"Admin Avatar\",\n            className: \"admins-dp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handlePostSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"post-input\",\n                value: newPostContent,\n                onChange: e => setNewPostContent(e.target.value),\n                placeholder: \"What's happening in your day, Wildcat?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this), showCloseButton && /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"close-button\",\n                onClick: handleClosePost,\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-subcontainer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-subcontainer-icons\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"file-upload\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"gallery-icon\",\n                    alt: \"\",\n                    src: \"/gallery.png\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  ref: fileInputRef,\n                  id: \"file-upload\",\n                  type: \"file\",\n                  className: \"file-input\",\n                  style: {\n                    display: \"none\"\n                  },\n                  onChange: handleFileChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                className: \"post-button\",\n                variant: \"contained\",\n                sx: {\n                  borderRadius: \"10px\",\n                  width: 60,\n                  height: 30,\n                  backgroundColor: \"#8A252C\",\n                  \"&:hover\": {\n                    backgroundColor: \"#A91D3A\"\n                  }\n                },\n                children: \"POST\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-preview\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imagePreview,\n              alt: \"Preview\",\n              style: {\n                width: '100px',\n                height: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-list\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: adminProfilePictures[post.adminId] || defaultProfile,\n                alt: \"Admin Avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [post.fullName, \" (\", post.idNumber, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), loggedInAdmin && loggedInAdmin.adminId === post.adminId && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/delete.png\",\n                alt: \"Delete\",\n                className: \"delete-icon\",\n                onClick: () => setItemToDelete(post.postId),\n                style: {\n                  cursor: 'pointer',\n                  width: '20px',\n                  height: '20px',\n                  marginLeft: 'auto'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timestamp\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"formatted-date\",\n                children: moment(post.timestamp).format('dddd, MMMM D, YYYY [at] h:mm A')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"relative-time\",\n                children: moment(post.timestamp).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-contents\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"post-image\",\n                alt: \"Post\",\n                src: post.image,\n                style: {\n                  maxWidth: '100%',\n                  height: 'auto'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-line\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer-icons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleLike(post.postId),\n                  className: `like-button ${post.likedBy.includes(loggedInAdmin === null || loggedInAdmin === void 0 ? void 0 : loggedInAdmin.adminId) ? 'active' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/t-up.png\",\n                    alt: \"Thumbs Up\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 23\n                  }, this), \" \", post.likes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDislike(post.postId),\n                  className: `dislike-button ${post.dislikedBy.includes(loggedInAdmin === null || loggedInAdmin === void 0 ? void 0 : loggedInAdmin.adminId) ? 'active' : ''}`,\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/t-down.png\",\n                    alt: \"Thumbs Down\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 23\n                  }, this), \" \", post.dislikes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"footer-comments\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment-button\",\n                  onClick: () => setCurrentPostId(post.postId),\n                  children: \"Comment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this)\n        }, post.postId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 5\n  }, this);\n};\n_s(AdHome, \"07pgLIeXnHPYJOGM+iJ61v8mTTM=\", false, function () {\n  return [useNavigate];\n});\n_c = AdHome;\nexport default AdHome;\nvar _c;\n$RefreshReg$(_c, \"AdHome\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","useNavigate","Button","Dialog","DialogTitle","DialogContent","DialogActions","Loadable","moment","AdNavBar","jsxDEV","_jsxDEV","AdComment","loader","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","AdHome","_s","navigate","isOverlayVisible","setOverlayVisible","newPostContent","setNewPostContent","posts","setPosts","selectedFile","setSelectedFile","imagePreview","setImagePreview","currentPostId","setCurrentPostId","currentPostOwner","setCurrentPostOwner","comments","setComments","isCommentDialogOpen","setIsCommentDialogOpen","loggedInAdmin","setLoggedInAdmin","newComment","setNewComment","isDeletePostDialogOpen","setIsDeletePostDialogOpen","isDeleteCommentDialogOpen","setIsDeleteCommentDialogOpen","itemToDelete","setItemToDelete","profilePicture","setProfilePicture","adminProfilePictures","setAdminProfilePictures","defaultProfile","showCloseButton","setShowCloseButton","fileInputRef","fetchLoggedInAdmin","storedAdmin","JSON","parse","localStorage","getItem","adminname","response","get","data","console","log","error","fetchAdminProfilePicture","adminId","fetch","ok","imageBlob","blob","imageUrl","URL","createObjectURL","prev","fetchPostsAndPictures","sortedPosts","sort","a","b","Date","timestamp","adminIds","Set","map","post","forEach","handlePostSubmit","e","preventDefault","alert","newPost","content","image","fullName","idNumber","isVerified","likes","dislikes","headers","prevPosts","status","handleLike","postId","params","userId","isAdmin","updatedPost","handleDislike","handleOpenComments","commentsResponse","postResponse","Promise","all","sortedComments","comment","relativeTime","fromNow","handleCloseComments","handleAddComment","trim","newCommentWithRelativeTime","prevComments","handleDeletePost","confirmDeletePost","delete","filter","handleDeleteComment","commentId","commentAdminId","confirmDeleteComment","handleFileChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleClosePost","current","value","className","src","alt","onSubmit","type","onChange","placeholder","onClick","htmlFor","ref","id","style","display","variant","sx","borderRadius","width","height","backgroundColor","cursor","marginLeft","format","maxWidth","likedBy","includes","dislikedBy","_c","$RefreshReg$"],"sources":["/Users/richardmolina/Documents/admin_frontend/src/admin pages/ADHome/AdHome.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\nimport Loadable from 'react-loadable';\r\nimport moment from 'moment';\r\nimport AdNavBar from \"../../components/AdNavBar\";\r\nimport \"./AdHome.css\";\r\n\r\nconst AdComment = Loadable({\r\n  loader: () => import('./AdComment'),\r\n  loading: () => <div>Loading...</div>,\r\n});\r\n\r\nconst AdHome = () => {\r\n  const navigate = useNavigate();\r\n  const [isOverlayVisible, setOverlayVisible] = useState(false);\r\n  const [newPostContent, setNewPostContent] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [currentPostId, setCurrentPostId] = useState(null);\r\n  const [currentPostOwner, setCurrentPostOwner] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);\r\n  const [loggedInAdmin, setLoggedInAdmin] = useState(null);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\r\n  const [isDeleteCommentDialogOpen, setIsDeleteCommentDialogOpen] = useState(false);\r\n  const [itemToDelete, setItemToDelete] = useState(null);\r\n  const [profilePicture, setProfilePicture] = useState(null); // State to hold profile picture\r\n  const [adminProfilePictures, setAdminProfilePictures] = useState({});\r\n  const defaultProfile = '/dp.png'; // Path to the default profile picture\r\n  const [showCloseButton, setShowCloseButton] = useState(false);\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchLoggedInAdmin = async () => {\r\n      const storedAdmin = JSON.parse(localStorage.getItem(\"loggedInAdmin\"));\r\n      if (storedAdmin && storedAdmin.adminname) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8080/admin/getByAdminname?adminname=${storedAdmin.adminname}`);\r\n          setLoggedInAdmin(response.data);\r\n          console.log(\"Fetched admin data:\", response.data); // Log fetched admin data\r\n        } catch (error) {\r\n          console.error(\"Error fetching admin data:\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchLoggedInAdmin();\r\n  }, []);\r\n\r\n  const fetchAdminProfilePicture = useCallback(async (adminId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/admin/profile/getProfilePicture/${adminId}`);\r\n      if (response.ok) {\r\n        const imageBlob = await response.blob();\r\n        const imageUrl = URL.createObjectURL(imageBlob);\r\n        setAdminProfilePictures(prev => ({ ...prev, [adminId]: imageUrl }));\r\n      } else {\r\n        setAdminProfilePictures(prev => ({ ...prev, [adminId]: defaultProfile }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch admin profile picture:', error);\r\n      setAdminProfilePictures(prev => ({ ...prev, [adminId]: defaultProfile }));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchPostsAndPictures = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/posts\");\r\n        console.log(\"Fetched posts data:\", response.data); // Log fetched posts data\r\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n        setPosts(sortedPosts);\r\n\r\n        // Fetch profile pictures for each post owner\r\n        const adminIds = new Set(sortedPosts.map(post => post.adminId));\r\n        adminIds.forEach(adminId => fetchAdminProfilePicture(adminId));\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n    fetchPostsAndPictures();\r\n  }, [fetchAdminProfilePicture]);\r\n\r\n  const handlePostSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!newPostContent && !imagePreview) {\r\n      alert(\"Please enter a post or select a picture before submitting.\");\r\n      return;\r\n    }\r\n\r\n    if (!loggedInAdmin) {\r\n      alert(\"Please log in to post.\");\r\n      return;\r\n    }\r\n\r\n    const newPost = {\r\n      content: newPostContent,\r\n      image: imagePreview,\r\n      adminId: loggedInAdmin.adminId,\r\n      fullName: loggedInAdmin.fullName,\r\n      idNumber: loggedInAdmin.idNumber,\r\n      isVerified: false,\r\n      likes: 0,\r\n      dislikes: 0,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/posts/add\", newPost, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(prevPosts => [response.data, ...prevPosts]);\r\n      setNewPostContent(\"\");\r\n      setSelectedFile(null);\r\n      setImagePreview(null);\r\n      setShowCloseButton(false);\r\n    } catch (error) {\r\n      console.error(\"Error posting data:\", error);\r\n      if (error.response) {\r\n        console.error(\"Response data:\", error.response.data);\r\n        console.error(\"Response status:\", error.response.status);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLike = async (postId) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/like`, null, {\r\n        params: {\r\n          userId: loggedInAdmin.adminId, // Admin ID\r\n          isAdmin: true // Since this is the admin side\r\n        }\r\n      });\r\n      const updatedPost = response.data;\r\n      setPosts(posts.map(post =>\r\n        post.postId === postId ? updatedPost : post\r\n      ));\r\n    } catch (error) {\r\n      console.error(\"Error liking post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDislike = async (postId) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/dislike`, null, {\r\n        params: {\r\n          userId: loggedInAdmin.adminId, // Admin ID\r\n          isAdmin: true // Since this is the admin side\r\n        }\r\n      });\r\n      const updatedPost = response.data;\r\n      setPosts(posts.map(post =>\r\n        post.postId === postId ? updatedPost : post\r\n      ));\r\n    } catch (error) {\r\n      console.error(\"Error disliking post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleOpenComments = async (postId) => {\r\n    setCurrentPostId(postId);\r\n    try {\r\n      const [commentsResponse, postResponse] = await Promise.all([\r\n        axios.get(`http://localhost:8080/comments/${postId}`),\r\n        axios.get(`http://localhost:8080/posts/${postId}`)\r\n      ]);\r\n      const sortedComments = commentsResponse.data\r\n        .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\r\n        .map(comment => ({\r\n          ...comment,\r\n          relativeTime: moment(comment.timestamp).fromNow()\r\n        }));\r\n      setComments(sortedComments);\r\n      setCurrentPostOwner(postResponse.data.adminId);\r\n    } catch (error) {\r\n      console.error(\"Error fetching comments or post details:\", error);\r\n    }\r\n    setIsCommentDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseComments = () => {\r\n    setIsCommentDialogOpen(false);\r\n    setCurrentPostId(null);\r\n  };\r\n\r\n  const handleAddComment = async () => {\r\n    if (newComment.trim() === '') return;\r\n\r\n    const comment = {\r\n      content: newComment,\r\n      postId: currentPostId,\r\n      adminId: loggedInAdmin.adminId,\r\n      fullName: loggedInAdmin.fullName,\r\n      idNumber: loggedInAdmin.idNumber,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/comments/add', comment);\r\n      const newCommentWithRelativeTime = {\r\n        ...response.data,\r\n        relativeTime: moment(response.data.timestamp).fromNow()\r\n      };\r\n      setComments(prevComments => [newCommentWithRelativeTime, ...prevComments]);\r\n      setNewComment('');\r\n    } catch (error) {\r\n      console.error(\"Error adding comment:\", error);\r\n      if (error.response) {\r\n        console.error(\"Response data:\", error.response.data);\r\n        console.error(\"Response status:\", error.response.status);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = (postId) => {\r\n    if (!loggedInAdmin) {\r\n      alert(\"Please log in to delete posts.\");\r\n      return;\r\n    }\r\n    setItemToDelete(postId);\r\n    setIsDeletePostDialogOpen(true);\r\n  };\r\n\r\n  const confirmDeletePost = async () => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/posts/${itemToDelete}`);\r\n      setPosts(posts.filter(post => post.postId !== itemToDelete));\r\n      setIsDeletePostDialogOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Error deleting post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = (commentId, commentAdminId) => {\r\n    if (!loggedInAdmin) {\r\n      alert(\"Please log in to delete comments.\");\r\n      return;\r\n    }\r\n    if (loggedInAdmin.adminId === commentAdminId || loggedInAdmin.adminId === currentPostOwner) {\r\n      setItemToDelete(commentId);\r\n      setIsDeleteCommentDialogOpen(true);\r\n    } else {\r\n      alert(\"You don't have permission to delete this comment.\");\r\n    }\r\n  };\r\n\r\n  const confirmDeleteComment = async () => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/comments/${itemToDelete}`, {\r\n        params: {\r\n          adminId: loggedInAdmin.adminId\r\n        }\r\n      });\r\n      setComments(comments.filter(comment => comment.commentId !== itemToDelete));\r\n      setIsDeleteCommentDialogOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Error deleting comment:\", error);\r\n      alert(\"Failed to delete comment. You may not have permission.\");\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n        setShowCloseButton(true);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleClosePost = () => {\r\n    setNewPostContent('');\r\n    setImagePreview(null);\r\n    setShowCloseButton(false);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"adhome\">\r\n      <AdNavBar />  {/* Include the AdNavBar component here */}\r\n      <b className=\"HWildcat\">WILDCAT</b> {/* Add Wildcat element here */}\r\n\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"post-container\">\r\n          <div className=\"logo-container\">\r\n            <img src={profilePicture || defaultProfile} alt=\"Admin Avatar\" className=\"admins-dp\" />\r\n          </div>\r\n          <div className=\"post-form\">\r\n            <form onSubmit={handlePostSubmit}>\r\n              <div className=\"input-container\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"post-input\"\r\n                  value={newPostContent}\r\n                  onChange={e => setNewPostContent(e.target.value)}\r\n                  placeholder=\"What's happening in your day, Wildcat?\"\r\n                />\r\n                {showCloseButton && (\r\n                  <button type=\"button\" className=\"close-button\" onClick={handleClosePost}>\r\n                    ×\r\n                  </button>\r\n                )}\r\n              </div>\r\n              <div className=\"post-subcontainer\">\r\n                <div className=\"post-subcontainer-icons\">\r\n                  <label htmlFor=\"file-upload\">\r\n                    <img className=\"gallery-icon\" alt=\"\" src=\"/gallery.png\" />\r\n                  </label>\r\n                  <input\r\n                    ref={fileInputRef}\r\n                    id=\"file-upload\"\r\n                    type=\"file\"\r\n                    className=\"file-input\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={handleFileChange}\r\n                  />\r\n                </div>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"post-button\"\r\n                  variant=\"contained\"\r\n                  sx={{\r\n                    borderRadius: \"10px\",\r\n                    width: 60,\r\n                    height: 30,\r\n                    backgroundColor: \"#8A252C\",\r\n                    \"&:hover\": { backgroundColor: \"#A91D3A\" }\r\n                  }}\r\n                >\r\n                  POST\r\n                </Button>\r\n              </div>\r\n            </form>\r\n            {imagePreview && (\r\n              <div className=\"image-preview\">\r\n                <img src={imagePreview} alt=\"Preview\" style={{ width: '100px', height: '100px' }} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"post-list\">\r\n          {posts.map((post) => (\r\n            <div key={post.postId} className=\"post-card\">\r\n              <div className=\"card-container\">\r\n                <div className=\"name-container\">\r\n                  <img src={adminProfilePictures[post.adminId] || defaultProfile} alt=\"Admin Avatar\" />\r\n                  <h5>{post.fullName} ({post.idNumber})</h5>\r\n                  {loggedInAdmin && loggedInAdmin.adminId === post.adminId && (\r\n                    <img\r\n                      src=\"/delete.png\"\r\n                      alt=\"Delete\"\r\n                      className=\"delete-icon\"\r\n                      onClick={() => setItemToDelete(post.postId)}\r\n                      style={{ cursor: 'pointer', width: '20px', height: '20px', marginLeft: 'auto' }}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div className=\"timestamp\">\r\n                  <span className=\"formatted-date\">{moment(post.timestamp).format('dddd, MMMM D, YYYY [at] h:mm A')}</span>\r\n                  <br />\r\n                  <span className=\"relative-time\">{moment(post.timestamp).fromNow()}</span>\r\n                </div>\r\n                <div className=\"card-contents\">\r\n                  <p>{post.content}</p>\r\n                  {post.image && (\r\n                    <img\r\n                      className=\"post-image\"\r\n                      alt=\"Post\"\r\n                      src={post.image}\r\n                      style={{ maxWidth: '100%', height: 'auto' }}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div className=\"footer-line\" />\r\n                <div className=\"footer-actions\">\r\n                  <div className=\"footer-icons\">\r\n                    <button \r\n                      onClick={() => handleLike(post.postId)} \r\n                      className={`like-button ${post.likedBy.includes(loggedInAdmin?.adminId) ? 'active' : ''}`}\r\n                    >\r\n                      <img src=\"/t-up.png\" alt=\"Thumbs Up\" /> {post.likes}\r\n                    </button>\r\n                    <button \r\n                      onClick={() => handleDislike(post.postId)} \r\n                      className={`dislike-button ${post.dislikedBy.includes(loggedInAdmin?.adminId) ? 'active' : ''}`}\r\n                    >\r\n                      <img src=\"/t-down.png\" alt=\"Thumbs Down\" /> {post.dislikes}\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"footer-comments\">\r\n                    <button className=\"comment-button\" onClick={() => setCurrentPostId(post.postId)}>Comment</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      {/* Add dialogs for deleting posts, comments, etc. */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdHome;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}