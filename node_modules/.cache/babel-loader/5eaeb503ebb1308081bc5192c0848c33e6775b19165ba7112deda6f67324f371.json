{"ast":null,"code":"var _jsxFileName = \"/Users/richardmolina/Documents/GitHub/ADMIN_TECHHIVE_FRONTEND/src/admin pages/ADHome/AdHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport Loadable from 'react-loadable';\nimport moment from 'moment';\nimport AdNavBar from \"../../components/AdNavBar\";\nimport \"./AdHome.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdComment = Loadable({\n  loader: () => import('./AdComment'),\n  loading: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 18\n  }, this)\n});\nconst AdHome = () => {\n  _s();\n  const [newPostContent, setNewPostContent] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [loggedInAdmin, setLoggedInAdmin] = useState(null);\n  const [loggedInSuperUser, setLoggedInSuperUser] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [adminProfilePictures, setAdminProfilePictures] = useState({});\n  const [superUserProfilePictures, setSuperUserProfilePictures] = useState({});\n  const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);\n  const [currentPostId, setCurrentPostId] = useState(null);\n  const defaultProfile = '/dp.png'; // Default profile picture\n  const fileInputRef = useRef(null);\n\n  // Fetch logged-in admin data from local storage\n  useEffect(() => {\n    const fetchLoggedInAdmin = async () => {\n      const storedAdmin = JSON.parse(localStorage.getItem(\"loggedInAdmin\"));\n      if (storedAdmin && storedAdmin.adminname) {\n        try {\n          const response = await axios.get(`http://localhost:8080/admin/getByAdminname?adminname=${storedAdmin.adminname}`);\n          const adminData = response.data;\n          if (adminData && adminData.adminId) {\n            setLoggedInAdmin(adminData);\n          }\n        } catch (error) {\n          console.error(\"Error fetching admin data:\", error);\n        }\n      }\n    };\n    fetchLoggedInAdmin();\n  }, []);\n\n  // Fetch logged-in superuser data from local storage\n  useEffect(() => {\n    const fetchLoggedInSuperUser = async () => {\n      const storedSuperUser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\"));\n      if (storedSuperUser && storedSuperUser.superusername) {\n        try {\n          const response = await axios.get(`http://localhost:8080/superuser/getBySuperUsername?superusername=${storedSuperUser.superusername}`);\n          setLoggedInSuperUser(response.data);\n        } catch (error) {\n          console.error(\"Error fetching superuser data:\", error);\n        }\n      }\n    };\n    fetchLoggedInSuperUser();\n  }, []);\n\n  // Fetch profile pictures for admins\n  const fetchAdminProfilePicture = useCallback(async adminId => {\n    try {\n      const response = await fetch(`http://localhost:8080/admin/profile/getProfilePicture/${adminId}`);\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        const imageUrl = URL.createObjectURL(imageBlob);\n        setAdminProfilePictures(prev => ({\n          ...prev,\n          [adminId]: imageUrl\n        }));\n      } else {\n        setAdminProfilePictures(prev => ({\n          ...prev,\n          [adminId]: defaultProfile\n        }));\n      }\n    } catch (error) {\n      setAdminProfilePictures(prev => ({\n        ...prev,\n        [adminId]: defaultProfile\n      }));\n    }\n  }, []);\n\n  // Fetch profile pictures for superusers\n  const fetchSuperUserProfilePicture = useCallback(async superuserId => {\n    try {\n      const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        const imageUrl = URL.createObjectURL(imageBlob);\n        setSuperUserProfilePictures(prev => ({\n          ...prev,\n          [superuserId]: imageUrl\n        }));\n      } else {\n        setSuperUserProfilePictures(prev => ({\n          ...prev,\n          [superuserId]: defaultProfile\n        }));\n      }\n    } catch (error) {\n      setSuperUserProfilePictures(prev => ({\n        ...prev,\n        [superuserId]: defaultProfile\n      }));\n    }\n  }, []);\n\n  // Fetch posts and load admin/superuser profile pictures\n  useEffect(() => {\n    const fetchPostsAndPictures = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/posts\");\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setPosts(sortedPosts);\n        const adminIds = new Set();\n        const superUserIds = new Set();\n        sortedPosts.forEach(post => {\n          if (post.adminId) {\n            adminIds.add(post.adminId);\n          }\n          if (post.superuserId) {\n            superUserIds.add(post.superuserId);\n          }\n        });\n        adminIds.forEach(adminId => fetchAdminProfilePicture(adminId));\n        superUserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPostsAndPictures();\n  }, [fetchAdminProfilePicture, fetchSuperUserProfilePicture]);\n\n  // Handle input change for post creation\n  const handlePostInputChange = e => {\n    const content = e.target.value;\n    setNewPostContent(content);\n  };\n\n  // Handle image upload for post creation\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  // Handle post submission\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    if (!newPostContent && !imagePreview) {\n      alert(\"Please enter a post or select a picture before submitting.\");\n      return;\n    }\n    const newPost = {\n      content: newPostContent,\n      image: imagePreview,\n      adminId: loggedInAdmin === null || loggedInAdmin === void 0 ? void 0 : loggedInAdmin.adminId,\n      fullName: loggedInAdmin === null || loggedInAdmin === void 0 ? void 0 : loggedInAdmin.fullName,\n      idNumber: loggedInAdmin === null || loggedInAdmin === void 0 ? void 0 : loggedInAdmin.idNumber,\n      isVerified: false,\n      likes: 0,\n      dislikes: 0\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8080/posts/add\", newPost, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(prevPosts => [response.data, ...prevPosts]);\n      setNewPostContent(\"\");\n      setImagePreview(null);\n    } catch (error) {\n      console.error(\"Error posting data:\", error);\n    }\n  };\n\n  // Handle post likes\n  const handleLike = async postId => {\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/like`, {\n        userId: loggedInAdmin ? loggedInAdmin.adminId : loggedInSuperUser.superuserId,\n        isAdmin: !!loggedInAdmin // `true` if admin, `false` if superuser\n      });\n      const updatedPost = response.data;\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n\n  // Handle post dislikes\n  const handleDislike = async postId => {\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/dislike`, {\n        userId: loggedInAdmin ? loggedInAdmin.adminId : loggedInSuperUser.superuserId,\n        isAdmin: !!loggedInAdmin // `true` if admin, `false` if superuser\n      });\n      const updatedPost = response.data;\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n\n  // Handle opening comments dialog\n  const handleOpenComments = async postId => {\n    setCurrentPostId(postId);\n    try {\n      const [commentsResponse, postResponse] = await Promise.all([axios.get(`http://localhost:8080/comments/${postId}`), axios.get(`http://localhost:8080/posts/${postId}`)]);\n      const sortedComments = commentsResponse.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(comment => ({\n        ...comment,\n        relativeTime: moment(comment.timestamp).fromNow()\n      }));\n      setComments(sortedComments);\n    } catch (error) {\n      console.error(\"Error fetching comments or post details:\", error);\n    }\n    setIsCommentDialogOpen(true);\n  };\n\n  // Handle adding a comment\n  const handleAddComment = async newComment => {\n    if (newComment.trim() === '') return;\n    const comment = {\n      content: newComment,\n      postId: currentPostId,\n      adminId: loggedInAdmin.adminId,\n      fullName: loggedInAdmin.fullName,\n      idNumber: loggedInAdmin.idNumber\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/comments/add', comment);\n      const newCommentWithRelativeTime = {\n        ...response.data,\n        relativeTime: moment(response.data.timestamp).fromNow()\n      };\n      setComments(prevComments => [newCommentWithRelativeTime, ...prevComments]);\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n\n  // Formatting timestamps\n  const formatTimestamp = timestamp => moment(timestamp).format('dddd, MMMM D, YYYY [at] h:mm A');\n  const getRelativeTime = timestamp => moment(timestamp).fromNow();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adhome\",\n    children: [/*#__PURE__*/_jsxDEV(AdNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handlePostSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"post-input\",\n            value: newPostContent,\n            onChange: handlePostInputChange,\n            placeholder: \"What's happening?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: fileInputRef,\n            type: \"file\",\n            className: \"file-input\",\n            onChange: handleFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-list\",\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.adminId ? adminProfilePictures[post.adminId] : superUserProfilePictures[post.superuserId],\n                alt: \"Profile Avatar\",\n                className: \"profile-avatar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [post.fullName, \" (\", post.idNumber, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timestamp\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"formatted-date\",\n                children: formatTimestamp(post.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"relative-time\",\n                children: getRelativeTime(post.timestamp)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.image,\n                alt: \"Post\",\n                className: \"post-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleLike(post.postId),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/t-up.png\",\n                  alt: \"Thumbs Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this), \" \", post.likes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDislike(post.postId),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/t-down.png\",\n                  alt: \"Thumbs Down\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), \" \", post.dislikes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleOpenComments(post.postId),\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 17\n            }, this)]\n          }, post.postId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isCommentDialogOpen,\n      onClose: () => setIsCommentDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [comment.fullName, \" (\", comment.idNumber, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: comment.relativeTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, comment.commentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a comment...\",\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              handleAddComment(e.target.value);\n              e.target.value = '';\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(AdHome, \"gCkWVTggqwupgju6+QPyljXXpH0=\");\n_c = AdHome;\nexport default AdHome;\nvar _c;\n$RefreshReg$(_c, \"AdHome\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","Button","Dialog","DialogTitle","DialogContent","DialogActions","Loadable","moment","AdNavBar","jsxDEV","_jsxDEV","AdComment","loader","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","AdHome","_s","newPostContent","setNewPostContent","posts","setPosts","imagePreview","setImagePreview","loggedInAdmin","setLoggedInAdmin","loggedInSuperUser","setLoggedInSuperUser","comments","setComments","adminProfilePictures","setAdminProfilePictures","superUserProfilePictures","setSuperUserProfilePictures","isCommentDialogOpen","setIsCommentDialogOpen","currentPostId","setCurrentPostId","defaultProfile","fileInputRef","fetchLoggedInAdmin","storedAdmin","JSON","parse","localStorage","getItem","adminname","response","get","adminData","data","adminId","error","console","fetchLoggedInSuperUser","storedSuperUser","superusername","fetchAdminProfilePicture","fetch","ok","imageBlob","blob","imageUrl","URL","createObjectURL","prev","fetchSuperUserProfilePicture","superuserId","fetchPostsAndPictures","sortedPosts","sort","a","b","Date","timestamp","adminIds","Set","superUserIds","forEach","post","add","handlePostInputChange","e","content","target","value","handleFileChange","event","file","files","reader","FileReader","onloadend","result","readAsDataURL","handlePostSubmit","preventDefault","alert","newPost","image","fullName","idNumber","isVerified","likes","dislikes","headers","prevPosts","handleLike","postId","userId","isAdmin","updatedPost","map","handleDislike","handleOpenComments","commentsResponse","postResponse","Promise","all","sortedComments","comment","relativeTime","fromNow","handleAddComment","newComment","trim","newCommentWithRelativeTime","prevComments","formatTimestamp","format","getRelativeTime","className","onSubmit","type","onChange","placeholder","ref","src","alt","onClick","open","onClose","commentId","onKeyDown","key","_c","$RefreshReg$"],"sources":["/Users/richardmolina/Documents/GitHub/ADMIN_TECHHIVE_FRONTEND/src/admin pages/ADHome/AdHome.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\nimport Loadable from 'react-loadable';\r\nimport moment from 'moment';\r\nimport AdNavBar from \"../../components/AdNavBar\";\r\nimport \"./AdHome.css\";\r\n\r\nconst AdComment = Loadable({\r\n  loader: () => import('./AdComment'),\r\n  loading: () => <div>Loading...</div>,\r\n});\r\n\r\nconst AdHome = () => {\r\n  const [newPostContent, setNewPostContent] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [loggedInAdmin, setLoggedInAdmin] = useState(null);\r\n  const [loggedInSuperUser, setLoggedInSuperUser] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [adminProfilePictures, setAdminProfilePictures] = useState({});\r\n  const [superUserProfilePictures, setSuperUserProfilePictures] = useState({});\r\n  const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);\r\n  const [currentPostId, setCurrentPostId] = useState(null);\r\n  const defaultProfile = '/dp.png'; // Default profile picture\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Fetch logged-in admin data from local storage\r\n  useEffect(() => {\r\n    const fetchLoggedInAdmin = async () => {\r\n      const storedAdmin = JSON.parse(localStorage.getItem(\"loggedInAdmin\"));\r\n      if (storedAdmin && storedAdmin.adminname) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8080/admin/getByAdminname?adminname=${storedAdmin.adminname}`);\r\n          const adminData = response.data;\r\n          if (adminData && adminData.adminId) {\r\n            setLoggedInAdmin(adminData);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching admin data:\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchLoggedInAdmin();\r\n  }, []);\r\n\r\n  // Fetch logged-in superuser data from local storage\r\n  useEffect(() => {\r\n    const fetchLoggedInSuperUser = async () => {\r\n      const storedSuperUser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\"));\r\n      if (storedSuperUser && storedSuperUser.superusername) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8080/superuser/getBySuperUsername?superusername=${storedSuperUser.superusername}`);\r\n          setLoggedInSuperUser(response.data);\r\n        } catch (error) {\r\n          console.error(\"Error fetching superuser data:\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchLoggedInSuperUser();\r\n  }, []);\r\n\r\n  // Fetch profile pictures for admins\r\n  const fetchAdminProfilePicture = useCallback(async (adminId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/admin/profile/getProfilePicture/${adminId}`);\r\n      if (response.ok) {\r\n        const imageBlob = await response.blob();\r\n        const imageUrl = URL.createObjectURL(imageBlob);\r\n        setAdminProfilePictures(prev => ({ ...prev, [adminId]: imageUrl }));\r\n      } else {\r\n        setAdminProfilePictures(prev => ({ ...prev, [adminId]: defaultProfile }));\r\n      }\r\n    } catch (error) {\r\n      setAdminProfilePictures(prev => ({ ...prev, [adminId]: defaultProfile }));\r\n    }\r\n  }, []);\r\n\r\n  // Fetch profile pictures for superusers\r\n  const fetchSuperUserProfilePicture = useCallback(async (superuserId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\r\n      if (response.ok) {\r\n        const imageBlob = await response.blob();\r\n        const imageUrl = URL.createObjectURL(imageBlob);\r\n        setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: imageUrl }));\r\n      } else {\r\n        setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: defaultProfile }));\r\n      }\r\n    } catch (error) {\r\n      setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: defaultProfile }));\r\n    }\r\n  }, []);\r\n\r\n  // Fetch posts and load admin/superuser profile pictures\r\n  useEffect(() => {\r\n    const fetchPostsAndPictures = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/posts\");\r\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n        setPosts(sortedPosts);\r\n\r\n        const adminIds = new Set();\r\n        const superUserIds = new Set();\r\n\r\n        sortedPosts.forEach(post => {\r\n          if (post.adminId) {\r\n            adminIds.add(post.adminId);\r\n          }\r\n          if (post.superuserId) {\r\n            superUserIds.add(post.superuserId);\r\n          }\r\n        });\r\n\r\n        adminIds.forEach(adminId => fetchAdminProfilePicture(adminId));\r\n        superUserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPostsAndPictures();\r\n  }, [fetchAdminProfilePicture, fetchSuperUserProfilePicture]);\r\n\r\n  // Handle input change for post creation\r\n  const handlePostInputChange = (e) => {\r\n    const content = e.target.value;\r\n    setNewPostContent(content);\r\n  };\r\n\r\n  // Handle image upload for post creation\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // Handle post submission\r\n  const handlePostSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!newPostContent && !imagePreview) {\r\n      alert(\"Please enter a post or select a picture before submitting.\");\r\n      return;\r\n    }\r\n\r\n    const newPost = {\r\n      content: newPostContent,\r\n      image: imagePreview,\r\n      adminId: loggedInAdmin?.adminId,\r\n      fullName: loggedInAdmin?.fullName,\r\n      idNumber: loggedInAdmin?.idNumber,\r\n      isVerified: false,\r\n      likes: 0,\r\n      dislikes: 0,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/posts/add\", newPost, {\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      setPosts(prevPosts => [response.data, ...prevPosts]);\r\n      setNewPostContent(\"\");\r\n      setImagePreview(null);\r\n    } catch (error) {\r\n      console.error(\"Error posting data:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle post likes\r\n  const handleLike = async (postId) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/like`, {\r\n        userId: loggedInAdmin ? loggedInAdmin.adminId : loggedInSuperUser.superuserId,\r\n        isAdmin: !!loggedInAdmin  // `true` if admin, `false` if superuser\r\n      });\r\n      const updatedPost = response.data;\r\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\r\n    } catch (error) {\r\n      console.error(\"Error liking post:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle post dislikes\r\n  const handleDislike = async (postId) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/dislike`, {\r\n        userId: loggedInAdmin ? loggedInAdmin.adminId : loggedInSuperUser.superuserId,\r\n        isAdmin: !!loggedInAdmin  // `true` if admin, `false` if superuser\r\n      });\r\n      const updatedPost = response.data;\r\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\r\n    } catch (error) {\r\n      console.error(\"Error disliking post:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle opening comments dialog\r\n  const handleOpenComments = async (postId) => {\r\n    setCurrentPostId(postId);\r\n    try {\r\n      const [commentsResponse, postResponse] = await Promise.all([\r\n        axios.get(`http://localhost:8080/comments/${postId}`),\r\n        axios.get(`http://localhost:8080/posts/${postId}`)\r\n      ]);\r\n      const sortedComments = commentsResponse.data\r\n        .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\r\n        .map(comment => ({\r\n          ...comment,\r\n          relativeTime: moment(comment.timestamp).fromNow()\r\n        }));\r\n      setComments(sortedComments);\r\n    } catch (error) {\r\n      console.error(\"Error fetching comments or post details:\", error);\r\n    }\r\n    setIsCommentDialogOpen(true);\r\n  };\r\n\r\n  // Handle adding a comment\r\n  const handleAddComment = async (newComment) => {\r\n    if (newComment.trim() === '') return;\r\n\r\n    const comment = {\r\n      content: newComment,\r\n      postId: currentPostId,\r\n      adminId: loggedInAdmin.adminId,\r\n      fullName: loggedInAdmin.fullName,\r\n      idNumber: loggedInAdmin.idNumber,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/comments/add', comment);\r\n      const newCommentWithRelativeTime = {\r\n        ...response.data,\r\n        relativeTime: moment(response.data.timestamp).fromNow()\r\n      };\r\n      setComments(prevComments => [newCommentWithRelativeTime, ...prevComments]);\r\n    } catch (error) {\r\n      console.error(\"Error adding comment:\", error);\r\n    }\r\n  };\r\n\r\n  // Formatting timestamps\r\n  const formatTimestamp = (timestamp) => moment(timestamp).format('dddd, MMMM D, YYYY [at] h:mm A');\r\n  const getRelativeTime = (timestamp) => moment(timestamp).fromNow();\r\n\r\n  return (\r\n    <div className=\"adhome\">\r\n      <AdNavBar />\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"post-container\">\r\n          <form onSubmit={handlePostSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              className=\"post-input\"\r\n              value={newPostContent}\r\n              onChange={handlePostInputChange}\r\n              placeholder=\"What's happening?\"\r\n            />\r\n            <input\r\n              ref={fileInputRef}\r\n              type=\"file\"\r\n              className=\"file-input\"\r\n              onChange={handleFileChange}\r\n            />\r\n            <Button type=\"submit\">Post</Button>\r\n          </form>\r\n\r\n          <div className=\"post-list\">\r\n            {posts.map((post) => (\r\n              <div key={post.postId} className=\"post-card\">\r\n                <div className=\"name-container\">\r\n                  <img\r\n                    src={post.adminId ? adminProfilePictures[post.adminId] : superUserProfilePictures[post.superuserId]}\r\n                    alt=\"Profile Avatar\"\r\n                    className=\"profile-avatar\"\r\n                  />\r\n                  <h5>{post.fullName} ({post.idNumber})</h5>\r\n                </div>\r\n                <div className=\"timestamp\">\r\n                  <span className=\"formatted-date\">{formatTimestamp(post.timestamp)}</span>\r\n                  <br />\r\n                  <span className=\"relative-time\">{getRelativeTime(post.timestamp)}</span>\r\n                </div>\r\n                <div className=\"post-content\">\r\n                  <p>{post.content}</p>\r\n                  {post.image && <img src={post.image} alt=\"Post\" className=\"post-image\" />}\r\n                </div>\r\n                <div className=\"footer-actions\">\r\n                  <button onClick={() => handleLike(post.postId)}>\r\n                    <img src=\"/t-up.png\" alt=\"Thumbs Up\" /> {post.likes}\r\n                  </button>\r\n                  <button onClick={() => handleDislike(post.postId)}>\r\n                    <img src=\"/t-down.png\" alt=\"Thumbs Down\" /> {post.dislikes}\r\n                  </button>\r\n                  <button onClick={() => handleOpenComments(post.postId)}>Comment</button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <Dialog open={isCommentDialogOpen} onClose={() => setIsCommentDialogOpen(false)}>\r\n        <DialogTitle>Comments</DialogTitle>\r\n        <DialogContent>\r\n          {comments.map((comment) => (\r\n            <div key={comment.commentId} className=\"comment\">\r\n              <div className=\"comment-header\">\r\n                <span>{comment.fullName} ({comment.idNumber})</span>\r\n                <span>{comment.relativeTime}</span>\r\n              </div>\r\n              <p>{comment.content}</p>\r\n            </div>\r\n          ))}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <input type=\"text\" placeholder=\"Add a comment...\" onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n              handleAddComment(e.target.value);\r\n              e.target.value = '';\r\n            }\r\n          }} />\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdHome;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}