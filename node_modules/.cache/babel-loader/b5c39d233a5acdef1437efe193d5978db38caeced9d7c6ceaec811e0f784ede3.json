{"ast":null,"code":"var _jsxFileName = \"/Users/richardmolina/Documents/GitHub/ADMIN_TECHHIVE_FRONTEND/src/admin pages/ADHome/AdHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport Loadable from 'react-loadable';\nimport moment from 'moment';\nimport AdNavBar from \"../../components/AdNavBar\";\nimport \"./AdHome.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdComment = Loadable({\n  loader: () => import('./AdComment'),\n  loading: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 18\n  }, this)\n});\nconst AdHome = () => {\n  _s();\n  const [newPostContent, setNewPostContent] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [currentPostId, setCurrentPostId] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);\n  const [loggedInAdmin, setLoggedInAdmin] = useState(null);\n  const [loggedInSuperUser, setLoggedInSuperUser] = useState(null); // To hold Super User data\n  const [adminProfilePictures, setAdminProfilePictures] = useState({});\n  const [superUserProfilePictures, setSuperUserProfilePictures] = useState({});\n  const defaultProfile = '/dp.png'; // Path to the default profile picture\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    const fetchLoggedInAdmin = async () => {\n      const storedAdmin = JSON.parse(localStorage.getItem(\"loggedInAdmin\"));\n      if (storedAdmin && storedAdmin.adminname) {\n        try {\n          const response = await axios.get(`http://localhost:8080/admin/getByAdminname?adminname=${storedAdmin.adminname}`);\n          const adminData = response.data;\n          if (adminData && adminData.adminId) {\n            setLoggedInAdmin(adminData);\n          }\n        } catch (error) {\n          console.error(\"Error fetching admin data:\", error);\n        }\n      }\n    };\n    fetchLoggedInAdmin();\n  }, []);\n  useEffect(() => {\n    const fetchLoggedInSuperUser = async () => {\n      const storedSuperUser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\"));\n      if (storedSuperUser && storedSuperUser.superusername) {\n        try {\n          const response = await axios.get(`http://localhost:8080/superuser/getBySuperUsername?superusername=${storedSuperUser.superusername}`);\n          setLoggedInSuperUser(response.data);\n        } catch (error) {\n          console.error(\"Error fetching superuser data:\", error);\n        }\n      }\n    };\n    fetchLoggedInSuperUser();\n  }, []);\n  const fetchAdminProfilePicture = useCallback(async adminId => {\n    try {\n      const response = await fetch(`http://localhost:8080/admin/profile/getProfilePicture/${adminId}`);\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        const imageUrl = URL.createObjectURL(imageBlob);\n        setAdminProfilePictures(prev => ({\n          ...prev,\n          [adminId]: imageUrl\n        }));\n      } else {\n        setAdminProfilePictures(prev => ({\n          ...prev,\n          [adminId]: defaultProfile\n        }));\n      }\n    } catch (error) {\n      console.error('Failed to fetch admin profile picture:', error);\n      setAdminProfilePictures(prev => ({\n        ...prev,\n        [adminId]: defaultProfile\n      }));\n    }\n  }, []);\n  const fetchSuperUserProfilePicture = useCallback(async superuserId => {\n    try {\n      const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        const imageUrl = URL.createObjectURL(imageBlob);\n        setSuperUserProfilePictures(prev => ({\n          ...prev,\n          [superuserId]: imageUrl\n        }));\n      } else {\n        setSuperUserProfilePictures(prev => ({\n          ...prev,\n          [superuserId]: defaultProfile\n        }));\n      }\n    } catch (error) {\n      console.error('Failed to fetch superuser profile picture:', error);\n      setSuperUserProfilePictures(prev => ({\n        ...prev,\n        [superuserId]: defaultProfile\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    const fetchPostsAndPictures = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/posts\");\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setPosts(sortedPosts);\n        const adminIds = new Set();\n        const superUserIds = new Set();\n        sortedPosts.forEach(post => {\n          if (post.adminId) {\n            adminIds.add(post.adminId);\n          }\n          if (post.superuserId) {\n            superUserIds.add(post.superuserId);\n          }\n        });\n        adminIds.forEach(adminId => fetchAdminProfilePicture(adminId));\n        superUserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPostsAndPictures();\n  }, [fetchAdminProfilePicture, fetchSuperUserProfilePicture]);\n  const handlePostInputChange = e => {\n    setNewPostContent(e.target.value);\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    if (!newPostContent && !imagePreview) {\n      alert(\"Please enter a post or select a picture before submitting.\");\n      return;\n    }\n    if (!loggedInAdmin) {\n      alert(\"Please log in to post.\");\n      return;\n    }\n    const newPost = {\n      content: newPostContent,\n      image: imagePreview,\n      adminId: loggedInAdmin.adminId,\n      fullName: loggedInAdmin.fullName,\n      idNumber: loggedInAdmin.idNumber,\n      isVerified: false,\n      likes: 0,\n      dislikes: 0\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8080/posts/add\", newPost, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(prevPosts => [response.data, ...prevPosts]);\n      setNewPostContent(\"\");\n      setImagePreview(null);\n    } catch (error) {\n      console.error(\"Error posting data:\", error);\n    }\n  };\n  const handleLike = async postId => {\n    if (!loggedInAdmin && !loggedInSuperUser) {\n      alert(\"Please log in to like posts.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/like`, {}, {\n        params: {\n          userId: loggedInAdmin ? loggedInAdmin.adminId : loggedInSuperUser.superuserId,\n          isAdmin: !!loggedInAdmin\n        }\n      });\n      const updatedPost = response.data;\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n  const handleDislike = async postId => {\n    if (!loggedInAdmin && !loggedInSuperUser) {\n      alert(\"Please log in to dislike posts.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/dislike`, {}, {\n        params: {\n          userId: loggedInAdmin ? loggedInAdmin.adminId : loggedInSuperUser.superuserId,\n          isAdmin: !!loggedInAdmin\n        }\n      });\n      const updatedPost = response.data;\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n  const handleOpenComments = async postId => {\n    setCurrentPostId(postId);\n    try {\n      const [commentsResponse, postResponse] = await Promise.all([axios.get(`http://localhost:8080/comments/${postId}`), axios.get(`http://localhost:8080/posts/${postId}`)]);\n      const sortedComments = commentsResponse.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(comment => ({\n        ...comment,\n        relativeTime: moment(comment.timestamp).fromNow()\n      }));\n      setComments(sortedComments);\n    } catch (error) {\n      console.error(\"Error fetching comments or post details:\", error);\n    }\n    setIsCommentDialogOpen(true);\n  };\n  const handleAddComment = async commentContent => {\n    const comment = {\n      content: commentContent,\n      postId: currentPostId,\n      adminId: loggedInAdmin.adminId,\n      fullName: loggedInAdmin.fullName,\n      idNumber: loggedInAdmin.idNumber\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/comments/add', comment);\n      const newCommentWithRelativeTime = {\n        ...response.data,\n        relativeTime: moment(response.data.timestamp).fromNow()\n      };\n      setComments(prevComments => [newCommentWithRelativeTime, ...prevComments]);\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adhome\",\n    children: [/*#__PURE__*/_jsxDEV(AdNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"HWildcat\",\n      children: \"WILDCAT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-form\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handlePostSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"post-input\",\n                value: newPostContent,\n                onChange: handlePostInputChange,\n                placeholder: \"What's happening in your day, Wildcat?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-subcontainer-icons\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file-upload\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"gallery-icon\",\n                  alt: \"\",\n                  src: \"/gallery.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: fileInputRef,\n                id: \"file-upload\",\n                type: \"file\",\n                className: \"file-input\",\n                style: {\n                  display: \"none\"\n                },\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                className: \"post-button\",\n                children: \"POST\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-preview\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imagePreview,\n                alt: \"Preview\",\n                style: {\n                  width: '100px',\n                  height: '100px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-list\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.adminId ? adminProfilePictures[post.adminId] || defaultProfile : superUserProfilePictures[post.superuserId] || defaultProfile,\n                alt: \"Profile Avatar\",\n                className: \"admins-dp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [post.fullName, \" (\", post.idNumber, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timestamp\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"formatted-date\",\n                children: moment(post.timestamp).format('dddd, MMMM D, YYYY [at] h:mm A')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"relative-time\",\n                children: moment(post.timestamp).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-contents\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 19\n              }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"post-image\",\n                alt: \"Post\",\n                src: post.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleLike(post.postId),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/t-up.png\",\n                  alt: \"Thumbs Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this), \" \", post.likes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDislike(post.postId),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/t-down.png\",\n                  alt: \"Thumbs Down\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 21\n                }, this), \" \", post.dislikes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleOpenComments(post.postId),\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this)\n        }, post.postId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isCommentDialogOpen,\n      onClose: () => setIsCommentDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: comment.relativeTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this)]\n        }, comment.commentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a comment...\",\n          onKeyPress: e => e.key === 'Enter' && handleAddComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(AdHome, \"rXNWv+m0k6vJUYU1Ss/lfKSnaOk=\");\n_c = AdHome;\nexport default AdHome;\nvar _c;\n$RefreshReg$(_c, \"AdHome\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","Button","Dialog","DialogTitle","DialogContent","DialogActions","Loadable","moment","AdNavBar","jsxDEV","_jsxDEV","AdComment","loader","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","AdHome","_s","newPostContent","setNewPostContent","posts","setPosts","selectedFile","setSelectedFile","imagePreview","setImagePreview","currentPostId","setCurrentPostId","comments","setComments","isCommentDialogOpen","setIsCommentDialogOpen","loggedInAdmin","setLoggedInAdmin","loggedInSuperUser","setLoggedInSuperUser","adminProfilePictures","setAdminProfilePictures","superUserProfilePictures","setSuperUserProfilePictures","defaultProfile","fileInputRef","fetchLoggedInAdmin","storedAdmin","JSON","parse","localStorage","getItem","adminname","response","get","adminData","data","adminId","error","console","fetchLoggedInSuperUser","storedSuperUser","superusername","fetchAdminProfilePicture","fetch","ok","imageBlob","blob","imageUrl","URL","createObjectURL","prev","fetchSuperUserProfilePicture","superuserId","fetchPostsAndPictures","sortedPosts","sort","a","b","Date","timestamp","adminIds","Set","superUserIds","forEach","post","add","handlePostInputChange","e","target","value","handleFileChange","event","file","files","reader","FileReader","onloadend","result","readAsDataURL","handlePostSubmit","preventDefault","alert","newPost","content","image","fullName","idNumber","isVerified","likes","dislikes","headers","prevPosts","handleLike","postId","params","userId","isAdmin","updatedPost","map","handleDislike","handleOpenComments","commentsResponse","postResponse","Promise","all","sortedComments","comment","relativeTime","fromNow","handleAddComment","commentContent","newCommentWithRelativeTime","prevComments","className","onSubmit","type","onChange","placeholder","htmlFor","alt","src","ref","id","style","display","variant","width","height","format","onClick","open","onClose","commentId","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/richardmolina/Documents/GitHub/ADMIN_TECHHIVE_FRONTEND/src/admin pages/ADHome/AdHome.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\nimport Loadable from 'react-loadable';\r\nimport moment from 'moment';\r\nimport AdNavBar from \"../../components/AdNavBar\";\r\nimport \"./AdHome.css\";\r\n\r\nconst AdComment = Loadable({\r\n  loader: () => import('./AdComment'),\r\n  loading: () => <div>Loading...</div>,\r\n});\r\n\r\nconst AdHome = () => {\r\n  const [newPostContent, setNewPostContent] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [currentPostId, setCurrentPostId] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);\r\n  const [loggedInAdmin, setLoggedInAdmin] = useState(null);\r\n  const [loggedInSuperUser, setLoggedInSuperUser] = useState(null); // To hold Super User data\r\n  const [adminProfilePictures, setAdminProfilePictures] = useState({});\r\n  const [superUserProfilePictures, setSuperUserProfilePictures] = useState({});\r\n  const defaultProfile = '/dp.png'; // Path to the default profile picture\r\n  const fileInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchLoggedInAdmin = async () => {\r\n      const storedAdmin = JSON.parse(localStorage.getItem(\"loggedInAdmin\"));\r\n      if (storedAdmin && storedAdmin.adminname) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8080/admin/getByAdminname?adminname=${storedAdmin.adminname}`);\r\n          const adminData = response.data;\r\n          if (adminData && adminData.adminId) {\r\n            setLoggedInAdmin(adminData);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching admin data:\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchLoggedInAdmin();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchLoggedInSuperUser = async () => {\r\n      const storedSuperUser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\"));\r\n      if (storedSuperUser && storedSuperUser.superusername) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8080/superuser/getBySuperUsername?superusername=${storedSuperUser.superusername}`);\r\n          setLoggedInSuperUser(response.data);\r\n        } catch (error) {\r\n          console.error(\"Error fetching superuser data:\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchLoggedInSuperUser();\r\n  }, []);\r\n\r\n  const fetchAdminProfilePicture = useCallback(async (adminId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/admin/profile/getProfilePicture/${adminId}`);\r\n      if (response.ok) {\r\n        const imageBlob = await response.blob();\r\n        const imageUrl = URL.createObjectURL(imageBlob);\r\n        setAdminProfilePictures(prev => ({ ...prev, [adminId]: imageUrl }));\r\n      } else {\r\n        setAdminProfilePictures(prev => ({ ...prev, [adminId]: defaultProfile }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch admin profile picture:', error);\r\n      setAdminProfilePictures(prev => ({ ...prev, [adminId]: defaultProfile }));\r\n    }\r\n  }, []);\r\n\r\n  const fetchSuperUserProfilePicture = useCallback(async (superuserId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\r\n      if (response.ok) {\r\n        const imageBlob = await response.blob();\r\n        const imageUrl = URL.createObjectURL(imageBlob);\r\n        setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: imageUrl }));\r\n      } else {\r\n        setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: defaultProfile }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch superuser profile picture:', error);\r\n      setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: defaultProfile }));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchPostsAndPictures = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/posts\");\r\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n        setPosts(sortedPosts);\r\n\r\n        const adminIds = new Set();\r\n        const superUserIds = new Set();\r\n\r\n        sortedPosts.forEach(post => {\r\n          if (post.adminId) {\r\n            adminIds.add(post.adminId);\r\n          }\r\n          if (post.superuserId) {\r\n            superUserIds.add(post.superuserId);\r\n          }\r\n        });\r\n\r\n        adminIds.forEach(adminId => fetchAdminProfilePicture(adminId));\r\n        superUserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPostsAndPictures();\r\n  }, [fetchAdminProfilePicture, fetchSuperUserProfilePicture]);\r\n\r\n  const handlePostInputChange = (e) => {\r\n    setNewPostContent(e.target.value);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handlePostSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!newPostContent && !imagePreview) {\r\n      alert(\"Please enter a post or select a picture before submitting.\");\r\n      return;\r\n    }\r\n\r\n    if (!loggedInAdmin) {\r\n      alert(\"Please log in to post.\");\r\n      return;\r\n    }\r\n\r\n    const newPost = {\r\n      content: newPostContent,\r\n      image: imagePreview,\r\n      adminId: loggedInAdmin.adminId,\r\n      fullName: loggedInAdmin.fullName,\r\n      idNumber: loggedInAdmin.idNumber,\r\n      isVerified: false,\r\n      likes: 0,\r\n      dislikes: 0,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/posts/add\", newPost, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(prevPosts => [response.data, ...prevPosts]);\r\n      setNewPostContent(\"\");\r\n      setImagePreview(null);\r\n    } catch (error) {\r\n      console.error(\"Error posting data:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLike = async (postId) => {\r\n    if (!loggedInAdmin && !loggedInSuperUser) {\r\n      alert(\"Please log in to like posts.\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/like`, {}, {\r\n        params: {\r\n          userId: loggedInAdmin ? loggedInAdmin.adminId : loggedInSuperUser.superuserId,\r\n          isAdmin: !!loggedInAdmin\r\n        }\r\n      });\r\n      const updatedPost = response.data;\r\n      setPosts(posts.map(post =>\r\n        post.postId === postId ? updatedPost : post\r\n      ));\r\n    } catch (error) {\r\n      console.error(\"Error liking post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDislike = async (postId) => {\r\n    if (!loggedInAdmin && !loggedInSuperUser) {\r\n      alert(\"Please log in to dislike posts.\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/dislike`, {}, {\r\n        params: {\r\n          userId: loggedInAdmin ? loggedInAdmin.adminId : loggedInSuperUser.superuserId,\r\n          isAdmin: !!loggedInAdmin\r\n        }\r\n      });\r\n      const updatedPost = response.data;\r\n      setPosts(posts.map(post =>\r\n        post.postId === postId ? updatedPost : post\r\n      ));\r\n    } catch (error) {\r\n      console.error(\"Error disliking post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleOpenComments = async (postId) => {\r\n    setCurrentPostId(postId);\r\n    try {\r\n      const [commentsResponse, postResponse] = await Promise.all([\r\n        axios.get(`http://localhost:8080/comments/${postId}`),\r\n        axios.get(`http://localhost:8080/posts/${postId}`)\r\n      ]);\r\n      const sortedComments = commentsResponse.data\r\n        .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\r\n        .map(comment => ({\r\n          ...comment,\r\n          relativeTime: moment(comment.timestamp).fromNow()\r\n        }));\r\n      setComments(sortedComments);\r\n    } catch (error) {\r\n      console.error(\"Error fetching comments or post details:\", error);\r\n    }\r\n    setIsCommentDialogOpen(true);\r\n  };\r\n\r\n  const handleAddComment = async (commentContent) => {\r\n    const comment = {\r\n      content: commentContent,\r\n      postId: currentPostId,\r\n      adminId: loggedInAdmin.adminId,\r\n      fullName: loggedInAdmin.fullName,\r\n      idNumber: loggedInAdmin.idNumber,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/comments/add', comment);\r\n      const newCommentWithRelativeTime = {\r\n        ...response.data,\r\n        relativeTime: moment(response.data.timestamp).fromNow()\r\n      };\r\n      setComments(prevComments => [newCommentWithRelativeTime, ...prevComments]);\r\n    } catch (error) {\r\n      console.error(\"Error adding comment:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"adhome\">\r\n      <AdNavBar />\r\n      <b className=\"HWildcat\">WILDCAT</b>\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"post-container\">\r\n          <div className=\"post-form\">\r\n            <form onSubmit={handlePostSubmit}>\r\n              <div className=\"input-container\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"post-input\"\r\n                  value={newPostContent}\r\n                  onChange={handlePostInputChange}\r\n                  placeholder=\"What's happening in your day, Wildcat?\"\r\n                />\r\n              </div>\r\n              <div className=\"post-subcontainer-icons\">\r\n                <label htmlFor=\"file-upload\">\r\n                  <img className=\"gallery-icon\" alt=\"\" src=\"/gallery.png\" />\r\n                </label>\r\n                <input\r\n                  ref={fileInputRef}\r\n                  id=\"file-upload\"\r\n                  type=\"file\"\r\n                  className=\"file-input\"\r\n                  style={{ display: \"none\" }}\r\n                  onChange={handleFileChange}\r\n                />\r\n                <Button type=\"submit\" variant=\"contained\" className=\"post-button\">POST</Button>\r\n              </div>\r\n              {imagePreview && (\r\n                <div className=\"image-preview\">\r\n                  <img src={imagePreview} alt=\"Preview\" style={{ width: '100px', height: '100px' }} />\r\n                </div>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"post-list\">\r\n          {posts.map((post) => (\r\n            <div key={post.postId} className=\"post-card\">\r\n              <div className=\"card-container\">\r\n                <div className=\"name-container\">\r\n                  <img\r\n                    src={post.adminId\r\n                      ? adminProfilePictures[post.adminId] || defaultProfile\r\n                      : superUserProfilePictures[post.superuserId] || defaultProfile}\r\n                    alt=\"Profile Avatar\"\r\n                    className=\"admins-dp\"\r\n                  />\r\n                  <h5>{post.fullName} ({post.idNumber})</h5>\r\n                </div>\r\n                <div className=\"timestamp\">\r\n                  <span className=\"formatted-date\">{moment(post.timestamp).format('dddd, MMMM D, YYYY [at] h:mm A')}</span>\r\n                  <span className=\"relative-time\">{moment(post.timestamp).fromNow()}</span>\r\n                </div>\r\n                <div className=\"card-contents\">\r\n                  <p>{post.content}</p>\r\n                  {post.image && (\r\n                    <img className=\"post-image\" alt=\"Post\" src={post.image} />\r\n                  )}\r\n                </div>\r\n                <div className=\"footer-actions\">\r\n                  <button onClick={() => handleLike(post.postId)}>\r\n                    <img src=\"/t-up.png\" alt=\"Thumbs Up\" /> {post.likes}\r\n                  </button>\r\n                  <button onClick={() => handleDislike(post.postId)}>\r\n                    <img src=\"/t-down.png\" alt=\"Thumbs Down\" /> {post.dislikes}\r\n                  </button>\r\n                  <button onClick={() => handleOpenComments(post.postId)}>Comment</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <Dialog open={isCommentDialogOpen} onClose={() => setIsCommentDialogOpen(false)}>\r\n        <DialogTitle>Comments</DialogTitle>\r\n        <DialogContent>\r\n          {comments.map((comment) => (\r\n            <div key={comment.commentId}>\r\n              <p>{comment.content}</p>\r\n              <small>{comment.relativeTime}</small>\r\n            </div>\r\n          ))}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <input type=\"text\" placeholder=\"Add a comment...\" onKeyPress={(e) => e.key === 'Enter' && handleAddComment(e.target.value)} />\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdHome;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}