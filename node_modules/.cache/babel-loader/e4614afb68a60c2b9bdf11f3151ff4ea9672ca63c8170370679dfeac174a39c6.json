{"ast":null,"code":"var _jsxFileName = \"/Users/richardmolina/Documents/GitHub/ADMIN_TECHHIVE_FRONTEND/src/admin pages/ADHome/AdHome.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\nimport Loadable from 'react-loadable';\nimport moment from 'moment';\nimport AdNavBar from \"../../components/AdNavBar\";\nimport \"./AdHome.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdComment = Loadable({\n  loader: () => import('./AdComment'),\n  loading: () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 18\n  }, this)\n});\nconst AdHome = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isOverlayVisible, setOverlayVisible] = useState(false);\n  const [newPostContent, setNewPostContent] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [currentPostId, setCurrentPostId] = useState(null);\n  const [currentPostOwner, setCurrentPostOwner] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);\n  const [loggedInAdmin, setLoggedInAdmin] = useState(null);\n  const [loggedInSuperUser, setLoggedInSuperUser] = useState(null); // To hold Super User data\n  const [newComment, setNewComment] = useState('');\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\n  const [isDeleteCommentDialogOpen, setIsDeleteCommentDialogOpen] = useState(false);\n  const [itemToDelete, setItemToDelete] = useState(null);\n  const [profilePicture, setProfilePicture] = useState(null); // State to hold profile picture\n  const [adminProfilePictures, setAdminProfilePictures] = useState({});\n  const defaultProfile = '/dp.png'; // Path to the default profile picture\n  const [inputHasContent, setInputHasContent] = useState(false);\n  const [showCancelButton, setShowCancelButton] = useState(false);\n  const [showCloseButton, setShowCloseButton] = useState(false);\n  const [superUserProfilePictures, setSuperUserProfilePictures] = useState({});\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    const fetchLoggedInAdmin = async () => {\n      const storedAdmin = JSON.parse(localStorage.getItem(\"loggedInAdmin\"));\n      if (storedAdmin && storedAdmin.adminname) {\n        try {\n          const response = await axios.get(`http://localhost:8080/admin/getByAdminname?adminname=${storedAdmin.adminname}`);\n          const adminData = response.data;\n          if (adminData && adminData.adminId) {\n            setLoggedInAdmin(adminData);\n            console.log(\"Fetched admin data with ID:\", adminData.adminId);\n          } else {\n            console.error(\"Admin data is missing an admin ID.\");\n          }\n        } catch (error) {\n          console.error(\"Error fetching admin data:\", error);\n        }\n      }\n    };\n    fetchLoggedInAdmin();\n  }, []);\n  useEffect(() => {\n    const fetchLoggedInSuperUser = async () => {\n      const storedSuperUser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\"));\n      if (storedSuperUser && storedSuperUser.superusername) {\n        try {\n          const response = await axios.get(`http://localhost:8080/superuser/getBySuperUsername?superusername=${storedSuperUser.superusername}`);\n          setLoggedInSuperUser(response.data);\n          console.log(\"Fetched superuser data:\", response.data);\n        } catch (error) {\n          console.error(\"Error fetching superuser data:\", error);\n        }\n      }\n    };\n    fetchLoggedInSuperUser();\n  }, []);\n  const fetchAdminProfilePicture = useCallback(async adminId => {\n    try {\n      const response = await fetch(`http://localhost:8080/admin/profile/getProfilePicture/${adminId}`);\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        const imageUrl = URL.createObjectURL(imageBlob);\n        setAdminProfilePictures(prev => ({\n          ...prev,\n          [adminId]: imageUrl\n        }));\n      } else {\n        setAdminProfilePictures(prev => ({\n          ...prev,\n          [adminId]: defaultProfile\n        }));\n      }\n    } catch (error) {\n      console.error('Failed to fetch admin profile picture:', error);\n      setAdminProfilePictures(prev => ({\n        ...prev,\n        [adminId]: defaultProfile\n      }));\n    }\n  }, []);\n  useEffect(() => {\n    if (loggedInAdmin && loggedInAdmin.adminId) {\n      fetchAdminProfilePicture(loggedInAdmin.adminId);\n    } else {\n      console.error(\"Admin ID is not provided!\");\n    }\n  }, [loggedInAdmin, fetchAdminProfilePicture]);\n  useEffect(() => {\n    const fetchPostsAndPictures = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8080/posts\");\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\n        setPosts(sortedPosts);\n        const adminIds = new Set();\n        const superUserIds = new Set();\n        sortedPosts.forEach(post => {\n          if (post.adminId) {\n            adminIds.add(post.adminId);\n          }\n          if (post.superuserId) {\n            superUserIds.add(post.superuserId);\n          }\n        });\n        adminIds.forEach(adminId => fetchAdminProfilePicture(adminId));\n        superUserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n    fetchPostsAndPictures();\n  }, [fetchAdminProfilePicture]);\n  const fetchSuperUserProfilePicture = useCallback(async superuserId => {\n    try {\n      const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\n      if (response.ok) {\n        const imageBlob = await response.blob();\n        const imageUrl = URL.createObjectURL(imageBlob);\n        setSuperUserProfilePictures(prev => ({\n          ...prev,\n          [superuserId]: imageUrl\n        }));\n      } else {\n        setSuperUserProfilePictures(prev => ({\n          ...prev,\n          [superuserId]: defaultProfile\n        }));\n      }\n    } catch (error) {\n      console.error('Failed to fetch superuser profile picture:', error);\n      setSuperUserProfilePictures(prev => ({\n        ...prev,\n        [superuserId]: defaultProfile\n      }));\n    }\n  }, []);\n  const handlePostInputChange = e => {\n    const content = e.target.value;\n    setNewPostContent(content);\n    setShowCloseButton(content.length > 0 || imagePreview !== null);\n  };\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n        setShowCloseButton(true);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleMicClick = () => {\n    if (!(\"webkitSpeechRecognition\" in window)) return;\n    const recognition = new window.webkitSpeechRecognition();\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.lang = \"en-US\";\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setNewPostContent(prevContent => prevContent + \" \" + transcript);\n    };\n    recognition.onerror = event => {\n      console.log(\"Speech recognition error:\", event.error);\n    };\n    recognition.start();\n  };\n  const handlePostSubmit = async e => {\n    e.preventDefault();\n    if (!newPostContent && !imagePreview) {\n      alert(\"Please enter a post or select a picture before submitting.\");\n      return;\n    }\n    if (!loggedInAdmin) {\n      alert(\"Please log in to post.\");\n      return;\n    }\n    const newPost = {\n      content: newPostContent,\n      image: imagePreview,\n      adminId: loggedInAdmin.adminId,\n      fullName: loggedInAdmin.fullName,\n      idNumber: loggedInAdmin.idNumber,\n      isVerified: false,\n      likes: 0,\n      dislikes: 0\n    };\n    try {\n      const response = await axios.post(\"http://localhost:8080/posts/add\", newPost, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(prevPosts => [response.data, ...prevPosts]);\n      setNewPostContent(\"\");\n      setSelectedFile(null);\n      setImagePreview(null);\n      setShowCloseButton(false);\n    } catch (error) {\n      console.error(\"Error posting data:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n      }\n    }\n  };\n  const handleLike = async postId => {\n    if (!loggedInAdmin && !loggedInSuperUser) {\n      alert(\"Please log in to like posts.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/like`, {}, {\n        params: {\n          userId: loggedInAdmin ? loggedInAdmin.adminId : loggedInSuperUser.superuserId,\n          isAdmin: !!loggedInAdmin // `true` if admin, `false` if superuser\n        }\n      });\n      const updatedPost = response.data;\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\n    } catch (error) {\n      console.error(\"Error liking post:\", error);\n    }\n  };\n  const handleDislike = async postId => {\n    if (!loggedInAdmin && !loggedInSuperUser) {\n      alert(\"Please log in to dislike posts.\");\n      return;\n    }\n    try {\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/dislike`, {}, {\n        params: {\n          userId: loggedInAdmin ? loggedInAdmin.adminId : loggedInSuperUser.superuserId,\n          isAdmin: !!loggedInAdmin // `true` if admin, `false` if superuser\n        }\n      });\n      const updatedPost = response.data;\n      setPosts(posts.map(post => post.postId === postId ? updatedPost : post));\n    } catch (error) {\n      console.error(\"Error disliking post:\", error);\n    }\n  };\n  const handleOpenComments = async postId => {\n    setCurrentPostId(postId);\n    try {\n      const [commentsResponse, postResponse] = await Promise.all([axios.get(`http://localhost:8080/comments/${postId}`), axios.get(`http://localhost:8080/posts/${postId}`)]);\n      const sortedComments = commentsResponse.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)).map(comment => ({\n        ...comment,\n        relativeTime: moment(comment.timestamp).fromNow()\n      }));\n      setComments(sortedComments);\n      setCurrentPostOwner(postResponse.data.adminId);\n    } catch (error) {\n      console.error(\"Error fetching comments or post details:\", error);\n    }\n    setIsCommentDialogOpen(true);\n  };\n  const handleCloseComments = () => {\n    setIsCommentDialogOpen(false);\n    setCurrentPostId(null);\n  };\n  const handleAddComment = async () => {\n    if (newComment.trim() === '') return;\n    const comment = {\n      content: newComment,\n      postId: currentPostId,\n      adminId: loggedInAdmin.adminId,\n      fullName: loggedInAdmin.fullName,\n      idNumber: loggedInAdmin.idNumber\n    };\n    try {\n      const response = await axios.post('http://localhost:8080/comments/add', comment);\n      const newCommentWithRelativeTime = {\n        ...response.data,\n        relativeTime: moment(response.data.timestamp).fromNow()\n      };\n      setComments(prevComments => [newCommentWithRelativeTime, ...prevComments]);\n      setNewComment('');\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n      if (error.response) {\n        console.error(\"Response data:\", error.response.data);\n        console.error(\"Response status:\", error.response.status);\n      }\n    }\n  };\n  const handleDeletePost = postId => {\n    if (!loggedInAdmin) {\n      alert(\"Please log in to delete posts.\");\n      return;\n    }\n    setItemToDelete(postId);\n    setIsDeletePostDialogOpen(true);\n  };\n  const handleDeleteComment = (commentId, commentAdminId) => {\n    if (!loggedInAdmin) {\n      alert(\"Please log in to delete comments.\");\n      return;\n    }\n    if (loggedInAdmin.adminId === commentAdminId || loggedInAdmin.adminId === currentPostOwner) {\n      setItemToDelete(commentId);\n      setIsDeleteCommentDialogOpen(true);\n    } else {\n      alert(\"You don't have permission to delete this comment.\");\n    }\n  };\n  const confirmDeletePost = async () => {\n    try {\n      await axios.delete(`http://localhost:8080/posts/${itemToDelete}`);\n      setPosts(posts.filter(post => post.postId !== itemToDelete));\n      setIsDeletePostDialogOpen(false);\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n    }\n  };\n  const confirmDeleteComment = async () => {\n    try {\n      await axios.delete(`http://localhost:8080/comments/${itemToDelete}`, {\n        params: {\n          adminId: loggedInAdmin.adminId\n        }\n      });\n      setComments(comments.filter(comment => comment.commentId !== itemToDelete));\n      setIsDeleteCommentDialogOpen(false);\n    } catch (error) {\n      console.error(\"Error deleting comment:\", error);\n      alert(\"Failed to delete comment. You may not have permission.\");\n    }\n  };\n  const formatTimestamp = timestamp => {\n    const momentDate = moment(timestamp);\n    return momentDate.format('dddd, MMMM D, YYYY [at] h:mm A');\n  };\n  const getRelativeTime = timestamp => {\n    return moment(timestamp).fromNow();\n  };\n  const handleClosePost = () => {\n    setNewPostContent('');\n    setImagePreview(null);\n    setShowCloseButton(false);\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"adhome\",\n    children: [/*#__PURE__*/_jsxDEV(AdNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      className: \"HWildcat\",\n      children: \"WILDCAT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-form\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handlePostSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"post-input\",\n                value: newPostContent,\n                onChange: handlePostInputChange,\n                placeholder: \"What's happening in your day, Wildcat?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-subcontainer-icons\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"file-upload\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"gallery-icon\",\n                  alt: \"\",\n                  src: \"/gallery.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: fileInputRef,\n                id: \"file-upload\",\n                type: \"file\",\n                className: \"file-input\",\n                style: {\n                  display: \"none\"\n                },\n                onChange: handleFileChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"contained\",\n                className: \"post-button\",\n                children: \"POST\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), imagePreview && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-preview\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imagePreview,\n                alt: \"Preview\",\n                style: {\n                  width: '100px',\n                  height: '100px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-list\",\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.adminId ? adminProfilePictures[post.adminId] || defaultProfile : superUserProfilePictures[post.superuserId] || defaultProfile,\n                alt: \"Profile Avatar\",\n                className: \"admins-dp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: [post.fullName, \" (\", post.idNumber, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timestamp\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"formatted-date\",\n                children: moment(post.timestamp).format('dddd, MMMM D, YYYY [at] h:mm A')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"relative-time\",\n                children: moment(post.timestamp).fromNow()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-contents\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 19\n              }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"post-image\",\n                alt: \"Post\",\n                src: post.image\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"footer-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleLike(post.postId),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/t-up.png\",\n                  alt: \"Thumbs Up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this), \" \", post.likes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDislike(post.postId),\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/t-down.png\",\n                  alt: \"Thumbs Down\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 21\n                }, this), \" \", post.dislikes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleOpenComments(post.postId),\n                children: \"Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this)\n        }, post.postId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isCommentDialogOpen,\n      onClose: () => setIsCommentDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: comment.relativeTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this)]\n        }, comment.commentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a comment...\",\n          onKeyPress: e => e.key === 'Enter' && handleAddComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 390,\n    columnNumber: 5\n  }, this);\n};\n_s(AdHome, \"x+tfuXO9T9Aj/ijTdAOZACWg1ag=\", false, function () {\n  return [useNavigate];\n});\n_c = AdHome;\nexport default AdHome;\nvar _c;\n$RefreshReg$(_c, \"AdHome\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","axios","useNavigate","Button","Dialog","DialogTitle","DialogContent","DialogActions","Loadable","moment","AdNavBar","jsxDEV","_jsxDEV","AdComment","loader","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","AdHome","_s","navigate","isOverlayVisible","setOverlayVisible","newPostContent","setNewPostContent","posts","setPosts","selectedFile","setSelectedFile","imagePreview","setImagePreview","currentPostId","setCurrentPostId","currentPostOwner","setCurrentPostOwner","comments","setComments","isCommentDialogOpen","setIsCommentDialogOpen","loggedInAdmin","setLoggedInAdmin","loggedInSuperUser","setLoggedInSuperUser","newComment","setNewComment","isDeletePostDialogOpen","setIsDeletePostDialogOpen","isDeleteCommentDialogOpen","setIsDeleteCommentDialogOpen","itemToDelete","setItemToDelete","profilePicture","setProfilePicture","adminProfilePictures","setAdminProfilePictures","defaultProfile","inputHasContent","setInputHasContent","showCancelButton","setShowCancelButton","showCloseButton","setShowCloseButton","superUserProfilePictures","setSuperUserProfilePictures","fileInputRef","fetchLoggedInAdmin","storedAdmin","JSON","parse","localStorage","getItem","adminname","response","get","adminData","data","adminId","console","log","error","fetchLoggedInSuperUser","storedSuperUser","superusername","fetchAdminProfilePicture","fetch","ok","imageBlob","blob","imageUrl","URL","createObjectURL","prev","fetchPostsAndPictures","sortedPosts","sort","a","b","Date","timestamp","adminIds","Set","superUserIds","forEach","post","add","superuserId","fetchSuperUserProfilePicture","handlePostInputChange","e","content","target","value","length","handleFileChange","event","file","files","reader","FileReader","onloadend","result","readAsDataURL","handleMicClick","window","recognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","transcript","results","prevContent","onerror","start","handlePostSubmit","preventDefault","alert","newPost","image","fullName","idNumber","isVerified","likes","dislikes","headers","prevPosts","status","handleLike","postId","params","userId","isAdmin","updatedPost","map","handleDislike","handleOpenComments","commentsResponse","postResponse","Promise","all","sortedComments","comment","relativeTime","fromNow","handleCloseComments","handleAddComment","trim","newCommentWithRelativeTime","prevComments","handleDeletePost","handleDeleteComment","commentId","commentAdminId","confirmDeletePost","delete","filter","confirmDeleteComment","formatTimestamp","momentDate","format","getRelativeTime","handleClosePost","current","className","onSubmit","type","onChange","placeholder","htmlFor","alt","src","ref","id","style","display","variant","width","height","onClick","open","onClose","onKeyPress","key","_c","$RefreshReg$"],"sources":["/Users/richardmolina/Documents/GitHub/ADMIN_TECHHIVE_FRONTEND/src/admin pages/ADHome/AdHome.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogActions } from \"@mui/material\";\r\nimport Loadable from 'react-loadable';\r\nimport moment from 'moment';\r\nimport AdNavBar from \"../../components/AdNavBar\";\r\nimport \"./AdHome.css\";\r\n\r\nconst AdComment = Loadable({\r\n  loader: () => import('./AdComment'),\r\n  loading: () => <div>Loading...</div>,\r\n});\r\n\r\nconst AdHome = () => {\r\n  const navigate = useNavigate();\r\n  const [isOverlayVisible, setOverlayVisible] = useState(false);\r\n  const [newPostContent, setNewPostContent] = useState(\"\");\r\n  const [posts, setPosts] = useState([]);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [currentPostId, setCurrentPostId] = useState(null);\r\n  const [currentPostOwner, setCurrentPostOwner] = useState(null);\r\n  const [comments, setComments] = useState([]);\r\n  const [isCommentDialogOpen, setIsCommentDialogOpen] = useState(false);\r\n  const [loggedInAdmin, setLoggedInAdmin] = useState(null);\r\n  const [loggedInSuperUser, setLoggedInSuperUser] = useState(null); // To hold Super User data\r\n  const [newComment, setNewComment] = useState('');\r\n  const [isDeletePostDialogOpen, setIsDeletePostDialogOpen] = useState(false);\r\n  const [isDeleteCommentDialogOpen, setIsDeleteCommentDialogOpen] = useState(false);\r\n  const [itemToDelete, setItemToDelete] = useState(null);\r\n  const [profilePicture, setProfilePicture] = useState(null); // State to hold profile picture\r\n  const [adminProfilePictures, setAdminProfilePictures] = useState({});\r\n  const defaultProfile = '/dp.png'; // Path to the default profile picture\r\n  const [inputHasContent, setInputHasContent] = useState(false);\r\n  const [showCancelButton, setShowCancelButton] = useState(false);\r\n  const [showCloseButton, setShowCloseButton] = useState(false);\r\n  const [superUserProfilePictures, setSuperUserProfilePictures] = useState({});\r\n\r\n  const fileInputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchLoggedInAdmin = async () => {\r\n      const storedAdmin = JSON.parse(localStorage.getItem(\"loggedInAdmin\"));\r\n      if (storedAdmin && storedAdmin.adminname) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8080/admin/getByAdminname?adminname=${storedAdmin.adminname}`);\r\n          const adminData = response.data;\r\n\r\n          if (adminData && adminData.adminId) {\r\n            setLoggedInAdmin(adminData);\r\n            console.log(\"Fetched admin data with ID:\", adminData.adminId);\r\n          } else {\r\n            console.error(\"Admin data is missing an admin ID.\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching admin data:\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchLoggedInAdmin();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchLoggedInSuperUser = async () => {\r\n      const storedSuperUser = JSON.parse(localStorage.getItem(\"loggedInSuperUser\"));\r\n      if (storedSuperUser && storedSuperUser.superusername) {\r\n        try {\r\n          const response = await axios.get(`http://localhost:8080/superuser/getBySuperUsername?superusername=${storedSuperUser.superusername}`);\r\n          setLoggedInSuperUser(response.data);\r\n          console.log(\"Fetched superuser data:\", response.data);\r\n        } catch (error) {\r\n          console.error(\"Error fetching superuser data:\", error);\r\n        }\r\n      }\r\n    };\r\n    fetchLoggedInSuperUser();\r\n  }, []);\r\n\r\n  const fetchAdminProfilePicture = useCallback(async (adminId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/admin/profile/getProfilePicture/${adminId}`);\r\n      if (response.ok) {\r\n        const imageBlob = await response.blob();\r\n        const imageUrl = URL.createObjectURL(imageBlob);\r\n        setAdminProfilePictures(prev => ({ ...prev, [adminId]: imageUrl }));\r\n      } else {\r\n        setAdminProfilePictures(prev => ({ ...prev, [adminId]: defaultProfile }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch admin profile picture:', error);\r\n      setAdminProfilePictures(prev => ({ ...prev, [adminId]: defaultProfile }));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loggedInAdmin && loggedInAdmin.adminId) {\r\n      fetchAdminProfilePicture(loggedInAdmin.adminId);\r\n    } else {\r\n      console.error(\"Admin ID is not provided!\");\r\n    }\r\n  }, [loggedInAdmin, fetchAdminProfilePicture]);\r\n\r\n  useEffect(() => {\r\n    const fetchPostsAndPictures = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:8080/posts\");\r\n        const sortedPosts = response.data.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n        setPosts(sortedPosts);\r\n\r\n        const adminIds = new Set();\r\n        const superUserIds = new Set();\r\n\r\n        sortedPosts.forEach(post => {\r\n          if (post.adminId) {\r\n            adminIds.add(post.adminId);\r\n          }\r\n          if (post.superuserId) {\r\n            superUserIds.add(post.superuserId);\r\n          }\r\n        });\r\n\r\n        adminIds.forEach(adminId => fetchAdminProfilePicture(adminId));\r\n        superUserIds.forEach(superuserId => fetchSuperUserProfilePicture(superuserId));\r\n      } catch (error) {\r\n        console.error(\"Error fetching posts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchPostsAndPictures(); \r\n  }, [fetchAdminProfilePicture]);\r\n\r\n  const fetchSuperUserProfilePicture = useCallback(async (superuserId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:8080/superuser/profile/getProfilePicture/${superuserId}`);\r\n      if (response.ok) {\r\n        const imageBlob = await response.blob();\r\n        const imageUrl = URL.createObjectURL(imageBlob);\r\n        setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: imageUrl }));\r\n      } else {\r\n        setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: defaultProfile }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch superuser profile picture:', error);\r\n      setSuperUserProfilePictures(prev => ({ ...prev, [superuserId]: defaultProfile }));\r\n    }\r\n  }, []);\r\n\r\n  const handlePostInputChange = (e) => {\r\n    const content = e.target.value;\r\n    setNewPostContent(content);\r\n    setShowCloseButton(content.length > 0 || imagePreview !== null);\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setImagePreview(reader.result);\r\n        setShowCloseButton(true);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleMicClick = () => {\r\n    if (!(\"webkitSpeechRecognition\" in window)) return;\r\n    const recognition = new window.webkitSpeechRecognition();\r\n    recognition.continuous = false;\r\n    recognition.interimResults = false;\r\n    recognition.lang = \"en-US\";\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      setNewPostContent((prevContent) => prevContent + \" \" + transcript);\r\n    };\r\n    recognition.onerror = (event) => {\r\n      console.log(\"Speech recognition error:\", event.error);\r\n    };\r\n    recognition.start();\r\n  };\r\n\r\n  const handlePostSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!newPostContent && !imagePreview) {\r\n      alert(\"Please enter a post or select a picture before submitting.\");\r\n      return;\r\n    }\r\n\r\n    if (!loggedInAdmin) {\r\n      alert(\"Please log in to post.\");\r\n      return;\r\n    }\r\n\r\n    const newPost = {\r\n      content: newPostContent,\r\n      image: imagePreview,\r\n      adminId: loggedInAdmin.adminId,\r\n      fullName: loggedInAdmin.fullName,\r\n      idNumber: loggedInAdmin.idNumber,\r\n      isVerified: false,\r\n      likes: 0,\r\n      dislikes: 0,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:8080/posts/add\", newPost, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(prevPosts => [response.data, ...prevPosts]);\r\n      setNewPostContent(\"\");\r\n      setSelectedFile(null);\r\n      setImagePreview(null);\r\n      setShowCloseButton(false);\r\n    } catch (error) {\r\n      console.error(\"Error posting data:\", error);\r\n      if (error.response) {\r\n        console.error(\"Response data:\", error.response.data);\r\n        console.error(\"Response status:\", error.response.status);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLike = async (postId) => {\r\n    if (!loggedInAdmin && !loggedInSuperUser) {\r\n      alert(\"Please log in to like posts.\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/like`, {}, {\r\n        params: {\r\n          userId: loggedInAdmin ? loggedInAdmin.adminId : loggedInSuperUser.superuserId,\r\n          isAdmin: !!loggedInAdmin  // `true` if admin, `false` if superuser\r\n        }\r\n      });\r\n      const updatedPost = response.data;\r\n      setPosts(posts.map(post =>\r\n        post.postId === postId ? updatedPost : post\r\n      ));\r\n    } catch (error) {\r\n      console.error(\"Error liking post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDislike = async (postId) => {\r\n    if (!loggedInAdmin && !loggedInSuperUser) {\r\n      alert(\"Please log in to dislike posts.\");\r\n      return;\r\n    }\r\n    try {\r\n      const response = await axios.post(`http://localhost:8080/posts/${postId}/dislike`, {}, {\r\n        params: {\r\n          userId: loggedInAdmin ? loggedInAdmin.adminId : loggedInSuperUser.superuserId,\r\n          isAdmin: !!loggedInAdmin  // `true` if admin, `false` if superuser\r\n        }\r\n      });\r\n      const updatedPost = response.data;\r\n      setPosts(posts.map(post =>\r\n        post.postId === postId ? updatedPost : post\r\n      ));\r\n    } catch (error) {\r\n      console.error(\"Error disliking post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleOpenComments = async (postId) => {\r\n    setCurrentPostId(postId);\r\n    try {\r\n      const [commentsResponse, postResponse] = await Promise.all([\r\n        axios.get(`http://localhost:8080/comments/${postId}`),\r\n        axios.get(`http://localhost:8080/posts/${postId}`)\r\n      ]);\r\n      const sortedComments = commentsResponse.data\r\n        .sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp))\r\n        .map(comment => ({\r\n          ...comment,\r\n          relativeTime: moment(comment.timestamp).fromNow()\r\n        }));\r\n      setComments(sortedComments);\r\n      setCurrentPostOwner(postResponse.data.adminId);\r\n    } catch (error) {\r\n      console.error(\"Error fetching comments or post details:\", error);\r\n    }\r\n    setIsCommentDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseComments = () => {\r\n    setIsCommentDialogOpen(false);\r\n    setCurrentPostId(null);\r\n  };\r\n\r\n  const handleAddComment = async () => {\r\n    if (newComment.trim() === '') return;\r\n\r\n    const comment = {\r\n      content: newComment,\r\n      postId: currentPostId,\r\n      adminId: loggedInAdmin.adminId,\r\n      fullName: loggedInAdmin.fullName,\r\n      idNumber: loggedInAdmin.idNumber,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/comments/add', comment);\r\n      const newCommentWithRelativeTime = {\r\n        ...response.data,\r\n        relativeTime: moment(response.data.timestamp).fromNow()\r\n      };\r\n      setComments(prevComments => [newCommentWithRelativeTime, ...prevComments]);\r\n      setNewComment('');\r\n    } catch (error) {\r\n      console.error(\"Error adding comment:\", error);\r\n      if (error.response) {\r\n        console.error(\"Response data:\", error.response.data);\r\n        console.error(\"Response status:\", error.response.status);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = (postId) => {\r\n    if (!loggedInAdmin) {\r\n      alert(\"Please log in to delete posts.\");\r\n      return;\r\n    }\r\n    setItemToDelete(postId);\r\n    setIsDeletePostDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteComment = (commentId, commentAdminId) => {\r\n    if (!loggedInAdmin) {\r\n      alert(\"Please log in to delete comments.\");\r\n      return;\r\n    }\r\n    if (loggedInAdmin.adminId === commentAdminId || loggedInAdmin.adminId === currentPostOwner) {\r\n      setItemToDelete(commentId);\r\n      setIsDeleteCommentDialogOpen(true);\r\n    } else {\r\n      alert(\"You don't have permission to delete this comment.\");\r\n    }\r\n  };\r\n\r\n  const confirmDeletePost = async () => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/posts/${itemToDelete}`);\r\n      setPosts(posts.filter(post => post.postId !== itemToDelete));\r\n      setIsDeletePostDialogOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Error deleting post:\", error);\r\n    }\r\n  };\r\n\r\n  const confirmDeleteComment = async () => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/comments/${itemToDelete}`, {\r\n        params: {\r\n          adminId: loggedInAdmin.adminId\r\n        }\r\n      });\r\n      setComments(comments.filter(comment => comment.commentId !== itemToDelete));\r\n      setIsDeleteCommentDialogOpen(false);\r\n    } catch (error) {\r\n      console.error(\"Error deleting comment:\", error);\r\n      alert(\"Failed to delete comment. You may not have permission.\");\r\n    }\r\n  };\r\n\r\n  const formatTimestamp = (timestamp) => {\r\n    const momentDate = moment(timestamp);\r\n    return momentDate.format('dddd, MMMM D, YYYY [at] h:mm A');\r\n  };\r\n\r\n  const getRelativeTime = (timestamp) => {\r\n    return moment(timestamp).fromNow();\r\n  };\r\n\r\n  const handleClosePost = () => {\r\n    setNewPostContent('');\r\n    setImagePreview(null);\r\n    setShowCloseButton(false);\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"adhome\">\r\n      <AdNavBar />\r\n      <b className=\"HWildcat\">WILDCAT</b>\r\n      <div className=\"content-wrapper\">\r\n        <div className=\"post-container\">\r\n          <div className=\"post-form\">\r\n            <form onSubmit={handlePostSubmit}>\r\n              <div className=\"input-container\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"post-input\"\r\n                  value={newPostContent}\r\n                  onChange={handlePostInputChange}\r\n                  placeholder=\"What's happening in your day, Wildcat?\"\r\n                />\r\n              </div>\r\n              <div className=\"post-subcontainer-icons\">\r\n                <label htmlFor=\"file-upload\">\r\n                  <img className=\"gallery-icon\" alt=\"\" src=\"/gallery.png\" />\r\n                </label>\r\n                <input\r\n                  ref={fileInputRef}\r\n                  id=\"file-upload\"\r\n                  type=\"file\"\r\n                  className=\"file-input\"\r\n                  style={{ display: \"none\" }}\r\n                  onChange={handleFileChange}\r\n                />\r\n                <Button type=\"submit\" variant=\"contained\" className=\"post-button\">POST</Button>\r\n              </div>\r\n              {imagePreview && (\r\n                <div className=\"image-preview\">\r\n                  <img src={imagePreview} alt=\"Preview\" style={{ width: '100px', height: '100px' }} />\r\n                </div>\r\n              )}\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"post-list\">\r\n          {posts.map((post) => (\r\n            <div key={post.postId} className=\"post-card\">\r\n              <div className=\"card-container\">\r\n                <div className=\"name-container\">\r\n                  <img\r\n                    src={post.adminId\r\n                      ? adminProfilePictures[post.adminId] || defaultProfile\r\n                      : superUserProfilePictures[post.superuserId] || defaultProfile}\r\n                    alt=\"Profile Avatar\"\r\n                    className=\"admins-dp\"\r\n                  />\r\n                  <h5>{post.fullName} ({post.idNumber})</h5>\r\n                </div>\r\n                <div className=\"timestamp\">\r\n                  <span className=\"formatted-date\">{moment(post.timestamp).format('dddd, MMMM D, YYYY [at] h:mm A')}</span>\r\n                  <span className=\"relative-time\">{moment(post.timestamp).fromNow()}</span>\r\n                </div>\r\n                <div className=\"card-contents\">\r\n                  <p>{post.content}</p>\r\n                  {post.image && (\r\n                    <img className=\"post-image\" alt=\"Post\" src={post.image} />\r\n                  )}\r\n                </div>\r\n                <div className=\"footer-actions\">\r\n                  <button onClick={() => handleLike(post.postId)}>\r\n                    <img src=\"/t-up.png\" alt=\"Thumbs Up\" /> {post.likes}\r\n                  </button>\r\n                  <button onClick={() => handleDislike(post.postId)}>\r\n                    <img src=\"/t-down.png\" alt=\"Thumbs Down\" /> {post.dislikes}\r\n                  </button>\r\n                  <button onClick={() => handleOpenComments(post.postId)}>Comment</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <Dialog open={isCommentDialogOpen} onClose={() => setIsCommentDialogOpen(false)}>\r\n        <DialogTitle>Comments</DialogTitle>\r\n        <DialogContent>\r\n          {comments.map((comment) => (\r\n            <div key={comment.commentId}>\r\n              <p>{comment.content}</p>\r\n              <small>{comment.relativeTime}</small>\r\n            </div>\r\n          ))}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <input type=\"text\" placeholder=\"Add a comment...\" onKeyPress={(e) => e.key === 'Enter' && handleAddComment(e.target.value)} />\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdHome;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}